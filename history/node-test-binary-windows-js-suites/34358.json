{"failedTests":[{"testName":"parallel/test-snapshot-reproducible","timestamp":1747726121516,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #34358","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/34358/","buildNumber":34358,"builtOn":"test-azure_msft-win11_vs2022-arm64-6","nodeVersion":"25.0.0","commitHash":"d2a13695bf1661f942c51f257a9c8d778b77ff2d","callStack":[{"upstreamBuild":70550,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":80042,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":3786,"upstreamProject":"node-daily-master","upstreamUrl":"job/node-daily-master/"}],"tap":{"ok":false,"name":"parallel/test-snapshot-reproducible","id":743,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"0x0: Write magic 143da19\n0x4: Write metadata\n0x35: Write snapshot blob\n0x2357f0: Write IsolateDataSerializeInfo\n0x236ee4: Write EnvSerializeInfo\n0x237dac: Write CodeCacheInfo\n0x0: Write magic 143da19\n0x4: Write metadata\n0x35: Write snapshot blob\n0x2357f0: Write IsolateDataSerializeInfo\n0x236ee4: Write EnvSerializeInfo\n0x237dac: Write CodeCacheInfo\nnode:assert:94\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ [\n+   {\n+     offset: '0x40',\n+     slice1: '00e4deeb34e24bd3ac31332e372e3135',\n+     slice2: '0010e5834ee24bd3ac31332e372e3135'\n+   },\n+   {\n+     offset: '0x196a80',\n+     slice1: '0000030000009802000007150207bd0f',\n+     slice2: '000003000000e900000007150207bd0f'\n+   },\n+   {\n+     offset: '0x196b30',\n+     slice1: '61010001000000000003000000980200',\n+     slice2: '61010001000000000003000000e90000'\n+   },\n+   {\n+     offset: '0x1a6320',\n+     slice1: '9802000007150207bd0f6000000000ca',\n+     slice2: 'e900000007150207bd0f6000000000ca'\n+   },\n+   {\n+     offset: '0x1c2e40',\n+     slice1: '03000000980200009207bd0f61000000',\n+     slice2: '03000000e90000009207bd0f61000000'\n+   },\n+   {\n+     offset: '0x1c5040',\n+     slice1: '00009802000007150207bd0f61000000',\n+     slice2: '0000e900000007150207bd0f61000000'\n+   },\n+   {\n+     offset: '0x1c6da0',\n+     slice1: '0000009802000007150209fd36610000',\n+     slice2: '000000e900000007150209fd36610000'\n+   },\n+   {\n+     offset: '0x1cafd0',\n+     slice1: '00000003000000980200000715020500',\n+     slice2: '00000003000000e90000000715020500'\n+   },\n+   {\n+     offset: '0x1cc6e0',\n+     slice1: '030000009802000007150207c10f6000',\n+     slice2: '03000000e900000007150207c10f6000'\n+   },\n+   {\n+     offset: '0x1d1460',\n+     slice1: '05000500000000000300000098020000',\n+     slice2: '050005000000000003000000e9000000'\n+   },\n+   {\n+     offset: '0x1dbcd0',\n+     slice1: '00000000000300000098020000071502',\n+     slice2: '000000000003000000e9000000071502'\n+   },\n+   {\n+     offset: '0x1dbdc0',\n+     slice1: '00000003000000980200009309b54260',\n+     slice2: '00000003000000e90000009309b54260'\n+   },\n+   {\n+     offset: '0x1ded90',\n+     slice1: '0000030000009802000007150209bd4b',\n+     slice2: '000003000000e900000007150209bd4b'\n+   },\n+   {\n+     offset: '0x1df190',\n+     slice1: '00020000000000030000009802000007',\n+     slice2: '0002000000000003000000e900000007'\n+   },\n+   {\n+     offset: '0x1e2e30',\n+     slice1: '0003000000980200009509114c610000',\n+     slice2: '0003000000e90000009509114c610000'\n+   },\n+   {\n+     offset: '0x1e36c0',\n+     slice1: '00980200009407c10f60000000002f05',\n+     slice2: '00e90000009407c10f60000000002f05'\n+   },\n+   {\n+     offset: '0x1f1500',\n+     slice1: '0000030000009802000007150207c10f',\n+     slice2: '000003000000e900000007150207c10f'\n+   },\n+   {\n+     offset: '0x1f8300',\n+     slice1: '08000000000003000000980200000715',\n+     slice2: '08000000000003000000e90000000715'\n+   },\n+   {\n+     offset: '0x1f84f0',\n+     slice1: '009802000007150207c10f6000000000',\n+     slice2: '00e900000007150207c10f6000000000'\n+   },\n+   {\n+     offset: '0x21e940',\n+     slice1: '61020002000000000003000000980200',\n+     slice2: '61020002000000000003000000e90000'\n+   },\n+   {\n+     offset: '0x21eb10',\n+     slice1: '61020002000000000003000000980200',\n+     slice2: '61020002000000000003000000e90000'\n+   }\n+ ]\n- []\n\n    at Object.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-snapshot-reproducible.js:69:8)\n    at Module._compile (node:internal/modules/cjs/loader:1734:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1899:10)\n    at Module.load (node:internal/modules/cjs/loader:1469:32)\n    at Module._load (node:internal/modules/cjs/loader:1286:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:152:5)\n    at node:internal/main/run_main_module:33:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    {\n      offset: '0x40',\n      slice1: '00e4deeb34e24bd3ac31332e372e3135',\n      slice2: '0010e5834ee24bd3ac31332e372e3135'\n    },\n    {\n      offset: '0x196a80',\n      slice1: '0000030000009802000007150207bd0f',\n      slice2: '000003000000e900000007150207bd0f'\n    },\n    {\n      offset: '0x196b30',\n      slice1: '61010001000000000003000000980200',\n      slice2: '61010001000000000003000000e90000'\n    },\n    {\n      offset: '0x1a6320',\n      slice1: '9802000007150207bd0f6000000000ca',\n      slice2: 'e900000007150207bd0f6000000000ca'\n    },\n    {\n      offset: '0x1c2e40',\n      slice1: '03000000980200009207bd0f61000000',\n      slice2: '03000000e90000009207bd0f61000000'\n    },\n    {\n      offset: '0x1c5040',\n      slice1: '00009802000007150207bd0f61000000',\n      slice2: '0000e900000007150207bd0f61000000'\n    },\n    {\n      offset: '0x1c6da0',\n      slice1: '0000009802000007150209fd36610000',\n      slice2: '000000e900000007150209fd36610000'\n    },\n    {\n      offset: '0x1cafd0',\n      slice1: '00000003000000980200000715020500',\n      slice2: '00000003000000e90000000715020500'\n    },\n    {\n      offset: '0x1cc6e0',\n      slice1: '030000009802000007150207c10f6000',\n      slice2: '03000000e900000007150207c10f6000'\n    },\n    {\n      offset: '0x1d1460',\n      slice1: '05000500000000000300000098020000',\n      slice2: '050005000000000003000000e9000000'\n    },\n    {\n      offset: '0x1dbcd0',\n      slice1: '00000000000300000098020000071502',\n      slice2: '000000000003000000e9000000071502'\n    },\n    {\n      offset: '0x1dbdc0',\n      slice1: '00000003000000980200009309b54260',\n      slice2: '00000003000000e90000009309b54260'\n    },\n    {\n      offset: '0x1ded90',\n      slice1: '0000030000009802000007150209bd4b',\n      slice2: '000003000000e900000007150209bd4b'\n    },\n    {\n      offset: '0x1df190',\n      slice1: '00020000000000030000009802000007',\n      slice2: '0002000000000003000000e900000007'\n    },\n    {\n      offset: '0x1e2e30',\n      slice1: '0003000000980200009509114c610000',\n      slice2: '0003000000e90000009509114c610000'\n    },\n    {\n      offset: '0x1e36c0',\n      slice1: '00980200009407c10f60000000002f05',\n      slice2: '00e90000009407c10f60000000002f05'\n    },\n    {\n      offset: '0x1f1500',\n      slice1: '0000030000009802000007150207c10f',\n      slice2: '000003000000e900000007150207c10f'\n    },\n    {\n      offset: '0x1f8300',\n      slice1: '08000000000003000000980200000715',\n      slice2: '08000000000003000000e90000000715'\n    },\n    {\n      offset: '0x1f84f0',\n      slice1: '009802000007150207c10f6000000000',\n      slice2: '00e900000007150207c10f6000000000'\n    },\n    {\n      offset: '0x21e940',\n      slice1: '61020002000000000003000000980200',\n      slice2: '61020002000000000003000000e90000'\n    },\n    {\n      offset: '0x21eb10',\n      slice1: '61020002000000000003000000980200',\n      slice2: '61020002000000000003000000e90000'\n    }\n  ],\n  expected: [],\n  operator: 'deepStrictEqual'\n}\n\nNode.js v25.0.0-pre"},"time":1763.998,"fullname":"parallel/test-snapshot-reproducible","closingTestPoint":false}}]}