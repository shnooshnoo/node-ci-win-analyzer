{"failedTests":[{"testName":"es-module/test-esm-loader-hooks","timestamp":1700942916416,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2022-COMPILED_BY-vs2022 #24682","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/24682/","buildNumber":24682,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"b58772c02d0774fd2bda7802f7a4a0123b6e258f","callStack":[{"upstreamBuild":59465,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":66891,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":55919,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"50825"}],"tap":{"ok":false,"name":"es-module/test-esm-loader-hooks","id":42,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: Loader hooks\n    # Subtest: are called with all expected arguments\n    ok 1 - are called with all expected arguments\n      ---\n      duration_ms: 4219.1304\n      ...\n    # Subtest: are called with all expected arguments using register function\n    ok 2 - are called with all expected arguments using register function\n      ---\n      duration_ms: 3690.7154\n      ...\n    # Subtest: should handle never-settling hooks in ESM files\n        # Subtest: top-level await of a never-settling resolve\n        ok 1 - top-level await of a never-settling resolve\n          ---\n          duration_ms: 3059.0579\n          ...\n        # Subtest: top-level await of a never-settling load\n        ok 2 - top-level await of a never-settling load\n          ---\n          duration_ms: 2680.3551\n          ...\n        # Subtest: top-level await of a race of never-settling hooks\n        ok 3 - top-level await of a race of never-settling hooks\n          ---\n          duration_ms: 3054.6179\n          ...\n        # Subtest: import.meta.resolve of a never-settling resolve\n        ok 4 - import.meta.resolve of a never-settling resolve\n          ---\n          duration_ms: 3549.6613\n          ...\n        1..4\n    ok 3 - should handle never-settling hooks in ESM files\n      ---\n      duration_ms: 3596.0504\n      type: 'suite'\n      ...\n    # Subtest: should handle never-settling hooks in CJS files\n        # Subtest: never-settling resolve\n        ok 1 - never-settling resolve\n          ---\n          duration_ms: 2631.4562\n          ...\n        # Subtest: never-settling load\n        ok 2 - never-settling load\n          ---\n          duration_ms: 3427.2337\n          ...\n        # Subtest: race of never-settling hooks\n        ok 3 - race of never-settling hooks\n          ---\n          duration_ms: 3770.0683\n          ...\n        1..3\n    ok 4 - should handle never-settling hooks in CJS files\n      ---\n      duration_ms: 3864.1502\n      type: 'suite'\n      ...\n    # Subtest: should work without worker permission\n    ok 5 - should work without worker permission\n      ---\n      duration_ms: 2280.0092\n      ...\n    # Subtest: should allow loader hooks to spawn workers when allowed by the CLI flags\n    ok 6 - should allow loader hooks to spawn workers when allowed by the CLI flags\n      ---\n      duration_ms: 3832.0266\n      ...\n    # Subtest: should not allow loader hooks to spawn workers if restricted by the CLI flags\n    ok 7 - should not allow loader hooks to spawn workers if restricted by the CLI flags\n      ---\n      duration_ms: 2248.083\n      ...\n    # Subtest: should not leak internals or expose import.meta.resolve\n    ok 8 - should not leak internals or expose import.meta.resolve\n      ---\n      duration_ms: 3181.5039\n      ...\n    # Subtest: should be fine to call `process.exit` from a custom async hook\n    ok 9 - should be fine to call `process.exit` from a custom async hook\n      ---\n      duration_ms: 2468.4942\n      ...\n    # Subtest: should be fine to call `process.exit` from a custom sync hook\n    ok 10 - should be fine to call `process.exit` from a custom sync hook\n      ---\n      duration_ms: 2784.8747\n      ...\n    # Subtest: should be fine to call `process.exit` from the loader thread top-level\n    ok 11 - should be fine to call `process.exit` from the loader thread top-level\n      ---\n      duration_ms: 3256.6718\n      ...\n    # Subtest: should handle a throwing top-level body\n        # Subtest: should handle regular Error object\n        ok 1 - should handle regular Error object\n          ---\n          duration_ms: 2581.4331\n          ...\n        # Subtest: should handle null\n        ok 2 - should handle null\n          ---\n          duration_ms: 3377.8536\n          ...\n        # Subtest: should handle undefined\n        ok 3 - should handle undefined\n          ---\n          duration_ms: 2550.0125\n          ...\n        # Subtest: should handle boolean\n        ok 4 - should handle boolean\n          ---\n          duration_ms: 2926.6134\n          ...\n        # Subtest: should handle empty plain object\n        ok 5 - should handle empty plain object\n          ---\n          duration_ms: 2191.1023\n          ...\n        # Subtest: should handle plain object\n        ok 6 - should handle plain object\n          ---\n          duration_ms: 2894.9831\n          ...\n        # Subtest: should handle number\n        ok 7 - should handle number\n          ---\n          duration_ms: 3134.5683\n          ...\n        # Subtest: should handle bigint\n        ok 8 - should handle bigint\n          ---\n          duration_ms: 2300.3102\n          ...\n        # Subtest: should handle string\n        ok 9 - should handle string\n          ---\n          duration_ms: 2286.1844\n          ...\n        # Subtest: should handle symbol\n        ok 10 - should handle symbol\n          ---\n          duration_ms: 2445.8351\n          ...\n        # Subtest: should handle function\n        ok 11 - should handle function\n          ---\n          duration_ms: 2094.1831\n          ...\n        1..11\n    ok 12 - should handle a throwing top-level body\n      ---\n      duration_ms: 3504.2987\n      type: 'suite'\n      ...\n    # Subtest: globalPreload\n        # Subtest: should emit warning\n        ok 1 - should emit warning\n          ---\n          duration_ms: 2925.6809\n          ...\n        # Subtest: should not emit warning when initialize is supplied\n        ok 2 - should not emit warning when initialize is supplied\n          ---\n          duration_ms: 2443.5635\n          ...\n        1..2\n    ok 13 - globalPreload\n      ---\n      duration_ms: 3340.1101\n      type: 'suite'\n      ...\n    # Subtest: should be fine to call `process.removeAllListeners(\"beforeExit\")` from the main thread\n    ok 14 - should be fine to call `process.removeAllListeners(\"beforeExit\")` from the main thread\n      ---\n      duration_ms: 2584.3681\n      ...\n    # Subtest: `initialize`/`register`\n        # Subtest: should invoke `initialize` correctly\n        ok 1 - should invoke `initialize` correctly\n          ---\n          duration_ms: 3133.2716\n          ...\n        # Subtest: should allow communicating with loader via `register` ports\n        ok 2 - should allow communicating with loader via `register` ports\n          ---\n          duration_ms: 3524.1082\n          ...\n        # Subtest: should have `register` accept URL objects as `parentURL`\n        ok 3 - should have `register` accept URL objects as `parentURL`\n          ---\n          duration_ms: 3079.901\n          ...\n        # Subtest: should have `register` work with cjs\n        ok 4 - should have `register` work with cjs\n          ---\n          duration_ms: 2694.0928\n          ...\n        # Subtest: `register` should work with `require`\n        ok 5 - `register` should work with `require`\n          ---\n          duration_ms: 2678.2838\n          ...\n        # Subtest: `register` should work with `import`\n        ok 6 - `register` should work with `import`\n          ---\n          duration_ms: 3076.1849\n          ...\n        # Subtest: should execute `initialize` in sequence\n        ok 7 - should execute `initialize` in sequence\n          ---\n          duration_ms: 3006.3783\n          ...\n        # Subtest: should handle `initialize` returning never-settling promise\n        ok 8 - should handle `initialize` returning never-settling promise\n          ---\n          duration_ms: 2739.2482\n          ...\n        # Subtest: should handle `initialize` returning rejecting promise\n        ok 9 - should handle `initialize` returning rejecting promise\n          ---\n          duration_ms: 2447.376\n          ...\n        # Subtest: should handle `initialize` throwing null\n        ok 10 - should handle `initialize` throwing null\n          ---\n          duration_ms: 2240.9297\n          ...\n        # Subtest: should be fine to call `process.exit` from a initialize hook\n        ok 11 - should be fine to call `process.exit` from a initialize hook\n          ---\n          duration_ms: 2594.4517\n          ...\n        1..11\n    ok 15 - `initialize`/`register`\n      ---\n      duration_ms: 4188.6415\n      type: 'suite'\n      ...\n    # Subtest: should use CJS loader to respond to require.resolve calls by default\n    ok 16 - should use CJS loader to respond to require.resolve calls by default\n      ---\n      duration_ms: 2563.8264\n      ...\n    # Subtest: should use ESM loader to respond to require.resolve calls when opting in\n    ok 17 - should use ESM loader to respond to require.resolve calls when opting in\n      ---\n      duration_ms: 2723.4798\n      ...\n    # Subtest: should handle mixed of opt-in modules and non-opt-in ones\n    not ok 18 - should handle mixed of opt-in modules and non-opt-in ones\n      ---\n      duration_ms: 3074.6619\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:750:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '\\r\\n' +\n        +   'node:internal/process/esm_loader:34\\r\\n' +\n        +   \"      internalBinding('errors').triggerUncaughtException(\\r\\n\" +\n        +   '                                ^\\r\\n' +\n        +   \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n        +   '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:238:11)\\r\\n' +\n        +   '    at defaultLoad (node:internal/modules/esm/load:130:3)\\r\\n' +\n        +   '    at nextLoad (node:internal/modules/esm/hooks:749:28)\\r\\n' +\n        +   `    at load (data:text/javascript,const fixtures=\"C:\\\\\\\\workspace\\\\\\\\node-test-binary-windows-js-suites\\\\\\\\node\\\\\\\\test\\\\\\\\fixtures\\\\\\\\empty.js\";export function%20resolve(s%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(s.endsWith('entry-point'))%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(s%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7Dexport async%20function%20load(u%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(u%20%3D%3D%3D%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point')%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20source%3A%20%60%22use%20strict%22%3Brequire(%24%7BJSON.stringify(fixtures)%7D)%3Bconsole.log(%22Hello%22)%3B%60%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(u%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7D:18:18)\\r\\n` +\n        +   '    at nextLoad (node:internal/modules/esm/hooks:749:28)\\r\\n' +\n        +   '    at Hooks.load (node:internal/modules/esm/hooks:382:26)\\r\\n' +\n        +   '    at MessagePort.handleMessage (node:internal/modules/esm/worker:199:24)\\r\\n' +\n        +   '    at [nodejs.internal.kHybridDispatch] (node:internal/event_target:822:20)\\r\\n' +\n        +   '    at exports.emitMessage (node:internal/per_context/messageport:23:28) {\\r\\n' +\n        +   \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n        +   '}\\r\\n' +\n        +   '\\r\\n' +\n        +   'Node.js v22.0.0-pre\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        \n        node:internal/process/esm_loader:34\n              internalBinding('errors').triggerUncaughtException(\n                                        ^\n        Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\n            at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:238:11)\n            at defaultLoad (node:internal/modules/esm/load:130:3)\n            at nextLoad (node:internal/modules/esm/hooks:749:28)\n            at load (data:text/javascript,const fixtures=\"C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\fixtures\\\\empty.js\";export function%20resolve(s%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(s.endsWith('entry-point'))%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(s%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7Dexport async%20function%20load(u%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(u%20%3D%3D%3D%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point')%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20source%3A%20%60%22use%20strict%22%3Brequire(%24%7BJSON.stringify(fixtures)%7D)%3Bconsole.log(%22Hello%22)%3B%60%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(u%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7D:18:18)\n            at nextLoad (node:internal/modules/esm/hooks:749:28)\n            at Hooks.load (node:internal/modules/esm/hooks:382:26)\n            at MessagePort.handleMessage (node:internal/modules/esm/worker:199:24)\n            at [nodejs.internal.kHybridDispatch] (node:internal/event_target:822:20)\n            at exports.emitMessage (node:internal/per_context/messageport:23:28) {\n          code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\n        }\n        \n        Node.js v22.0.0-pre\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:779:12)\n        process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 17)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    1..18\nnot ok 1 - Loader hooks\n  ---\n  duration_ms: 4401.5467\n  type: 'suite'\n  location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:7:1'\n  failureType: 'subtestsFailed'\n  error: '1 subtest failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 44\n# suites 6\n# pass 43\n# fail 1\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 4461.63"},"time":5605.179,"fullname":"es-module/test-esm-loader-hooks","closingTestPoint":false}},{"testName":"es-module/test-esm-loader-hooks","timestamp":1700942916416,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-arm64-COMPILED_BY-vs2022-arm64 #24682","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24682/","buildNumber":24682,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"22.0.0","commitHash":"b58772c02d0774fd2bda7802f7a4a0123b6e258f","callStack":[{"upstreamBuild":59465,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":66891,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":55919,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"50825"}],"tap":{"ok":false,"name":"es-module/test-esm-loader-hooks","id":43,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: Loader hooks\n    # Subtest: are called with all expected arguments\n    ok 1 - are called with all expected arguments\n      ---\n      duration_ms: 1087.6708\n      ...\n    # Subtest: are called with all expected arguments using register function\n    ok 2 - are called with all expected arguments using register function\n      ---\n      duration_ms: 1388.4905\n      ...\n    # Subtest: should handle never-settling hooks in ESM files\n        # Subtest: top-level await of a never-settling resolve\n        ok 1 - top-level await of a never-settling resolve\n          ---\n          duration_ms: 1290.354\n          ...\n        # Subtest: top-level await of a never-settling load\n        ok 2 - top-level await of a never-settling load\n          ---\n          duration_ms: 1256.6005\n          ...\n        # Subtest: top-level await of a race of never-settling hooks\n        ok 3 - top-level await of a race of never-settling hooks\n          ---\n          duration_ms: 1388.4108\n          ...\n        # Subtest: import.meta.resolve of a never-settling resolve\n        ok 4 - import.meta.resolve of a never-settling resolve\n          ---\n          duration_ms: 1278.9617\n          ...\n        1..4\n    ok 3 - should handle never-settling hooks in ESM files\n      ---\n      duration_ms: 1406.0795\n      type: 'suite'\n      ...\n    # Subtest: should handle never-settling hooks in CJS files\n        # Subtest: never-settling resolve\n        ok 1 - never-settling resolve\n          ---\n          duration_ms: 1486.3165\n          ...\n        # Subtest: never-settling load\n        ok 2 - never-settling load\n          ---\n          duration_ms: 1393.5197\n          ...\n        # Subtest: race of never-settling hooks\n        ok 3 - race of never-settling hooks\n          ---\n          duration_ms: 1507.161\n          ...\n        1..3\n    ok 4 - should handle never-settling hooks in CJS files\n      ---\n      duration_ms: 1561.2685\n      type: 'suite'\n      ...\n    # Subtest: should work without worker permission\n    ok 5 - should work without worker permission\n      ---\n      duration_ms: 1070.9496\n      ...\n    # Subtest: should allow loader hooks to spawn workers when allowed by the CLI flags\n    ok 6 - should allow loader hooks to spawn workers when allowed by the CLI flags\n      ---\n      duration_ms: 1922.0228\n      ...\n    # Subtest: should not allow loader hooks to spawn workers if restricted by the CLI flags\n    ok 7 - should not allow loader hooks to spawn workers if restricted by the CLI flags\n      ---\n      duration_ms: 850.5355\n      ...\n    # Subtest: should not leak internals or expose import.meta.resolve\n    ok 8 - should not leak internals or expose import.meta.resolve\n      ---\n      duration_ms: 1333.6792\n      ...\n    # Subtest: should be fine to call `process.exit` from a custom async hook\n    ok 9 - should be fine to call `process.exit` from a custom async hook\n      ---\n      duration_ms: 1240.9357\n      ...\n    # Subtest: should be fine to call `process.exit` from a custom sync hook\n    ok 10 - should be fine to call `process.exit` from a custom sync hook\n      ---\n      duration_ms: 824.5215\n      ...\n    # Subtest: should be fine to call `process.exit` from the loader thread top-level\n    ok 11 - should be fine to call `process.exit` from the loader thread top-level\n      ---\n      duration_ms: 1222.9655\n      ...\n    # Subtest: should handle a throwing top-level body\n        # Subtest: should handle regular Error object\n        ok 1 - should handle regular Error object\n          ---\n          duration_ms: 1361.5254\n          ...\n        # Subtest: should handle null\n        ok 2 - should handle null\n          ---\n          duration_ms: 1676.5434\n          ...\n        # Subtest: should handle undefined\n        ok 3 - should handle undefined\n          ---\n          duration_ms: 1187.2818\n          ...\n        # Subtest: should handle boolean\n        ok 4 - should handle boolean\n          ---\n          duration_ms: 1213.2032\n          ...\n        # Subtest: should handle empty plain object\n        ok 5 - should handle empty plain object\n          ---\n          duration_ms: 1195.2754\n          ...\n        # Subtest: should handle plain object\n        ok 6 - should handle plain object\n          ---\n          duration_ms: 1309.9054\n          ...\n        # Subtest: should handle number\n        ok 7 - should handle number\n          ---\n          duration_ms: 1173.8254\n          ...\n        # Subtest: should handle bigint\n        ok 8 - should handle bigint\n          ---\n          duration_ms: 1410.743\n          ...\n        # Subtest: should handle string\n        ok 9 - should handle string\n          ---\n          duration_ms: 1226.0411\n          ...\n        # Subtest: should handle symbol\n        ok 10 - should handle symbol\n          ---\n          duration_ms: 1246.2729\n          ...\n        # Subtest: should handle function\n        ok 11 - should handle function\n          ---\n          duration_ms: 1746.4827\n          ...\n        1..11\n    ok 12 - should handle a throwing top-level body\n      ---\n      duration_ms: 1926.4926\n      type: 'suite'\n      ...\n    # Subtest: globalPreload\n        # Subtest: should emit warning\n        ok 1 - should emit warning\n          ---\n          duration_ms: 1219.4032\n          ...\n        # Subtest: should not emit warning when initialize is supplied\n        ok 2 - should not emit warning when initialize is supplied\n          ---\n          duration_ms: 1473.4116\n          ...\n        1..2\n    ok 13 - globalPreload\n      ---\n      duration_ms: 1671.9166\n      type: 'suite'\n      ...\n    # Subtest: should be fine to call `process.removeAllListeners(\"beforeExit\")` from the main thread\n    ok 14 - should be fine to call `process.removeAllListeners(\"beforeExit\")` from the main thread\n      ---\n      duration_ms: 1473.2842\n      ...\n    # Subtest: `initialize`/`register`\n        # Subtest: should invoke `initialize` correctly\n        ok 1 - should invoke `initialize` correctly\n          ---\n          duration_ms: 1179.2396\n          ...\n        # Subtest: should allow communicating with loader via `register` ports\n        ok 2 - should allow communicating with loader via `register` ports\n          ---\n          duration_ms: 1699.198\n          ...\n        # Subtest: should have `register` accept URL objects as `parentURL`\n        ok 3 - should have `register` accept URL objects as `parentURL`\n          ---\n          duration_ms: 1645.0154\n          ...\n        # Subtest: should have `register` work with cjs\n        ok 4 - should have `register` work with cjs\n          ---\n          duration_ms: 1290.4772\n          ...\n        # Subtest: `register` should work with `require`\n        ok 5 - `register` should work with `require`\n          ---\n          duration_ms: 1660.1012\n          ...\n        # Subtest: `register` should work with `import`\n        ok 6 - `register` should work with `import`\n          ---\n          duration_ms: 1599.0747\n          ...\n        # Subtest: should execute `initialize` in sequence\n        ok 7 - should execute `initialize` in sequence\n          ---\n          duration_ms: 1440.748\n          ...\n        # Subtest: should handle `initialize` returning never-settling promise\n        ok 8 - should handle `initialize` returning never-settling promise\n          ---\n          duration_ms: 1386.8345\n          ...\n        # Subtest: should handle `initialize` returning rejecting promise\n        ok 9 - should handle `initialize` returning rejecting promise\n          ---\n          duration_ms: 1473.8755\n          ...\n        # Subtest: should handle `initialize` throwing null\n        ok 10 - should handle `initialize` throwing null\n          ---\n          duration_ms: 1366.3395\n          ...\n        # Subtest: should be fine to call `process.exit` from a initialize hook\n        ok 11 - should be fine to call `process.exit` from a initialize hook\n          ---\n          duration_ms: 1280.2593\n          ...\n        1..11\n    ok 15 - `initialize`/`register`\n      ---\n      duration_ms: 2040.1357\n      type: 'suite'\n      ...\n    # Subtest: should use CJS loader to respond to require.resolve calls by default\n    ok 16 - should use CJS loader to respond to require.resolve calls by default\n      ---\n      duration_ms: 1797.9515\n      ...\n    # Subtest: should use ESM loader to respond to require.resolve calls when opting in\n    ok 17 - should use ESM loader to respond to require.resolve calls when opting in\n      ---\n      duration_ms: 968.0294\n      ...\n    # Subtest: should handle mixed of opt-in modules and non-opt-in ones\n    not ok 18 - should handle mixed of opt-in modules and non-opt-in ones\n      ---\n      duration_ms: 1327.2263\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:750:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '\\r\\n' +\n        +   'node:internal/process/esm_loader:34\\r\\n' +\n        +   \"      internalBinding('errors').triggerUncaughtException(\\r\\n\" +\n        +   '                                ^\\r\\n' +\n        +   \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'd:'\\r\\n\" +\n        +   '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:238:11)\\r\\n' +\n        +   '    at defaultLoad (node:internal/modules/esm/load:130:3)\\r\\n' +\n        +   '    at nextLoad (node:internal/modules/esm/hooks:749:28)\\r\\n' +\n        +   `    at load (data:text/javascript,const fixtures=\"d:\\\\\\\\workspace\\\\\\\\node-test-binary-windows-js-suites\\\\\\\\node\\\\\\\\test\\\\\\\\fixtures\\\\\\\\empty.js\";export function%20resolve(s%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(s.endsWith('entry-point'))%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(s%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7Dexport async%20function%20load(u%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(u%20%3D%3D%3D%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point')%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20source%3A%20%60%22use%20strict%22%3Brequire(%24%7BJSON.stringify(fixtures)%7D)%3Bconsole.log(%22Hello%22)%3B%60%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(u%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7D:18:18)\\r\\n` +\n        +   '    at nextLoad (node:internal/modules/esm/hooks:749:28)\\r\\n' +\n        +   '    at Hooks.load (node:internal/modules/esm/hooks:382:26)\\r\\n' +\n        +   '    at handleMessage (node:internal/modules/esm/worker:199:24)\\r\\n' +\n        +   '    at checkForMessages (node:internal/modules/esm/worker:141:28)\\r\\n' +\n        +   '    at process.<anonymous> (node:internal/modules/esm/worker:160:5)\\r\\n' +\n        +   '    at process.emit (node:events:519:28) {\\r\\n' +\n        +   \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n        +   '}\\r\\n' +\n        +   '\\r\\n' +\n        +   'Node.js v22.0.0-pre\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        \n        node:internal/process/esm_loader:34\n              internalBinding('errors').triggerUncaughtException(\n                                        ^\n        Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'd:'\n            at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:238:11)\n            at defaultLoad (node:internal/modules/esm/load:130:3)\n            at nextLoad (node:internal/modules/esm/hooks:749:28)\n            at load (data:text/javascript,const fixtures=\"d:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\fixtures\\\\empty.js\";export function%20resolve(s%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(s.endsWith('entry-point'))%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(s%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7Dexport async%20function%20load(u%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(u%20%3D%3D%3D%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point')%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20source%3A%20%60%22use%20strict%22%3Brequire(%24%7BJSON.stringify(fixtures)%7D)%3Bconsole.log(%22Hello%22)%3B%60%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(u%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7D:18:18)\n            at nextLoad (node:internal/modules/esm/hooks:749:28)\n            at Hooks.load (node:internal/modules/esm/hooks:382:26)\n            at handleMessage (node:internal/modules/esm/worker:199:24)\n            at checkForMessages (node:internal/modules/esm/worker:141:28)\n            at process.<anonymous> (node:internal/modules/esm/worker:160:5)\n            at process.emit (node:events:519:28) {\n          code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\n        }\n        \n        Node.js v22.0.0-pre\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:779:12)\n        process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 17)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    1..18\nnot ok 1 - Loader hooks\n  ---\n  duration_ms: 2177.9091\n  type: 'suite'\n  location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:7:1'\n  failureType: 'subtestsFailed'\n  error: '1 subtest failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 44\n# suites 6\n# pass 43\n# fail 1\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 2196.6441"},"time":2886.982,"fullname":"es-module/test-esm-loader-hooks","closingTestPoint":false}},{"testName":"es-module/test-esm-loader-hooks","timestamp":1700942916416,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2016-COMPILED_BY-vs2022-x86 #24682","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/24682/","buildNumber":24682,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"b58772c02d0774fd2bda7802f7a4a0123b6e258f","callStack":[{"upstreamBuild":59465,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":66891,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":55919,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"50825"}],"tap":{"ok":false,"name":"es-module/test-esm-loader-hooks","id":42,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: Loader hooks\n    # Subtest: are called with all expected arguments\n    ok 1 - are called with all expected arguments\n      ---\n      duration_ms: 1334.3602\n      ...\n    # Subtest: are called with all expected arguments using register function\n    ok 2 - are called with all expected arguments using register function\n      ---\n      duration_ms: 1326.6224\n      ...\n    # Subtest: should handle never-settling hooks in ESM files\n        # Subtest: top-level await of a never-settling resolve\n        ok 1 - top-level await of a never-settling resolve\n          ---\n          duration_ms: 1102.3766\n          ...\n        # Subtest: top-level await of a never-settling load\n        ok 2 - top-level await of a never-settling load\n          ---\n          duration_ms: 1053.3601\n          ...\n        # Subtest: top-level await of a race of never-settling hooks\n        ok 3 - top-level await of a race of never-settling hooks\n          ---\n          duration_ms: 1349.1597\n          ...\n        # Subtest: import.meta.resolve of a never-settling resolve\n        ok 4 - import.meta.resolve of a never-settling resolve\n          ---\n          duration_ms: 1039.3547\n          ...\n        1..4\n    ok 3 - should handle never-settling hooks in ESM files\n      ---\n      duration_ms: 1404.4588\n      type: 'suite'\n      ...\n    # Subtest: should handle never-settling hooks in CJS files\n        # Subtest: never-settling resolve\n        ok 1 - never-settling resolve\n          ---\n          duration_ms: 1180.1331\n          ...\n        # Subtest: never-settling load\n        ok 2 - never-settling load\n          ---\n          duration_ms: 1115.6705\n          ...\n        # Subtest: race of never-settling hooks\n        ok 3 - race of never-settling hooks\n          ---\n          duration_ms: 1024.6283\n          ...\n        1..3\n    ok 4 - should handle never-settling hooks in CJS files\n      ---\n      duration_ms: 1257.8439\n      type: 'suite'\n      ...\n    # Subtest: should work without worker permission\n    ok 5 - should work without worker permission\n      ---\n      duration_ms: 1310.0221\n      ...\n    # Subtest: should allow loader hooks to spawn workers when allowed by the CLI flags\n    ok 6 - should allow loader hooks to spawn workers when allowed by the CLI flags\n      ---\n      duration_ms: 1296.1475\n      ...\n    # Subtest: should not allow loader hooks to spawn workers if restricted by the CLI flags\n    ok 7 - should not allow loader hooks to spawn workers if restricted by the CLI flags\n      ---\n      duration_ms: 1292.1273\n      ...\n    # Subtest: should not leak internals or expose import.meta.resolve\n    ok 8 - should not leak internals or expose import.meta.resolve\n      ---\n      duration_ms: 1276.8723\n      ...\n    # Subtest: should be fine to call `process.exit` from a custom async hook\n    ok 9 - should be fine to call `process.exit` from a custom async hook\n      ---\n      duration_ms: 1263.9786\n      ...\n    # Subtest: should be fine to call `process.exit` from a custom sync hook\n    ok 10 - should be fine to call `process.exit` from a custom sync hook\n      ---\n      duration_ms: 1256.7554\n      ...\n    # Subtest: should be fine to call `process.exit` from the loader thread top-level\n    ok 11 - should be fine to call `process.exit` from the loader thread top-level\n      ---\n      duration_ms: 1249.3291\n      ...\n    # Subtest: should handle a throwing top-level body\n        # Subtest: should handle regular Error object\n        ok 1 - should handle regular Error object\n          ---\n          duration_ms: 997.1962\n          ...\n        # Subtest: should handle null\n        ok 2 - should handle null\n          ---\n          duration_ms: 896.0302\n          ...\n        # Subtest: should handle undefined\n        ok 3 - should handle undefined\n          ---\n          duration_ms: 910.6236\n          ...\n        # Subtest: should handle boolean\n        ok 4 - should handle boolean\n          ---\n          duration_ms: 962.5095\n          ...\n        # Subtest: should handle empty plain object\n        ok 5 - should handle empty plain object\n          ---\n          duration_ms: 891.4047\n          ...\n        # Subtest: should handle plain object\n        ok 6 - should handle plain object\n          ---\n          duration_ms: 1051.9748\n          ...\n        # Subtest: should handle number\n        ok 7 - should handle number\n          ---\n          duration_ms: 826.3924\n          ...\n        # Subtest: should handle bigint\n        ok 8 - should handle bigint\n          ---\n          duration_ms: 1041.1356\n          ...\n        # Subtest: should handle string\n        ok 9 - should handle string\n          ---\n          duration_ms: 772.5994\n          ...\n        # Subtest: should handle symbol\n        ok 10 - should handle symbol\n          ---\n          duration_ms: 940.7446\n          ...\n        # Subtest: should handle function\n        ok 11 - should handle function\n          ---\n          duration_ms: 879.1828\n          ...\n        1..11\n    ok 12 - should handle a throwing top-level body\n      ---\n      duration_ms: 1506.9323\n      type: 'suite'\n      ...\n    # Subtest: globalPreload\n        # Subtest: should emit warning\n        ok 1 - should emit warning\n          ---\n          duration_ms: 1061.6711\n          ...\n        # Subtest: should not emit warning when initialize is supplied\n        ok 2 - should not emit warning when initialize is supplied\n          ---\n          duration_ms: 986.4898\n          ...\n        1..2\n    ok 13 - globalPreload\n      ---\n      duration_ms: 1696.515\n      type: 'suite'\n      ...\n    # Subtest: should be fine to call `process.removeAllListeners(\"beforeExit\")` from the main thread\n    ok 14 - should be fine to call `process.removeAllListeners(\"beforeExit\")` from the main thread\n      ---\n      duration_ms: 1239.0038\n      ...\n    # Subtest: `initialize`/`register`\n        # Subtest: should invoke `initialize` correctly\n        ok 1 - should invoke `initialize` correctly\n          ---\n          duration_ms: 1046.4641\n          ...\n        # Subtest: should allow communicating with loader via `register` ports\n        ok 2 - should allow communicating with loader via `register` ports\n          ---\n          duration_ms: 964.2723\n          ...\n        # Subtest: should have `register` accept URL objects as `parentURL`\n        ok 3 - should have `register` accept URL objects as `parentURL`\n          ---\n          duration_ms: 800.2524\n          ...\n        # Subtest: should have `register` work with cjs\n        ok 4 - should have `register` work with cjs\n          ---\n          duration_ms: 1081.1854\n          ...\n        # Subtest: `register` should work with `require`\n        ok 5 - `register` should work with `require`\n          ---\n          duration_ms: 925.034\n          ...\n        # Subtest: `register` should work with `import`\n        ok 6 - `register` should work with `import`\n          ---\n          duration_ms: 830.4751\n          ...\n        # Subtest: should execute `initialize` in sequence\n        ok 7 - should execute `initialize` in sequence\n          ---\n          duration_ms: 815.2533\n          ...\n        # Subtest: should handle `initialize` returning never-settling promise\n        ok 8 - should handle `initialize` returning never-settling promise\n          ---\n          duration_ms: 605.9249\n          ...\n        # Subtest: should handle `initialize` returning rejecting promise\n        ok 9 - should handle `initialize` returning rejecting promise\n          ---\n          duration_ms: 666.7338\n          ...\n        # Subtest: should handle `initialize` throwing null\n        ok 10 - should handle `initialize` throwing null\n          ---\n          duration_ms: 709.3723\n          ...\n        # Subtest: should be fine to call `process.exit` from a initialize hook\n        ok 11 - should be fine to call `process.exit` from a initialize hook\n          ---\n          duration_ms: 556.9849\n          ...\n        1..11\n    ok 15 - `initialize`/`register`\n      ---\n      duration_ms: 1753.5588\n      type: 'suite'\n      ...\n    # Subtest: should use CJS loader to respond to require.resolve calls by default\n    ok 16 - should use CJS loader to respond to require.resolve calls by default\n      ---\n      duration_ms: 1209.4218\n      ...\n    # Subtest: should use ESM loader to respond to require.resolve calls when opting in\n    ok 17 - should use ESM loader to respond to require.resolve calls when opting in\n      ---\n      duration_ms: 1285.0691\n      ...\n    # Subtest: should handle mixed of opt-in modules and non-opt-in ones\n    not ok 18 - should handle mixed of opt-in modules and non-opt-in ones\n      ---\n      duration_ms: 1126.3653\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:750:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '\\r\\n' +\n        +   'node:internal/process/esm_loader:34\\r\\n' +\n        +   \"      internalBinding('errors').triggerUncaughtException(\\r\\n\" +\n        +   '                                ^\\r\\n' +\n        +   \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n        +   '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:238:11)\\r\\n' +\n        +   '    at defaultLoad (node:internal/modules/esm/load:130:3)\\r\\n' +\n        +   '    at nextLoad (node:internal/modules/esm/hooks:749:28)\\r\\n' +\n        +   `    at load (data:text/javascript,const fixtures=\"C:\\\\\\\\workspace\\\\\\\\node-test-binary-windows-js-suites\\\\\\\\node\\\\\\\\test\\\\\\\\fixtures\\\\\\\\empty.js\";export function%20resolve(s%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(s.endsWith('entry-point'))%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(s%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7Dexport async%20function%20load(u%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(u%20%3D%3D%3D%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point')%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20source%3A%20%60%22use%20strict%22%3Brequire(%24%7BJSON.stringify(fixtures)%7D)%3Bconsole.log(%22Hello%22)%3B%60%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(u%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7D:18:18)\\r\\n` +\n        +   '    at nextLoad (node:internal/modules/esm/hooks:749:28)\\r\\n' +\n        +   '    at Hooks.load (node:internal/modules/esm/hooks:382:26)\\r\\n' +\n        +   '    at MessagePort.handleMessage (node:internal/modules/esm/worker:199:24)\\r\\n' +\n        +   '    at [nodejs.internal.kHybridDispatch] (node:internal/event_target:822:20)\\r\\n' +\n        +   '    at exports.emitMessage (node:internal/per_context/messageport:23:28) {\\r\\n' +\n        +   \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n        +   '}\\r\\n' +\n        +   '\\r\\n' +\n        +   'Node.js v22.0.0-pre\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        \n        node:internal/process/esm_loader:34\n              internalBinding('errors').triggerUncaughtException(\n                                        ^\n        Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\n            at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:238:11)\n            at defaultLoad (node:internal/modules/esm/load:130:3)\n            at nextLoad (node:internal/modules/esm/hooks:749:28)\n            at load (data:text/javascript,const fixtures=\"C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\fixtures\\\\empty.js\";export function%20resolve(s%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(s.endsWith('entry-point'))%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(s%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7Dexport async%20function%20load(u%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(u%20%3D%3D%3D%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point')%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20source%3A%20%60%22use%20strict%22%3Brequire(%24%7BJSON.stringify(fixtures)%7D)%3Bconsole.log(%22Hello%22)%3B%60%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(u%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7D:18:18)\n            at nextLoad (node:internal/modules/esm/hooks:749:28)\n            at Hooks.load (node:internal/modules/esm/hooks:382:26)\n            at MessagePort.handleMessage (node:internal/modules/esm/worker:199:24)\n            at [nodejs.internal.kHybridDispatch] (node:internal/event_target:822:20)\n            at exports.emitMessage (node:internal/per_context/messageport:23:28) {\n          code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\n        }\n        \n        Node.js v22.0.0-pre\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:779:12)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 17)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    1..18\nnot ok 1 - Loader hooks\n  ---\n  duration_ms: 1982.3748\n  type: 'suite'\n  location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:7:1'\n  failureType: 'subtestsFailed'\n  error: '1 subtest failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 44\n# suites 6\n# pass 43\n# fail 1\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 2008.5276"},"time":2304.997,"fullname":"es-module/test-esm-loader-hooks","closingTestPoint":false}},{"testName":"es-module/test-esm-loader-hooks","timestamp":1700942916416,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2019-COMPILED_BY-vs2022 #24682","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/24682/","buildNumber":24682,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"b58772c02d0774fd2bda7802f7a4a0123b6e258f","callStack":[{"upstreamBuild":59465,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":66891,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":55919,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"50825"}],"tap":{"ok":false,"name":"es-module/test-esm-loader-hooks","id":44,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: Loader hooks\n    # Subtest: are called with all expected arguments\n    ok 1 - are called with all expected arguments\n      ---\n      duration_ms: 3277.8084\n      ...\n    # Subtest: are called with all expected arguments using register function\n    ok 2 - are called with all expected arguments using register function\n      ---\n      duration_ms: 3259.5487\n      ...\n    # Subtest: should handle never-settling hooks in ESM files\n        # Subtest: top-level await of a never-settling resolve\n        ok 1 - top-level await of a never-settling resolve\n          ---\n          duration_ms: 2733.7802\n          ...\n        # Subtest: top-level await of a never-settling load\n        ok 2 - top-level await of a never-settling load\n          ---\n          duration_ms: 2712.7616\n          ...\n        # Subtest: top-level await of a race of never-settling hooks\n        ok 3 - top-level await of a race of never-settling hooks\n          ---\n          duration_ms: 2517.8527\n          ...\n        # Subtest: import.meta.resolve of a never-settling resolve\n        ok 4 - import.meta.resolve of a never-settling resolve\n          ---\n          duration_ms: 2401.5346\n          ...\n        1..4\n    ok 3 - should handle never-settling hooks in ESM files\n      ---\n      duration_ms: 2735.2999\n      type: 'suite'\n      ...\n    # Subtest: should handle never-settling hooks in CJS files\n        # Subtest: never-settling resolve\n        ok 1 - never-settling resolve\n          ---\n          duration_ms: 2231.9021\n          ...\n        # Subtest: never-settling load\n        ok 2 - never-settling load\n          ---\n          duration_ms: 2287.9169\n          ...\n        # Subtest: race of never-settling hooks\n        ok 3 - race of never-settling hooks\n          ---\n          duration_ms: 2210.1553\n          ...\n        1..3\n    ok 4 - should handle never-settling hooks in CJS files\n      ---\n      duration_ms: 2799.7552\n      type: 'suite'\n      ...\n    # Subtest: should work without worker permission\n    ok 5 - should work without worker permission\n      ---\n      duration_ms: 3243.8763\n      ...\n    # Subtest: should allow loader hooks to spawn workers when allowed by the CLI flags\n    ok 6 - should allow loader hooks to spawn workers when allowed by the CLI flags\n      ---\n      duration_ms: 3220.0871\n      ...\n    # Subtest: should not allow loader hooks to spawn workers if restricted by the CLI flags\n    ok 7 - should not allow loader hooks to spawn workers if restricted by the CLI flags\n      ---\n      duration_ms: 3163.5945\n      ...\n    # Subtest: should not leak internals or expose import.meta.resolve\n    ok 8 - should not leak internals or expose import.meta.resolve\n      ---\n      duration_ms: 3137.5141\n      ...\n    # Subtest: should be fine to call `process.exit` from a custom async hook\n    ok 9 - should be fine to call `process.exit` from a custom async hook\n      ---\n      duration_ms: 3122.3848\n      ...\n    # Subtest: should be fine to call `process.exit` from a custom sync hook\n    ok 10 - should be fine to call `process.exit` from a custom sync hook\n      ---\n      duration_ms: 3110.4652\n      ...\n    # Subtest: should be fine to call `process.exit` from the loader thread top-level\n    ok 11 - should be fine to call `process.exit` from the loader thread top-level\n      ---\n      duration_ms: 3049.7539\n      ...\n    # Subtest: should handle a throwing top-level body\n        # Subtest: should handle regular Error object\n        ok 1 - should handle regular Error object\n          ---\n          duration_ms: 2195.0818\n          ...\n        # Subtest: should handle null\n        ok 2 - should handle null\n          ---\n          duration_ms: 2181.082\n          ...\n        # Subtest: should handle undefined\n        ok 3 - should handle undefined\n          ---\n          duration_ms: 2070.957\n          ...\n        # Subtest: should handle boolean\n        ok 4 - should handle boolean\n          ---\n          duration_ms: 2016.733\n          ...\n        # Subtest: should handle empty plain object\n        ok 5 - should handle empty plain object\n          ---\n          duration_ms: 2002.8461\n          ...\n        # Subtest: should handle plain object\n        ok 6 - should handle plain object\n          ---\n          duration_ms: 1986.299\n          ...\n        # Subtest: should handle number\n        ok 7 - should handle number\n          ---\n          duration_ms: 1884.6801\n          ...\n        # Subtest: should handle bigint\n        ok 8 - should handle bigint\n          ---\n          duration_ms: 1872.108\n          ...\n        # Subtest: should handle string\n        ok 9 - should handle string\n          ---\n          duration_ms: 1861.1788\n          ...\n        # Subtest: should handle symbol\n        ok 10 - should handle symbol\n          ---\n          duration_ms: 1846.6277\n          ...\n        # Subtest: should handle function\n        ok 11 - should handle function\n          ---\n          duration_ms: 1673.9621\n          ...\n        1..11\n    ok 12 - should handle a throwing top-level body\n      ---\n      duration_ms: 2736.423\n      type: 'suite'\n      ...\n    # Subtest: globalPreload\n        # Subtest: should emit warning\n        ok 1 - should emit warning\n          ---\n          duration_ms: 1658.4385\n          ...\n        # Subtest: should not emit warning when initialize is supplied\n        ok 2 - should not emit warning when initialize is supplied\n          ---\n          duration_ms: 1546.9911\n          ...\n        1..2\n    ok 13 - globalPreload\n      ---\n      duration_ms: 2731.88\n      type: 'suite'\n      ...\n    # Subtest: should be fine to call `process.removeAllListeners(\"beforeExit\")` from the main thread\n    ok 14 - should be fine to call `process.removeAllListeners(\"beforeExit\")` from the main thread\n      ---\n      duration_ms: 3028.682\n      ...\n    # Subtest: `initialize`/`register`\n        # Subtest: should invoke `initialize` correctly\n        ok 1 - should invoke `initialize` correctly\n          ---\n          duration_ms: 1531.472\n          ...\n        # Subtest: should allow communicating with loader via `register` ports\n        ok 2 - should allow communicating with loader via `register` ports\n          ---\n          duration_ms: 1513.7957\n          ...\n        # Subtest: should have `register` accept URL objects as `parentURL`\n        ok 3 - should have `register` accept URL objects as `parentURL`\n          ---\n          duration_ms: 1417.8048\n          ...\n        # Subtest: should have `register` work with cjs\n        ok 4 - should have `register` work with cjs\n          ---\n          duration_ms: 1401.5711\n          ...\n        # Subtest: `register` should work with `require`\n        ok 5 - `register` should work with `require`\n          ---\n          duration_ms: 1501.2787\n          ...\n        # Subtest: `register` should work with `import`\n        ok 6 - `register` should work with `import`\n          ---\n          duration_ms: 1136.8748\n          ...\n        # Subtest: should execute `initialize` in sequence\n        ok 7 - should execute `initialize` in sequence\n          ---\n          duration_ms: 1065.2255\n          ...\n        # Subtest: should handle `initialize` returning never-settling promise\n        ok 8 - should handle `initialize` returning never-settling promise\n          ---\n          duration_ms: 944.7099\n          ...\n        # Subtest: should handle `initialize` returning rejecting promise\n        ok 9 - should handle `initialize` returning rejecting promise\n          ---\n          duration_ms: 932.2012\n          ...\n        # Subtest: should handle `initialize` throwing null\n        ok 10 - should handle `initialize` throwing null\n          ---\n          duration_ms: 828.357\n          ...\n        # Subtest: should be fine to call `process.exit` from a initialize hook\n        ok 11 - should be fine to call `process.exit` from a initialize hook\n          ---\n          duration_ms: 968.1634\n          ...\n        1..11\n    ok 15 - `initialize`/`register`\n      ---\n      duration_ms: 3031.6689\n      type: 'suite'\n      ...\n    # Subtest: should use CJS loader to respond to require.resolve calls by default\n    ok 16 - should use CJS loader to respond to require.resolve calls by default\n      ---\n      duration_ms: 3014.2335\n      ...\n    # Subtest: should use ESM loader to respond to require.resolve calls when opting in\n    ok 17 - should use ESM loader to respond to require.resolve calls when opting in\n      ---\n      duration_ms: 2997.9847\n      ...\n    # Subtest: should handle mixed of opt-in modules and non-opt-in ones\n    not ok 18 - should handle mixed of opt-in modules and non-opt-in ones\n      ---\n      duration_ms: 2881.5665\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:750:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '\\r\\n' +\n        +   'node:internal/process/esm_loader:34\\r\\n' +\n        +   \"      internalBinding('errors').triggerUncaughtException(\\r\\n\" +\n        +   '                                ^\\r\\n' +\n        +   \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n        +   '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:238:11)\\r\\n' +\n        +   '    at defaultLoad (node:internal/modules/esm/load:130:3)\\r\\n' +\n        +   '    at nextLoad (node:internal/modules/esm/hooks:749:28)\\r\\n' +\n        +   `    at load (data:text/javascript,const fixtures=\"C:\\\\\\\\workspace\\\\\\\\node-test-binary-windows-js-suites\\\\\\\\node\\\\\\\\test\\\\\\\\fixtures\\\\\\\\empty.js\";export function%20resolve(s%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(s.endsWith('entry-point'))%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(s%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7Dexport async%20function%20load(u%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(u%20%3D%3D%3D%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point')%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20source%3A%20%60%22use%20strict%22%3Brequire(%24%7BJSON.stringify(fixtures)%7D)%3Bconsole.log(%22Hello%22)%3B%60%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(u%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7D:18:18)\\r\\n` +\n        +   '    at nextLoad (node:internal/modules/esm/hooks:749:28)\\r\\n' +\n        +   '    at Hooks.load (node:internal/modules/esm/hooks:382:26)\\r\\n' +\n        +   '    at handleMessage (node:internal/modules/esm/worker:199:24)\\r\\n' +\n        +   '    at checkForMessages (node:internal/modules/esm/worker:141:28)\\r\\n' +\n        +   '    at process.<anonymous> (node:internal/modules/esm/worker:160:5)\\r\\n' +\n        +   '    at process.emit (node:events:519:28) {\\r\\n' +\n        +   \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n        +   '}\\r\\n' +\n        +   '\\r\\n' +\n        +   'Node.js v22.0.0-pre\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        \n        node:internal/process/esm_loader:34\n              internalBinding('errors').triggerUncaughtException(\n                                        ^\n        Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\n            at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:238:11)\n            at defaultLoad (node:internal/modules/esm/load:130:3)\n            at nextLoad (node:internal/modules/esm/hooks:749:28)\n            at load (data:text/javascript,const fixtures=\"C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\fixtures\\\\empty.js\";export function%20resolve(s%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(s.endsWith('entry-point'))%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20url%3A%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(s%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7Dexport async%20function%20load(u%2C%20c%2C%20n)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20if%20(u%20%3D%3D%3D%20'file%3A%2F%2F%2Fc%3A%2Fvirtual-entry-point')%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20shortCircuit%3A%20true%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20source%3A%20%60%22use%20strict%22%3Brequire(%24%7BJSON.stringify(fixtures)%7D)%3Bconsole.log(%22Hello%22)%3B%60%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20format%3A%20'commonjs'%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%20%20return%20n(u%2C%20c)%3B%0D%0A%20%20%20%20%20%20%20%20%7D:18:18)\n            at nextLoad (node:internal/modules/esm/hooks:749:28)\n            at Hooks.load (node:internal/modules/esm/hooks:382:26)\n            at handleMessage (node:internal/modules/esm/worker:199:24)\n            at checkForMessages (node:internal/modules/esm/worker:141:28)\n            at process.<anonymous> (node:internal/modules/esm/worker:160:5)\n            at process.emit (node:events:519:28) {\n          code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\n        }\n        \n        Node.js v22.0.0-pre\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:779:12)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 17)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    1..18\nnot ok 1 - Loader hooks\n  ---\n  duration_ms: 3570.0325\n  type: 'suite'\n  location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-hooks.mjs:7:1'\n  failureType: 'subtestsFailed'\n  error: '1 subtest failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 44\n# suites 6\n# pass 43\n# fail 1\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 3595.3224"},"time":4291.014,"fullname":"es-module/test-esm-loader-hooks","closingTestPoint":false}}]}