{"failedTests":[{"testName":"parallel/test-worker-stdio-from-preload-module","timestamp":1706822330205,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win10-COMPILED_BY-vs2022 #25664","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022/25664/","buildNumber":25664,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"53ee8e38fdd3d1448a648ebdd36834daf71e6dab","callStack":[{"upstreamBuild":60553,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":68215,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":57009,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51567"}],"tap":{"ok":false,"name":"parallel/test-worker-stdio-from-preload-module","id":886,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"crashed","exitcode":3221225477,"stack":""},"time":158.002,"fullname":"parallel/test-worker-stdio-from-preload-module","closingTestPoint":false}},{"testName":"wpt/test-wasm-webapi","timestamp":1706822330205,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #25664","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/25664/","buildNumber":25664,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"53ee8e38fdd3d1448a648ebdd36834daf71e6dab","callStack":[{"upstreamBuild":60553,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":68215,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":57009,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51567"}],"tap":{"ok":false,"name":"wpt/test-wasm-webapi","id":971,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"crashed","exitcode":3221225477,"stack":"[SKIPPED] abort.any.js: WPTRunner does not support fetch()\n[SKIPPED] contenttype.any.js: WPTRunner does not support fetch()\n[SKIPPED] historical.any.js: indexedDB is not defined\n[SKIPPED] idlharness.any.js: not configured\n[SKIPPED] instantiateStreaming-bad-imports.any.js: Flaky on ARM with V8 >= 11.2\n[SKIPPED] origin.sub.any.js: CORS not implemented\n[SKIPPED] status.any.js: WPTRunner does not support fetch()\n[PASS] compileStreaming: no body\n[PASS] compileStreaming: no body in a promise\n[PASS] compileStreaming after consumption\n[PASS] compileStreaming: empty body\n[PASS] compileStreaming: empty body in a promise\n[PASS] instantiateStreaming: no body\n[PASS] instantiateStreaming: no body in a promise\n[PASS] instantiateStreaming: empty body\n[PASS] instantiateStreaming: empty body in a promise\n[PASS] compileStreaming before consumption\n[PASS] instantiateStreaming after consumption\n[PASS] instantiateStreaming before consumption\n[PASS] compileStreaming\n[PASS] instantiateStreaming\n[PASS] Empty module without imports argument\n[PASS] Empty module with undefined imports argument\n[PASS] Empty module with empty imports argument\n[PASS] compileStreaming: undefined\n[PASS] compileStreaming: undefined in a promise\n[PASS] Invalid code (0x0000): compileStreaming\n[PASS] compileStreaming: null\n[PASS] compileStreaming: null in a promise\n[PASS] compileStreaming: true\n[PASS] getter order for imports object\n[PASS] compileStreaming: true in a promise\n[PASS] compileStreaming: \"test\"\n[PASS] Invalid code (0xCAFE): compileStreaming\n[PASS] compileStreaming: \"test\" in a promise\n[PASS] Invalid code (0x0000): instantiateStreaming\n[PASS] compileStreaming: symbol \"Symbol()\"\n[PASS] imports\n[PASS] Invalid code (0xCAFE): instantiateStreaming\n[PASS] imports with empty module names\n[PASS] compileStreaming: symbol \"Symbol()\" in a promise\n[PASS] compileStreaming: 0\n[PASS] compileStreaming: 0 in a promise\n[PASS] compileStreaming: 0.1\n[PASS] compileStreaming: 0.1 in a promise"},"time":873.026,"fullname":"wpt/test-wasm-webapi","closingTestPoint":false}},{"testName":"wpt/test-performance-timeline","timestamp":1706822330205,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #25664","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/25664/","buildNumber":25664,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"53ee8e38fdd3d1448a648ebdd36834daf71e6dab","callStack":[{"upstreamBuild":60553,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":68215,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":57009,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51567"}],"tap":{"ok":false,"name":"wpt/test-performance-timeline","id":969,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"crashed","exitcode":3221225477,"stack":"[SKIPPED] webtiming-resolution.any.js: flaky\n[PASS] getEntriesByType values are case sensitive\n[EXPECTED_FAILURE][FAIL] getEntriesByName values are case sensitive\nassert_equals: Resource entry exist expected 1 but got 0\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\performance-timeline\\case-sensitivity.any.js:25:5)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\performance-timeline\\case-sensitivity.any.js:14:3\n    at Script.runInThisContext (node:vm:123:12)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-performance-timeline.js 'case-sensitivity.any.js'\n\n[PASS] PerformanceObserver with buffered flag should see past and future entries.\n[PASS] Test toJSON() in PerformanceEntry\n[PASS] PerformanceObserver with buffered flag sees entry after timeout\n[PASS] Multiple PerformanceObservers with buffered flag see all entries\n[PASS] PerformanceObserver without buffered flag set to false cannot see past entries.\n[PASS] PerformanceObserver modifications inside callback should update filtering and not clear buffer\n[PASS] idl_test validation\n[PASS] Types observed are forgotten when disconnect() is called.\n[PASS] Partial interface Performance: original interface defined\n[PASS] Partial interface Performance: member names are unique\n[PASS] PerformanceEntry interface: existence and properties of interface object\n[PASS] PerformanceEntry interface object length\n[PASS] PerformanceEntry interface object name\n[PASS] PerformanceEntry interface: existence and properties of interface prototype object\n[PASS] PerformanceEntry interface: existence and properties of interface prototype object's \"constructor\" property\n[PASS] PerformanceEntry interface: existence and properties of interface prototype object's @@unscopables property\n[PASS] PerformanceEntry interface: operation toJSON()\n[PASS] PerformanceObserver interface: existence and properties of interface object\n[PASS] PerformanceObserver interface object length\n[PASS] PerformanceObserver interface object name\n[PASS] PerformanceObserver interface: existence and properties of interface prototype object\n[PASS] PerformanceObserver interface: existence and properties of interface prototype object's \"constructor\" property\n[PASS] PerformanceObserver interface: existence and properties of interface prototype object's @@unscopables property\n[PASS] PerformanceObserver interface: operation observe(optional PerformanceObserverInit)\n[PASS] PerformanceObserver interface: operation disconnect()\n[PASS] PerformanceObserver interface: operation takeRecords()\n[PASS] PerformanceObserver interface: attribute supportedEntryTypes\n[PASS] PerformanceObserver must be primary interface of observer\n[PASS] Stringification of observer\n[PASS] PerformanceObserver interface: observer must inherit property \"observe(optional PerformanceObserverInit)\" with the proper type\n[PASS] PerformanceObserver interface: calling observe(optional PerformanceObserverInit) on observer with too few arguments must throw TypeError\n[PASS] PerformanceObserver interface: observer must inherit property \"disconnect()\" with the proper type\n[PASS] PerformanceObserver interface: observer must inherit property \"takeRecords()\" with the proper type\n[PASS] PerformanceObserver interface: observer must inherit property \"supportedEntryTypes\" with the proper type\n[PASS] PerformanceObserverEntryList interface: existence and properties of interface object\n[PASS] PerformanceObserverEntryList interface object length\n[PASS] PerformanceObserverEntryList interface object name\n[PASS] PerformanceObserverEntryList interface: existence and properties of interface prototype object\n[PASS] PerformanceObserverEntryList interface: existence and properties of interface prototype object's \"constructor\" property\n[PASS] PerformanceObserverEntryList interface: existence and properties of interface prototype object's @@unscopables property\n[PASS] PerformanceObserverEntryList interface: operation getEntries()\n[PASS] PerformanceObserverEntryList interface: operation getEntriesByType(DOMString)\n[PASS] PerformanceObserverEntryList interface: operation getEntriesByName(DOMString, optional DOMString)\n[PASS] PerformanceObserverEntryList must be primary interface of entryList\n[PASS] Stringification of entryList\n[PASS] PerformanceObserverEntryList interface: entryList must inherit property \"getEntries()\" with the proper type\n[PASS] PerformanceObserverEntryList interface: entryList must inherit property \"getEntriesByType(DOMString)\" with the proper type\n[PASS] PerformanceObserverEntryList interface: calling getEntriesByType(DOMString) on entryList with too few arguments must throw TypeError\n[PASS] PerformanceObserverEntryList interface: entryList must inherit property \"getEntriesByName(DOMString, optional DOMString)\" with the proper type\n[PASS] PerformanceObserverEntryList interface: calling getEntriesByName(DOMString, optional DOMString) on entryList with too few arguments must throw TypeError\n[PASS] Performance interface: operation getEntries()\n[PASS] Performance interface: operation getEntriesByType(DOMString)\n[PASS] Performance interface: operation getEntriesByName(DOMString, optional DOMString)\n[PASS] Performance interface: performance must inherit property \"getEntries()\" with the proper type\n[PASS] Performance interface: performance must inherit property \"getEntriesByType(DOMString)\" with the proper type\n[PASS] Performance interface: calling getEntriesByType(DOMString) on performance with too few arguments must throw TypeError\n[PASS] Performance interface: performance must inherit property \"getEntriesByName(DOMString, optional DOMString)\" with the proper type\n[PASS] Performance interface: calling getEntriesByName(DOMString, optional DOMString) on performance with too few arguments must throw TypeError\n[PASS] PerformanceEntry interface: attribute name\n[PASS] PerformanceEntry interface: attribute entryType\n[PASS] PerformanceEntry interface: attribute startTime\n[PASS] PerformanceEntry interface: attribute duration\n[PASS] idl_test setup\n[PASS] disconnecting an unconnected observer is a no-op\n[PASS] getEntries, getEntriesByType, getEntriesByName sort order\n[PASS] getEntries, getEntriesByType and getEntriesByName work\n[PASS] entries are observable\n[PASS] mark entries are observable\n[PASS] measure entries are observable\n[PASS] Two calls of observe() with the same 'type' cause override.\n[PASS] Calling observe() without 'type' or 'entryTypes' throws a TypeError\n[PASS] Calling observe() with entryTypes and then type should throw an InvalidModificationError\n[PASS] Calling observe() with type and then entryTypes should throw an InvalidModificationError\n[PASS] Calling observe() with type and entryTypes should throw a TypeError\n[PASS] Passing in unknown values to type does throw an exception.\n[PASS] observe() with different type values stacks.\n[PASS] entryTypes must be a sequence or throw a TypeError\n[PASS] Empty sequence entryTypes does not throw an exception.\n[PASS] Unknown entryTypes do not throw an exception.\n[PASS] Filter unsupported entryType entryType names within the entryTypes sequence\n[PASS] Test PerformanceObserver's takeRecords()\n[PASS] Check observer callback parameter and this values\n[PASS] replace observer if already present\n[PASS] supportedEntryTypes exists and returns entries in alphabetical order\n[PASS] supportedEntryTypes caches result"},"time":861.002,"fullname":"wpt/test-performance-timeline","closingTestPoint":false}}]}