{"failedTests":[{"testName":"parallel/test-runner-run","timestamp":1732840561988,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-COMPILED_BY-vs2022 #31448","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-COMPILED_BY-vs2022/31448/","buildNumber":31448,"builtOn":"test-azure_msft-win11_vs2022-x64-1","nodeVersion":"24.0.0","commitHash":"bc8cce0a000b0d6199d617b2e70ba592bd4dd3db","callStack":[{"upstreamBuild":67178,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":76064,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":63759,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"55718"}],"tap":{"ok":false,"name":"parallel/test-runner-run","id":696,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"▶ require('node:test').run\n  ✔ should run with no tests (469.2543ms)\n  ✔ should fail with non existing file (1124.1723ms)\n  ✔ should succeed with a file (1168.577ms)\n  ✔ should allow custom arguments via execArgv (1025.2327ms)\n  ✔ should allow custom arguments via argv (1144.8166ms)\n  ✔ should run same file twice (1712.0461ms)\n  ✔ should run a failed test (1342.2376ms)\n  ✔ should support timeout (462.704ms)\n  ✔ should be piped with dot (1042.8007ms)\n  ▶ should be piped with spec reporter\n    ✔ new spec (946.9534ms)\n    ✔ spec() (1000.1957ms)\n    ✔ spec (991.9737ms)\n  ✔ should be piped with spec reporter (1011.0862ms)\n  ✔ should be piped with tap (1096.6364ms)\n  ✔ should skip tests not matching testNamePatterns - RegExp (1117.3043ms)\n  ✔ should skip tests not matching testNamePatterns - string (1062.9014ms)\n  ✔ should pass only to children (1005.4555ms)\n  ✔ should emit \"test:watch:drained\" event on watch mode (331.4117ms)\n  ▶ AbortSignal\n    ✔ should accept a signal (285.2241ms)\n    ✖ should stop watch mode when abortSignal aborts (1436.8124ms)\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n      + actual - expected\n      \n        [\n          'this should pass',\n      +   'this should pass'\n        ]\n      \n          at TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:232:14)\n          at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n          at async Test.run (node:internal/test_runner/test:932:9)\n          at async Promise.all (index 1)\n          at async Suite.run (node:internal/test_runner/test:1310:7)\n          at async Promise.all (index 15)\n          at async Suite.run (node:internal/test_runner/test:1310:7)\n          at async startSubtestAfterBootstrap (node:internal/test_runner/harness:297:3) {\n        generatedMessage: true,\n        code: 'ERR_ASSERTION',\n        actual: [Array],\n        expected: [Array],\n        operator: 'deepStrictEqual'\n      }\n\n    ✔ should abort when test succeeded (1057.9971ms)\n    ✔ should abort when test failed (1200.0823ms)\n  ✖ AbortSignal (1474.6229ms)\n  ▶ sharding\n    ▶ validation\n      ✔ should require shard.total when having shard option (4.2951ms)\n      ✔ should require shard.index when having shards option (3.958ms)\n      ✔ should require shard.total to be greater than 0 when having shard option (3.9143ms)\n      ✔ should require shard.index to be greater than 0 when having shard option (4.0073ms)\n      ✔ should require shard.index to not be greater than the shards total when having shard option (3.854ms)\n      ✔ should require watch mode to be disabled when having shard option (3.6909ms)\n    ✔ validation (31.6562ms)\n    ✔ should run only the tests files matching the shard index (1511.6463ms)\n    ✔ different shards should not run the same file (1628.3308ms)\n    ✔ combination of all shards should be all the tests (1640.2549ms)\n  ✔ sharding (1776.0544ms)\n  ▶ validation\n    ✔ should only allow array in options.files (35.9108ms)\n    ✔ should only allow array in options.globPatterns (33.8045ms)\n    ✔ should not allow files and globPatterns used together (33.1936ms)\n    ✔ should only allow a string in options.cwd (32.7826ms)\n    ✔ should only allow object as options (32.2657ms)\n    ✔ should pass instance of stream to setup (1075.9004ms)\n  ✔ validation (1327.6614ms)\n  ✔ should avoid running recursively (1035.1848ms)\n  ✔ should run with different cwd (1034.3474ms)\n  ✔ should handle a non-existent directory being provided as cwd (297.4208ms)\n  ✔ should handle a non-existent file being provided as cwd (295.0779ms)\n✖ require('node:test').run (1955.3123ms)\n▶ forceExit\n  ✔ throws for non-boolean values (0.6481ms)\n  ✔ throws if enabled with watch mode (0.4165ms)\n✔ forceExit (1.3226ms)\nℹ tests 42\nℹ suites 7\nℹ pass 41\nℹ fail 1\nℹ cancelled 0\nℹ skipped 0\nℹ todo 0\nℹ duration_ms 1968.2912\n\n✖ failing tests:\n\ntest at test\\parallel\\test-runner-run.mjs:209:5\n✖ should stop watch mode when abortSignal aborts (1436.8124ms)\n  AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n  + actual - expected\n  \n    [\n      'this should pass',\n  +   'this should pass'\n    ]\n  \n      at TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:232:14)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async Test.run (node:internal/test_runner/test:932:9)\n      at async Promise.all (index 1)\n      at async Suite.run (node:internal/test_runner/test:1310:7)\n      at async Promise.all (index 15)\n      at async Suite.run (node:internal/test_runner/test:1310:7)\n      at async startSubtestAfterBootstrap (node:internal/test_runner/harness:297:3) {\n    generatedMessage: true,\n    code: 'ERR_ASSERTION',\n    actual: [Array],\n    expected: [Array],\n    operator: 'deepStrictEqual'\n  }\n(node:14256) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 uncaughtException listeners added to [process]. MaxListeners is 10. Use emitter.setMaxListeners() to increase limit\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:14256) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 unhandledRejection listeners added to [process]. MaxListeners is 10. Use emitter.setMaxListeners() to increase limit\n(node:14256) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 beforeExit listeners added to [process]. MaxListeners is 10. Use emitter.setMaxListeners() to increase limit"},"time":2419.159,"fullname":"parallel/test-runner-run","closingTestPoint":false}}]}