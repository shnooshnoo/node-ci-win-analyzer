{"failedTests":[{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win2019-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":33,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 802,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 802,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 151,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:60582',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:60582',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 802,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 802,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 151,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 141,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 802,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 143,\n      Symbol(triggerId): 142,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 141,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 802,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 143,\n      Symbol(triggerId): 142,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 151,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1349.025,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":31,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 748,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 748,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:57010',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:57010',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 748,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 748,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 748,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 748,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 164,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1173.485,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win11_vs2022-arm64-1","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":313,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":365.002,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2022-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-rackspace-win2022_vs2022-x64-4","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":40,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1245,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1245,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:65037',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:65037',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1245,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1245,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1245,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1245,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 164,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1822.004,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win2022-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2022-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-rackspace-win2022_vs2022-x64-5","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":34,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 672,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 672,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:59830',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:59830',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 672,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 672,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 672,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 672,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 150,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1170.073,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win11_vs2022-x64-1","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":31,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 510,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 510,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:50745',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:50745',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 510,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 510,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 510,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 510,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 150,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":930.058,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win10-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win10-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":33,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 733,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 733,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:61468',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:61468',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 733,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 733,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 733,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 733,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 164,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1195.535,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 1,win11-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win11_vs2022-x64-4","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":311,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":239.007,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 1,win2022-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-rackspace-win2022_vs2022-x64-6","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":314,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":491.045,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2019-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":43,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1523,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1523,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:64732',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:64732',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1523,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1523,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1523,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1523,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 164,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":2279.983,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":38,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///d:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 920,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 920,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:50409',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:50409',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 920,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 920,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 920,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 920,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 150,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1535.984,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 1,win2019-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":313,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":315.008,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 1,win10-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win10-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":311,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":207.008,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win11_vs2022-arm64-6","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":44,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///d:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1137,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1137,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:55664',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:55664',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1137,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1137,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1137,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1137,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 164,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1640,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"wpt/test-wasm-webapi","timestamp":1752101552447,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win11_vs2022-arm64-6","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"wpt/test-wasm-webapi","id":1083,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"crashed","exitcode":3221225477,"stack":"[SKIPPED] abort.any.js: WPTRunner does not support fetch()\n[SKIPPED] contenttype.any.js: WPTRunner does not support fetch()\n[SKIPPED] historical.any.js: indexedDB is not defined\n[SKIPPED] idlharness.any.js: not configured\n[SKIPPED] instantiateStreaming-bad-imports.any.js: Flaky on ARM with V8 >= 11.2\n[SKIPPED] origin.sub.any.js: CORS not implemented\n[SKIPPED] status.any.js: WPTRunner does not support fetch()\n[PASS] compileStreaming\n[PASS] instantiateStreaming\n[PASS] compileStreaming: no body\n[PASS] compileStreaming: no body in a promise\n[PASS] compileStreaming: undefined\n[PASS] compileStreaming: undefined in a promise\n[PASS] compileStreaming: null\n[PASS] compileStreaming: null in a promise\n[PASS] compileStreaming: true\n[PASS] compileStreaming: true in a promise\n[PASS] compileStreaming: \"test\"\n[PASS] compileStreaming: \"test\" in a promise\n[PASS] compileStreaming: symbol \"Symbol()\"\n[PASS] compileStreaming: symbol \"Symbol()\" in a promise\n[PASS] compileStreaming: 0\n[PASS] compileStreaming: 0 in a promise\n[PASS] compileStreaming: 0.1\n[PASS] compileStreaming: 0.1 in a promise\n[PASS] compileStreaming after consumption\n[PASS] compileStreaming: NaN\n[PASS] compileStreaming: NaN in a promise\n[PASS] compileStreaming: Empty object\n[PASS] compileStreaming: Empty object in a promise\n[PASS] compileStreaming before consumption\n[PASS] compileStreaming: Response interface object\n[PASS] compileStreaming: Response interface object in a promise\n[PASS] Invalid code (0x0000): compileStreaming\n[PASS] compileStreaming: Response interface prototype object\n[PASS] compileStreaming: Response interface prototype object in a promise\n[PASS] compileStreaming with Content-Type set late\n[PASS] instantiateStreaming after consumption\n[PASS] instantiateStreaming: undefined\n[PASS] instantiateStreaming: undefined in a promise\n[PASS] Invalid code (0xCAFE): compileStreaming\n[PASS] instantiateStreaming: null\n[PASS] Empty module without imports argument\n[PASS] instantiateStreaming before consumption\n[PASS] instantiateStreaming: null in a promise\n[PASS] instantiateStreaming: true\n[PASS] instantiateStreaming: true in a promise\n[PASS] Invalid code (0x0000): instantiateStreaming\n[PASS] instantiateStreaming: \"test\"\n[PASS] instantiateStreaming: \"test\" in a promise\n[PASS] instantiateStreaming: symbol \"Symbol()\"\n[PASS] Invalid code (0xCAFE): instantiateStreaming\n[PASS] Empty module with undefined imports argument\n[PASS] instantiateStreaming: symbol \"Symbol()\" in a promise\n[PASS] instantiateStreaming: 0\n[PASS] instantiateStreaming: 0 in a promise\n[PASS] compileStreaming with Content-Type removed late\n[PASS] instantiateStreaming: 0.1\n[PASS] Empty module with empty imports argument\n[PASS] instantiateStreaming: 0.1 in a promise\n[PASS] instantiateStreaming: NaN\n[PASS] instantiateStreaming with Content-Type set late\n[PASS] instantiateStreaming with Content-Type removed late\n[PASS] instantiateStreaming: NaN in a promise\n[PASS] instantiateStreaming: Empty object\n[PASS] instantiateStreaming: Empty object in a promise\n[PASS] compileStreaming: empty body\n[PASS] instantiateStreaming: Response interface object\n[PASS] instantiateStreaming: Response interface object in a promise\n[PASS] instantiateStreaming: Response interface prototype object\n[PASS] getter order for imports object\n[PASS] compileStreaming: empty body in a promise\n[PASS] instantiateStreaming: no body\n[PASS] instantiateStreaming: no body in a promise\n[PASS] instantiateStreaming: Response interface prototype object in a promise\n[PASS] instantiateStreaming: empty body\n[PASS] instantiateStreaming: empty body in a promise\n[PASS] imports\n[PASS] imports with empty module names\n[PASS] imports with empty names\n[PASS] exports with empty name: function\n[PASS] exports with empty name: table\n[PASS] exports with empty name: global\n[PASS] No imports\n[PASS] exports and imports\n[PASS] i64 exports and imports\n[PASS] import with i32-returning function\n[PASS] import with function that takes and returns i32\n[PASS] import with i64-returning function\n[PASS] import with function that takes and returns i64\n[PASS] import with i32-taking function\n[PASS] import with i64-taking function\n[PASS] export i64-returning function\n[PASS] i32 mutable WebAssembly.Global import\n[PASS] i64 mutable WebAssembly.Global import\n[PASS] Multiple i64 arguments\n[PASS] stray argument\n[PASS] Synchronous options handling"},"time":374.837,"fullname":"wpt/test-wasm-webapi","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752101552447,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win10-COMPILED_BY-vs2022_clang #35341","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win10-COMPILED_BY-vs2022_clang/35341/","buildNumber":35341,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"25.0.0","commitHash":"b282d6aa5580b8485b1472c0bb76e08036061d30","callStack":[{"upstreamBuild":71583,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81176,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67915,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58950"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":32,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 400,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 400,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:62662',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:62662',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 400,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 400,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 400,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 400,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 150,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":672.025,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}}]}