{"failedTests":[{"testName":"parallel/test-runner-output","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win2016-COMPILED_BY-vs2022-x86 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2016-COMPILED_BY-vs2022-x86/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win2016_vs2017-x64-2","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":677,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 3586.2952\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 3564.0567\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 3552.7696\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 3524.4177\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 3500.8394\n      ...\n    # Subtest: test-runner/output/eval_dot.js\n    ok 6 - test-runner/output/eval_dot.js\n      ---\n      duration_ms: 3470.7388\n      ...\n    # Subtest: test-runner/output/eval_spec.js\n    ok 7 - test-runner/output/eval_spec.js\n      ---\n      duration_ms: 3397.4226\n      ...\n    # Subtest: test-runner/output/eval_tap.js\n    ok 8 - test-runner/output/eval_tap.js\n      ---\n      duration_ms: 3342.3848\n      ...\n    # Subtest: test-runner/output/hooks.js\n    ok 9 - test-runner/output/hooks.js\n      ---\n      duration_ms: 3321.4069\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    ok 10 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 3277.3499\n      ...\n    # Subtest: test-runner/output/skip-each-hooks.js\n    ok 11 - test-runner/output/skip-each-hooks.js\n      ---\n      duration_ms: 3240.5115\n      ...\n    # Subtest: test-runner/output/suite-skip-hooks.js\n    ok 12 - test-runner/output/suite-skip-hooks.js\n      ---\n      duration_ms: 3199.6487\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    ok 13 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 3250.2855\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    ok 14 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 3067.7098\n      ...\n    # Subtest: test-runner/output/global-hooks-with-no-tests.js\n    ok 15 - test-runner/output/global-hooks-with-no-tests.js\n      ---\n      duration_ms: 2970.9977\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    ok 16 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 2932.5892\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    ok 17 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 2905.467\n      ...\n    # Subtest: test-runner/output/force_exit.js\n    ok 18 - test-runner/output/force_exit.js\n      ---\n      duration_ms: 2851.7022\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    ok 19 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 2689.8567\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 20 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 2666.6242\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            \"      error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"      code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '      ...\\n' +\n        +   '    1..1\\n' +\n        +   'not ok 1 - does not keep event loop alive\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '      stack: |-\\n' +\n        -   '        *\\n' +\n        -   '      ...\\n' +\n        -   '    1..1\\n' +\n        -   'not ok 1 - does not keep event loop alive\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 21 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 2378.0034\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    ok 22 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 2256.2739\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 23 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 2636.9979\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    not ok 24 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 2375.6598\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n            '<testsuites>\\n' +\n        ...\n            '\\t\\t</failure>\\n' +\n            '\\t</testcase>\\n' +\n        +   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11376 more characters\n        -   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11392 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        Error [ERR_TEST_FAILURE]: thrown from callback async throw\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        Error [ERR_TEST_FAILURE]: foo\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        Error [ERR_TEST_FAILURE]: bar\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      actual: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        [Error [ERR_TEST_FAILURE]: callback invoked multiple times] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback async throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        [Error [ERR_TEST_FAILURE]: foo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        [Error [ERR_TEST_FAILURE]: bar] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    ok 25 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 2048.1771\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    ok 26 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 2589.2033\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    ok 27 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 2798.2526\n      ...\n    # Subtest: test-runner/output/source_mapped_locations.mjs\n    ok 28 - test-runner/output/source_mapped_locations.mjs\n      ---\n      duration_ms: 2028.5703\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 29 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 2423.6802\n      ...\n    # Subtest: test-runner/output/output.js\n    ok 30 - test-runner/output/output.js\n      ---\n      duration_ms: 1587.7257\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    ok 31 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 2496.9861\n      ...\n    # Subtest: test-runner/output/name_and_skip_patterns.js\n    ok 32 - test-runner/output/name_and_skip_patterns.js\n      ---\n      duration_ms: 1023.7174\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    ok 33 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 1143.9916\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    ok 34 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 870.4179\n      ...\n    # Subtest: test-runner/output/skip_pattern.js\n    ok 35 - test-runner/output/skip_pattern.js\n      ---\n      duration_ms: 840.0613\n      ...\n    # Subtest: test-runner/output/unfinished-suite-async-error.js\n    ok 36 - test-runner/output/unfinished-suite-async-error.js\n      ---\n      duration_ms: 1005.3836\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 37 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 1100.9283\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '  ...\\n' +\n        +   '# Subtest: fail\\n' +\n        +   'not ok 3 - fail\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n        -   '  ...\\n' +\n        -   '# Subtest: fail\\n' +\n        -   'not ok 3 - fail\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 36)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 442.7146\n          ...\n        1..1\n    ok 38 - test-runner/output/default_output.js\n      ---\n      duration_ms: 443.3397\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    ok 39 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 1168.4014\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    ok 40 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 1221.8616\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 57.2101\n          ...\n        1..1\n    ok 41 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 57.6842\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 57.1129\n          ...\n        1..1\n    ok 42 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 57.5173\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    ok 43 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 1007.3469\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    ok 44 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 813.1189\n      ...\n    1..44\nnot ok 1 - test runner output\n  ---\n  duration_ms: 4982.6937\n  type: 'suite'\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:153:1'\n  failureType: 'subtestsFailed'\n  error: '3 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 47\n# suites 1\n# pass 41\n# fail 3\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 4998.9688"},"time":5399.079,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"parallel/test-assert-builtins-not-read-from-filesystem","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win11-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-x64-2","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-assert-builtins-not-read-from-filesystem","id":68,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Exit code: 1\n,,node:fs:2348\n\n    return binding.writeFileUtf8(\n\n                   ^\n\n\n\nError: ENOENT: no such file or directory, open 'c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.67\\node:internal\\events\\event_emitter'\n\n    at writeFileSync (node:fs:2348:20)\n\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:41:3)\n\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n\n    at node:internal/main/run_main_module:30:49 {\n\n  errno: -4058,\n\n  code: 'ENOENT',\n\n  syscall: 'open',\n\n  path: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.67\\\\node:internal\\\\events\\\\event_emitter'\n\n}\n\n\n\nNode.js v23.0.0-pre\n\n\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:31:12)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":277.002,"fullname":"parallel/test-assert-builtins-not-read-from-filesystem","closingTestPoint":false}},{"testName":"parallel/test-bootstrap-modules","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win11-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-x64-2","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-bootstrap-modules","id":84,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: These builtins are now unexpectedly loaded before pre-execution.\nIf this is intentional, add them to `expected.beforePreExec`.\n\n# Note: loading more builtins before pre-execution can lead to startup performance regression or invalid snapshots.\n- Consider lazy loading builtins that are not used universally.\n- Make sure that the builtins do not access environment dependent states e.g. command line arguments or environment variables during loading.\n- When in doubt, ask @nodejs/startup.\n\n--- These could be added to expected.beforePreExec ---\n[\n  'NativeModule internal/events/event_emitter',\n  'NativeModule internal/events/event_emitter_helpers'\n]\n\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-bootstrap-modules.js:245:8)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":128.996,"fullname":"parallel/test-bootstrap-modules","closingTestPoint":false}},{"testName":"parallel/test-node-output-errors","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win11-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-x64-2","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-node-output-errors","id":624,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: errors output\n    # Subtest: errors/async_error_eval_cjs.js\n    ok 1 - errors/async_error_eval_cjs.js\n      ---\n      duration_ms: 320.318\n      ...\n    # Subtest: errors/async_error_eval_esm.js\n    ok 2 - errors/async_error_eval_esm.js\n      ---\n      duration_ms: 211.243\n      ...\n    # Subtest: errors/async_error_microtask_main.js\n    ok 3 - errors/async_error_microtask_main.js\n      ---\n      duration_ms: 166.5172\n      ...\n    # Subtest: errors/async_error_nexttick_main.js\n    ok 4 - errors/async_error_nexttick_main.js\n      ---\n      duration_ms: 139.6435\n      ...\n    # Subtest: errors/async_error_sync_main.js\n    ok 5 - errors/async_error_sync_main.js\n      ---\n      duration_ms: 131.9549\n      ...\n    # Subtest: errors/core_line_numbers.js\n    ok 6 - errors/core_line_numbers.js\n      ---\n      duration_ms: 131.8823\n      ...\n    # Subtest: errors/async_error_sync_esm.mjs\n    ok 7 - errors/async_error_sync_esm.mjs\n      ---\n      duration_ms: 206.3444\n      ...\n    # Subtest: errors/test-no-extra-info-on-fatal-exception.js\n    ok 8 - errors/test-no-extra-info-on-fatal-exception.js\n      ---\n      duration_ms: 141.8534\n      ...\n    # Subtest: errors/error_aggregateTwoErrors.js\n    ok 9 - errors/error_aggregateTwoErrors.js\n      ---\n      duration_ms: 122.4976\n      ...\n    # Subtest: errors/error_exit.js\n    ok 10 - errors/error_exit.js\n      ---\n      duration_ms: 152.4568\n      ...\n    # Subtest: errors/error_with_nul.js\n    ok 11 - errors/error_with_nul.js\n      ---\n      duration_ms: 136.7334\n      ...\n    # Subtest: errors/events_unhandled_error_common_trace.js\n    not ok 12 - errors/events_unhandled_error_common_trace.js\n      ---\n      duration_ms: 136.3924\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_nexttick.js\n    not ok 13 - errors/events_unhandled_error_nexttick.js\n      ---\n      duration_ms: 135.2296\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at *events_unhandled_error_nexttick.js:*:*\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_sameline.js\n    not ok 14 - errors/events_unhandled_error_sameline.js\n      ---\n      duration_ms: 114.1967\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_subclass.js\n    not ok 15 - errors/events_unhandled_error_subclass.js\n      ---\n      duration_ms: 121.9233\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/if-error-has-good-stack.js\n    ok 16 - errors/if-error-has-good-stack.js\n      ---\n      duration_ms: 184.2522\n      ...\n    # Subtest: errors/throw_custom_error.js\n    ok 17 - errors/throw_custom_error.js\n      ---\n      duration_ms: 392.4306\n      ...\n    # Subtest: errors/throw_error_with_getter_throw.js\n    ok 18 - errors/throw_error_with_getter_throw.js\n      ---\n      duration_ms: 168.0069\n      ...\n    # Subtest: errors/throw_in_line_with_tabs.js\n    ok 19 - errors/throw_in_line_with_tabs.js\n      ---\n      duration_ms: 122.5391\n      ...\n    # Subtest: errors/throw_non_error.js\n    ok 20 - errors/throw_non_error.js\n      ---\n      duration_ms: 125.7408\n      ...\n    # Subtest: errors/throw_null.js\n    ok 21 - errors/throw_null.js\n      ---\n      duration_ms: 133.2345\n      ...\n    # Subtest: errors/throw_undefined.js\n    ok 22 - errors/throw_undefined.js\n      ---\n      duration_ms: 141.953\n      ...\n    # Subtest: errors/timeout_throw.js\n    ok 23 - errors/timeout_throw.js\n      ---\n      duration_ms: 139.6977\n      ...\n    # Subtest: errors/undefined_reference_in_new_context.js\n    ok 24 - errors/undefined_reference_in_new_context.js\n      ---\n      duration_ms: 129.6879\n      ...\n    # Subtest: errors/promise_always_throw_unhandled.js\n    ok 25 - errors/promise_always_throw_unhandled.js\n      ---\n      duration_ms: 124.1473\n      ...\n    # Subtest: errors/promise_unhandled_warn_with_error.js\n    ok 26 - errors/promise_unhandled_warn_with_error.js\n      ---\n      duration_ms: 176.4799\n      ...\n    # Subtest: errors/unhandled_promise_trace_warnings.js\n    ok 27 - errors/unhandled_promise_trace_warnings.js\n      ---\n      duration_ms: 382.211\n      ...\n    # Subtest: errors/force_colors.js\n    ok 28 - errors/force_colors.js\n      ---\n      duration_ms: 112.4172\n      ...\n    1..28\nnot ok 1 - errors output\n  ---\n  duration_ms: 4706.315\n  type: 'suite'\n  location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:23:1'\n  failureType: 'subtestsFailed'\n  error: '4 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 28\n# suites 1\n# pass 24\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 4716.1856"},"time":5133.074,"fullname":"parallel/test-node-output-errors","closingTestPoint":false}},{"testName":"parallel/test-assert-builtins-not-read-from-filesystem","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 1,win11-arm64-COMPILED_BY-vs2022-arm64 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-assert-builtins-not-read-from-filesystem","id":71,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Exit code: 1\n,,node:fs:2348\n\n    return binding.writeFileUtf8(\n\n                   ^\n\n\n\nError: ENOENT: no such file or directory, open 'd:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.66\\node:internal\\events\\event_emitter'\n\n    at writeFileSync (node:fs:2348:20)\n\n    at Object.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:41:3)\n\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n\n    at node:internal/main/run_main_module:30:49 {\n\n  errno: -4058,\n\n  code: 'ENOENT',\n\n  syscall: 'open',\n\n  path: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.66\\\\node:internal\\\\events\\\\event_emitter'\n\n}\n\n\n\nNode.js v23.0.0-pre\n\n\n    at Object.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:31:12)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":528.998,"fullname":"parallel/test-assert-builtins-not-read-from-filesystem","closingTestPoint":false}},{"testName":"parallel/test-bootstrap-modules","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 1,win11-arm64-COMPILED_BY-vs2022-arm64 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-bootstrap-modules","id":83,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: These builtins are now unexpectedly loaded before pre-execution.\nIf this is intentional, add them to `expected.beforePreExec`.\n\n# Note: loading more builtins before pre-execution can lead to startup performance regression or invalid snapshots.\n- Consider lazy loading builtins that are not used universally.\n- Make sure that the builtins do not access environment dependent states e.g. command line arguments or environment variables during loading.\n- When in doubt, ask @nodejs/startup.\n\n--- These could be added to expected.beforePreExec ---\n[\n  'NativeModule internal/events/event_emitter',\n  'NativeModule internal/events/event_emitter_helpers'\n]\n\n    at Object.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-bootstrap-modules.js:245:8)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":253.009,"fullname":"parallel/test-bootstrap-modules","closingTestPoint":false}},{"testName":"message/stdin_messages","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-arm64-COMPILED_BY-vs2022-arm64 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-arm64-4","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"message/stdin_messages","id":92,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","stack":"[stdin]\n[stdin]:1\nwith(this){__filename}\n^^^^\n\nSyntaxError: Strict mode code may not include a with statement\n    at makeContextifyScript (node:internal/vm:185:14)\n    at node:internal/process/execution:107:22\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\nNode.js v23.0.0-pre\n42\n42\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n100\n[stdin]:1\nlet x = 100; y = x;\n               ^\n\nReferenceError: y is not defined\n    at [stdin]:1:16\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\ndone"},"time":2185.999,"fullname":"message/stdin_messages","closingTestPoint":false}},{"testName":"parallel/test-node-output-errors","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-arm64-COMPILED_BY-vs2022-arm64 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-arm64-4","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-node-output-errors","id":678,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: errors output\n    # Subtest: errors/async_error_eval_cjs.js\n    ok 1 - errors/async_error_eval_cjs.js\n      ---\n      duration_ms: 400.4328\n      ...\n    # Subtest: errors/async_error_eval_esm.js\n    ok 2 - errors/async_error_eval_esm.js\n      ---\n      duration_ms: 364.8888\n      ...\n    # Subtest: errors/async_error_microtask_main.js\n    ok 3 - errors/async_error_microtask_main.js\n      ---\n      duration_ms: 224.4526\n      ...\n    # Subtest: errors/async_error_nexttick_main.js\n    ok 4 - errors/async_error_nexttick_main.js\n      ---\n      duration_ms: 209.3705\n      ...\n    # Subtest: errors/async_error_sync_main.js\n    ok 5 - errors/async_error_sync_main.js\n      ---\n      duration_ms: 240.5311\n      ...\n    # Subtest: errors/core_line_numbers.js\n    ok 6 - errors/core_line_numbers.js\n      ---\n      duration_ms: 338.4744\n      ...\n    # Subtest: errors/async_error_sync_esm.mjs\n    ok 7 - errors/async_error_sync_esm.mjs\n      ---\n      duration_ms: 569.1461\n      ...\n    # Subtest: errors/test-no-extra-info-on-fatal-exception.js\n    ok 8 - errors/test-no-extra-info-on-fatal-exception.js\n      ---\n      duration_ms: 224.1479\n      ...\n    # Subtest: errors/error_aggregateTwoErrors.js\n    ok 9 - errors/error_aggregateTwoErrors.js\n      ---\n      duration_ms: 267.252\n      ...\n    # Subtest: errors/error_exit.js\n    ok 10 - errors/error_exit.js\n      ---\n      duration_ms: 480.5787\n      ...\n    # Subtest: errors/error_with_nul.js\n    ok 11 - errors/error_with_nul.js\n      ---\n      duration_ms: 220.492\n      ...\n    # Subtest: errors/events_unhandled_error_common_trace.js\n    not ok 12 - errors/events_unhandled_error_common_trace.js\n      ---\n      duration_ms: 246.1895\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_nexttick.js\n    not ok 13 - errors/events_unhandled_error_nexttick.js\n      ---\n      duration_ms: 231.563\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at *events_unhandled_error_nexttick.js:*:*\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_sameline.js\n    not ok 14 - errors/events_unhandled_error_sameline.js\n      ---\n      duration_ms: 218.6695\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_subclass.js\n    not ok 15 - errors/events_unhandled_error_subclass.js\n      ---\n      duration_ms: 216.0192\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/if-error-has-good-stack.js\n    ok 16 - errors/if-error-has-good-stack.js\n      ---\n      duration_ms: 246.5778\n      ...\n    # Subtest: errors/throw_custom_error.js\n    ok 17 - errors/throw_custom_error.js\n      ---\n      duration_ms: 286.4748\n      ...\n    # Subtest: errors/throw_error_with_getter_throw.js\n    ok 18 - errors/throw_error_with_getter_throw.js\n      ---\n      duration_ms: 213.1576\n      ...\n    # Subtest: errors/throw_in_line_with_tabs.js\n    ok 19 - errors/throw_in_line_with_tabs.js\n      ---\n      duration_ms: 255.0731\n      ...\n    # Subtest: errors/throw_non_error.js\n    ok 20 - errors/throw_non_error.js\n      ---\n      duration_ms: 221.5546\n      ...\n    # Subtest: errors/throw_null.js\n    ok 21 - errors/throw_null.js\n      ---\n      duration_ms: 205.0987\n      ...\n    # Subtest: errors/throw_undefined.js\n    ok 22 - errors/throw_undefined.js\n      ---\n      duration_ms: 219.7938\n      ...\n    # Subtest: errors/timeout_throw.js\n    ok 23 - errors/timeout_throw.js\n      ---\n      duration_ms: 258.0139\n      ...\n    # Subtest: errors/undefined_reference_in_new_context.js\n    ok 24 - errors/undefined_reference_in_new_context.js\n      ---\n      duration_ms: 275.8155\n      ...\n    # Subtest: errors/promise_always_throw_unhandled.js\n    ok 25 - errors/promise_always_throw_unhandled.js\n      ---\n      duration_ms: 251.1354\n      ...\n    # Subtest: errors/promise_unhandled_warn_with_error.js\n    ok 26 - errors/promise_unhandled_warn_with_error.js\n      ---\n      duration_ms: 247.1918\n      ...\n    # Subtest: errors/unhandled_promise_trace_warnings.js\n    ok 27 - errors/unhandled_promise_trace_warnings.js\n      ---\n      duration_ms: 234.8587\n      ...\n    # Subtest: errors/force_colors.js\n    ok 28 - errors/force_colors.js\n      ---\n      duration_ms: 170.7678\n      ...\n    1..28\nnot ok 1 - errors output\n  ---\n  duration_ms: 7542.3295\n  type: 'suite'\n  location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:23:1'\n  failureType: 'subtestsFailed'\n  error: '4 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 28\n# suites 1\n# pass 24\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 7554.3854"},"time":8026.003,"fullname":"parallel/test-node-output-errors","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-arm64-COMPILED_BY-vs2022-arm64 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-arm64-6","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":677,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 2331.3618\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 2384.1833\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 1244.2761\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 1934.4402\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 1490.7967\n      ...\n    # Subtest: test-runner/output/eval_dot.js\n    ok 6 - test-runner/output/eval_dot.js\n      ---\n      duration_ms: 1005.9387\n      ...\n    # Subtest: test-runner/output/eval_spec.js\n    ok 7 - test-runner/output/eval_spec.js\n      ---\n      duration_ms: 996.5594\n      ...\n    # Subtest: test-runner/output/eval_tap.js\n    ok 8 - test-runner/output/eval_tap.js\n      ---\n      duration_ms: 1193.4318\n      ...\n    # Subtest: test-runner/output/hooks.js\n    ok 9 - test-runner/output/hooks.js\n      ---\n      duration_ms: 1177.3433\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    ok 10 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 3169.4209\n      ...\n    # Subtest: test-runner/output/skip-each-hooks.js\n    ok 11 - test-runner/output/skip-each-hooks.js\n      ---\n      duration_ms: 1426.5104\n      ...\n    # Subtest: test-runner/output/suite-skip-hooks.js\n    ok 12 - test-runner/output/suite-skip-hooks.js\n      ---\n      duration_ms: 1119.9418\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    ok 13 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 3444.4949\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    ok 14 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 1336.3903\n      ...\n    # Subtest: test-runner/output/global-hooks-with-no-tests.js\n    ok 15 - test-runner/output/global-hooks-with-no-tests.js\n      ---\n      duration_ms: 1761.059\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    ok 16 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 1492.2982\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    ok 17 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 1620.3002\n      ...\n    # Subtest: test-runner/output/force_exit.js\n    ok 18 - test-runner/output/force_exit.js\n      ---\n      duration_ms: 2651.7196\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    ok 19 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 1451.818\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 20 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 2368.0764\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            \"      error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"      code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '      ...\\n' +\n        +   '    1..1\\n' +\n        +   'not ok 1 - does not keep event loop alive\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '      stack: |-\\n' +\n        -   '        *\\n' +\n        -   '      ...\\n' +\n        -   '    1..1\\n' +\n        -   'not ok 1 - does not keep event loop alive\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 21 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 2471.6213\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    ok 22 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 2048.3745\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 23 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 3771.3968\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    not ok 24 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 3838.7051\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n            '<testsuites>\\n' +\n        ...\n            '\\t\\t</failure>\\n' +\n            '\\t</testcase>\\n' +\n        +   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11376 more characters\n        -   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11392 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        Error [ERR_TEST_FAILURE]: thrown from callback async throw\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        Error [ERR_TEST_FAILURE]: foo\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        Error [ERR_TEST_FAILURE]: bar\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      actual: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        [Error [ERR_TEST_FAILURE]: callback invoked multiple times] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback async throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        [Error [ERR_TEST_FAILURE]: foo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        [Error [ERR_TEST_FAILURE]: bar] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    ok 25 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 2693.4646\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    ok 26 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 3576.4886\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    ok 27 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 4089.2294\n      ...\n    # Subtest: test-runner/output/source_mapped_locations.mjs\n    ok 28 - test-runner/output/source_mapped_locations.mjs\n      ---\n      duration_ms: 2077.3214\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 29 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 3766.3556\n      ...\n    # Subtest: test-runner/output/output.js\n    ok 30 - test-runner/output/output.js\n      ---\n      duration_ms: 2487.0178\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    ok 31 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 3907.8953\n      ...\n    # Subtest: test-runner/output/name_and_skip_patterns.js\n    ok 32 - test-runner/output/name_and_skip_patterns.js\n      ---\n      duration_ms: 2214.6257\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    ok 33 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 2409.2273\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    ok 34 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 2131.8706\n      ...\n    # Subtest: test-runner/output/skip_pattern.js\n    ok 35 - test-runner/output/skip_pattern.js\n      ---\n      duration_ms: 2509.1404\n      ...\n    # Subtest: test-runner/output/unfinished-suite-async-error.js\n    ok 36 - test-runner/output/unfinished-suite-async-error.js\n      ---\n      duration_ms: 1892.6748\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 37 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 2210.8208\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '  ...\\n' +\n        +   '# Subtest: fail\\n' +\n        +   'not ok 3 - fail\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n        -   '  ...\\n' +\n        -   '# Subtest: fail\\n' +\n        -   'not ok 3 - fail\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 36)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 42.7298\n          ...\n        1..1\n    ok 38 - test-runner/output/default_output.js\n      ---\n      duration_ms: 43.3851\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    ok 39 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 3023.6009\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    ok 40 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 2553.0863\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 21.9099\n          ...\n        1..1\n    ok 41 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 22.3273\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 21.8166\n          ...\n        1..1\n    ok 42 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 22.1665\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    ok 43 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 1850.5936\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    ok 44 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 1708.9594\n      ...\n    1..44\nnot ok 1 - test runner output\n  ---\n  duration_ms: 4635.2133\n  type: 'suite'\n  location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:153:1'\n  failureType: 'subtestsFailed'\n  error: '3 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 47\n# suites 1\n# pass 41\n# fail 3\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 4654.1985"},"time":5328.001,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":671,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 1514.2735\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 1655.316\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 1263.3315\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 1399.6982\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 1206.8913\n      ...\n    # Subtest: test-runner/output/eval_dot.js\n    ok 6 - test-runner/output/eval_dot.js\n      ---\n      duration_ms: 1176.1411\n      ...\n    # Subtest: test-runner/output/eval_spec.js\n    ok 7 - test-runner/output/eval_spec.js\n      ---\n      duration_ms: 1156.796\n      ...\n    # Subtest: test-runner/output/eval_tap.js\n    ok 8 - test-runner/output/eval_tap.js\n      ---\n      duration_ms: 1135.3987\n      ...\n    # Subtest: test-runner/output/hooks.js\n    ok 9 - test-runner/output/hooks.js\n      ---\n      duration_ms: 1130.5036\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    ok 10 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 2558.3862\n      ...\n    # Subtest: test-runner/output/skip-each-hooks.js\n    ok 11 - test-runner/output/skip-each-hooks.js\n      ---\n      duration_ms: 1103.7792\n      ...\n    # Subtest: test-runner/output/suite-skip-hooks.js\n    ok 12 - test-runner/output/suite-skip-hooks.js\n      ---\n      duration_ms: 1083.083\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    ok 13 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 2258.3276\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    ok 14 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 964.2703\n      ...\n    # Subtest: test-runner/output/global-hooks-with-no-tests.js\n    ok 15 - test-runner/output/global-hooks-with-no-tests.js\n      ---\n      duration_ms: 959.1824\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    ok 16 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 994.9744\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    ok 17 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 1172.8488\n      ...\n    # Subtest: test-runner/output/force_exit.js\n    ok 18 - test-runner/output/force_exit.js\n      ---\n      duration_ms: 991.8396\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    ok 19 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 969.6579\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 20 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 1056.964\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            \"      error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"      code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '      ...\\n' +\n        +   '    1..1\\n' +\n        +   'not ok 1 - does not keep event loop alive\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '      stack: |-\\n' +\n        -   '        *\\n' +\n        -   '      ...\\n' +\n        -   '    1..1\\n' +\n        -   'not ok 1 - does not keep event loop alive\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 21 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 1277.0107\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    ok 22 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 1353.8462\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 23 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 3413.9748\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    not ok 24 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 3574.1941\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n            '<testsuites>\\n' +\n        ...\n            '\\t\\t</failure>\\n' +\n            '\\t</testcase>\\n' +\n        +   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11376 more characters\n        -   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11392 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        Error [ERR_TEST_FAILURE]: thrown from callback async throw\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        Error [ERR_TEST_FAILURE]: foo\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        Error [ERR_TEST_FAILURE]: bar\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      actual: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        [Error [ERR_TEST_FAILURE]: callback invoked multiple times] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback async throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        [Error [ERR_TEST_FAILURE]: foo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        [Error [ERR_TEST_FAILURE]: bar] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    ok 25 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 1238.887\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    ok 26 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 3434.6359\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    ok 27 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 4047.3348\n      ...\n    # Subtest: test-runner/output/source_mapped_locations.mjs\n    ok 28 - test-runner/output/source_mapped_locations.mjs\n      ---\n      duration_ms: 1325.4661\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 29 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 3562.9419\n      ...\n    # Subtest: test-runner/output/output.js\n    ok 30 - test-runner/output/output.js\n      ---\n      duration_ms: 2216.3773\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    ok 31 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 3986.9192\n      ...\n    # Subtest: test-runner/output/name_and_skip_patterns.js\n    ok 32 - test-runner/output/name_and_skip_patterns.js\n      ---\n      duration_ms: 1427.7924\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    ok 33 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 1530.5264\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    ok 34 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 1422.3917\n      ...\n    # Subtest: test-runner/output/skip_pattern.js\n    ok 35 - test-runner/output/skip_pattern.js\n      ---\n      duration_ms: 1359.2494\n      ...\n    # Subtest: test-runner/output/unfinished-suite-async-error.js\n    ok 36 - test-runner/output/unfinished-suite-async-error.js\n      ---\n      duration_ms: 1461.5842\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 37 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 1441.3056\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '  ...\\n' +\n        +   '# Subtest: fail\\n' +\n        +   'not ok 3 - fail\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n        -   '  ...\\n' +\n        -   '# Subtest: fail\\n' +\n        -   'not ok 3 - fail\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 36)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 193.4602\n          ...\n        1..1\n    ok 38 - test-runner/output/default_output.js\n      ---\n      duration_ms: 194.1479\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    ok 39 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 2631.4418\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    ok 40 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 2267.3632\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 150.1635\n          ...\n        1..1\n    ok 41 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 150.5585\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 150.0909\n          ...\n        1..1\n    ok 42 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 150.3869\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    ok 43 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 1987.1391\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    ok 44 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 2112.995\n      ...\n    1..44\nnot ok 1 - test runner output\n  ---\n  duration_ms: 4911.2757\n  type: 'suite'\n  location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:153:1'\n  failureType: 'subtestsFailed'\n  error: '3 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 47\n# suites 1\n# pass 41\n# fail 3\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 4927.6228"},"time":5376.068,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"parallel/test-assert-builtins-not-read-from-filesystem","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2022-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-assert-builtins-not-read-from-filesystem","id":70,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Exit code: 1\n,,node:fs:2348\n\n    return binding.writeFileUtf8(\n\n                   ^\n\n\n\nError: ENOENT: no such file or directory, open 'C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.67\\node:internal\\events\\event_emitter'\n\n    at writeFileSync (node:fs:2348:20)\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:41:3)\n\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n\n    at node:internal/main/run_main_module:30:49 {\n\n  errno: -4058,\n\n  code: 'ENOENT',\n\n  syscall: 'open',\n\n  path: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.67\\\\node:internal\\\\events\\\\event_emitter'\n\n}\n\n\n\nNode.js v23.0.0-pre\n\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:31:12)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":678.019,"fullname":"parallel/test-assert-builtins-not-read-from-filesystem","closingTestPoint":false}},{"testName":"parallel/test-bootstrap-modules","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2022-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-bootstrap-modules","id":88,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: These builtins are now unexpectedly loaded before pre-execution.\nIf this is intentional, add them to `expected.beforePreExec`.\n\n# Note: loading more builtins before pre-execution can lead to startup performance regression or invalid snapshots.\n- Consider lazy loading builtins that are not used universally.\n- Make sure that the builtins do not access environment dependent states e.g. command line arguments or environment variables during loading.\n- When in doubt, ask @nodejs/startup.\n\n--- These could be added to expected.beforePreExec ---\n[\n  'NativeModule internal/events/event_emitter',\n  'NativeModule internal/events/event_emitter_helpers'\n]\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-bootstrap-modules.js:245:8)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":317.031,"fullname":"parallel/test-bootstrap-modules","closingTestPoint":false}},{"testName":"parallel/test-node-output-errors","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2022-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-node-output-errors","id":676,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: errors output\n    # Subtest: errors/async_error_eval_cjs.js\n    ok 1 - errors/async_error_eval_cjs.js\n      ---\n      duration_ms: 336.8537\n      ...\n    # Subtest: errors/async_error_eval_esm.js\n    ok 2 - errors/async_error_eval_esm.js\n      ---\n      duration_ms: 310.5059\n      ...\n    # Subtest: errors/async_error_microtask_main.js\n    ok 3 - errors/async_error_microtask_main.js\n      ---\n      duration_ms: 214.6118\n      ...\n    # Subtest: errors/async_error_nexttick_main.js\n    ok 4 - errors/async_error_nexttick_main.js\n      ---\n      duration_ms: 214.302\n      ...\n    # Subtest: errors/async_error_sync_main.js\n    ok 5 - errors/async_error_sync_main.js\n      ---\n      duration_ms: 251.2522\n      ...\n    # Subtest: errors/core_line_numbers.js\n    ok 6 - errors/core_line_numbers.js\n      ---\n      duration_ms: 259.331\n      ...\n    # Subtest: errors/async_error_sync_esm.mjs\n    ok 7 - errors/async_error_sync_esm.mjs\n      ---\n      duration_ms: 503.9356\n      ...\n    # Subtest: errors/test-no-extra-info-on-fatal-exception.js\n    ok 8 - errors/test-no-extra-info-on-fatal-exception.js\n      ---\n      duration_ms: 213.2152\n      ...\n    # Subtest: errors/error_aggregateTwoErrors.js\n    ok 9 - errors/error_aggregateTwoErrors.js\n      ---\n      duration_ms: 266.8846\n      ...\n    # Subtest: errors/error_exit.js\n    ok 10 - errors/error_exit.js\n      ---\n      duration_ms: 407.4396\n      ...\n    # Subtest: errors/error_with_nul.js\n    ok 11 - errors/error_with_nul.js\n      ---\n      duration_ms: 204.7062\n      ...\n    # Subtest: errors/events_unhandled_error_common_trace.js\n    not ok 12 - errors/events_unhandled_error_common_trace.js\n      ---\n      duration_ms: 220.5842\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_nexttick.js\n    not ok 13 - errors/events_unhandled_error_nexttick.js\n      ---\n      duration_ms: 211.3094\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at *events_unhandled_error_nexttick.js:*:*\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_sameline.js\n    not ok 14 - errors/events_unhandled_error_sameline.js\n      ---\n      duration_ms: 211.7435\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_subclass.js\n    not ok 15 - errors/events_unhandled_error_subclass.js\n      ---\n      duration_ms: 220.1091\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/if-error-has-good-stack.js\n    ok 16 - errors/if-error-has-good-stack.js\n      ---\n      duration_ms: 200.2977\n      ...\n    # Subtest: errors/throw_custom_error.js\n    ok 17 - errors/throw_custom_error.js\n      ---\n      duration_ms: 293.7613\n      ...\n    # Subtest: errors/throw_error_with_getter_throw.js\n    ok 18 - errors/throw_error_with_getter_throw.js\n      ---\n      duration_ms: 268.1791\n      ...\n    # Subtest: errors/throw_in_line_with_tabs.js\n    ok 19 - errors/throw_in_line_with_tabs.js\n      ---\n      duration_ms: 218.7483\n      ...\n    # Subtest: errors/throw_non_error.js\n    ok 20 - errors/throw_non_error.js\n      ---\n      duration_ms: 228.2343\n      ...\n    # Subtest: errors/throw_null.js\n    ok 21 - errors/throw_null.js\n      ---\n      duration_ms: 213.7306\n      ...\n    # Subtest: errors/throw_undefined.js\n    ok 22 - errors/throw_undefined.js\n      ---\n      duration_ms: 214.7366\n      ...\n    # Subtest: errors/timeout_throw.js\n    ok 23 - errors/timeout_throw.js\n      ---\n      duration_ms: 197.4545\n      ...\n    # Subtest: errors/undefined_reference_in_new_context.js\n    ok 24 - errors/undefined_reference_in_new_context.js\n      ---\n      duration_ms: 200.5889\n      ...\n    # Subtest: errors/promise_always_throw_unhandled.js\n    ok 25 - errors/promise_always_throw_unhandled.js\n      ---\n      duration_ms: 209.0832\n      ...\n    # Subtest: errors/promise_unhandled_warn_with_error.js\n    ok 26 - errors/promise_unhandled_warn_with_error.js\n      ---\n      duration_ms: 200.175\n      ...\n    # Subtest: errors/unhandled_promise_trace_warnings.js\n    ok 27 - errors/unhandled_promise_trace_warnings.js\n      ---\n      duration_ms: 229.9854\n      ...\n    # Subtest: errors/force_colors.js\n    ok 28 - errors/force_colors.js\n      ---\n      duration_ms: 135.7942\n      ...\n    1..28\nnot ok 1 - errors output\n  ---\n  duration_ms: 6865.6429\n  type: 'suite'\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:23:1'\n  failureType: 'subtestsFailed'\n  error: '4 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 28\n# suites 1\n# pass 24\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 6884.2668"},"time":7334.248,"fullname":"parallel/test-node-output-errors","closingTestPoint":false}},{"testName":"parallel/test-assert-builtins-not-read-from-filesystem","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2016-COMPILED_BY-vs2022-x86 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2016_vs2015-x64-2","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-assert-builtins-not-read-from-filesystem","id":69,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Exit code: 1\n,,node:fs:2348\n\n    return binding.writeFileUtf8(\n\n                   ^\n\n\n\nError: ENOENT: no such file or directory, open 'C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.67\\node:internal\\events\\event_emitter'\n\n    at writeFileSync (node:fs:2348:20)\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:41:3)\n\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n\n    at node:internal/main/run_main_module:30:49 {\n\n  errno: -4058,\n\n  code: 'ENOENT',\n\n  syscall: 'open',\n\n  path: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.67\\\\node:internal\\\\events\\\\event_emitter'\n\n}\n\n\n\nNode.js v23.0.0-pre\n\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:31:12)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":485,"fullname":"parallel/test-assert-builtins-not-read-from-filesystem","closingTestPoint":false}},{"testName":"parallel/test-bootstrap-modules","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2016-COMPILED_BY-vs2022-x86 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2016_vs2015-x64-2","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-bootstrap-modules","id":83,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: These builtins are now unexpectedly loaded before pre-execution.\nIf this is intentional, add them to `expected.beforePreExec`.\n\n# Note: loading more builtins before pre-execution can lead to startup performance regression or invalid snapshots.\n- Consider lazy loading builtins that are not used universally.\n- Make sure that the builtins do not access environment dependent states e.g. command line arguments or environment variables during loading.\n- When in doubt, ask @nodejs/startup.\n\n--- These could be added to expected.beforePreExec ---\n[\n  'NativeModule internal/events/event_emitter',\n  'NativeModule internal/events/event_emitter_helpers'\n]\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-bootstrap-modules.js:245:8)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":184.038,"fullname":"parallel/test-bootstrap-modules","closingTestPoint":false}},{"testName":"parallel/test-node-output-errors","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2016-COMPILED_BY-vs2022-x86 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2016_vs2015-x64-2","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-node-output-errors","id":670,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: errors output\n    # Subtest: errors/async_error_eval_cjs.js\n    ok 1 - errors/async_error_eval_cjs.js\n      ---\n      duration_ms: 281.6229\n      ...\n    # Subtest: errors/async_error_eval_esm.js\n    ok 2 - errors/async_error_eval_esm.js\n      ---\n      duration_ms: 298.0992\n      ...\n    # Subtest: errors/async_error_microtask_main.js\n    ok 3 - errors/async_error_microtask_main.js\n      ---\n      duration_ms: 159.9886\n      ...\n    # Subtest: errors/async_error_nexttick_main.js\n    ok 4 - errors/async_error_nexttick_main.js\n      ---\n      duration_ms: 176.1946\n      ...\n    # Subtest: errors/async_error_sync_main.js\n    ok 5 - errors/async_error_sync_main.js\n      ---\n      duration_ms: 187.4075\n      ...\n    # Subtest: errors/core_line_numbers.js\n    ok 6 - errors/core_line_numbers.js\n      ---\n      duration_ms: 212.7889\n      ...\n    # Subtest: errors/async_error_sync_esm.mjs\n    ok 7 - errors/async_error_sync_esm.mjs\n      ---\n      duration_ms: 354.1268\n      ...\n    # Subtest: errors/test-no-extra-info-on-fatal-exception.js\n    ok 8 - errors/test-no-extra-info-on-fatal-exception.js\n      ---\n      duration_ms: 226.095\n      ...\n    # Subtest: errors/error_aggregateTwoErrors.js\n    ok 9 - errors/error_aggregateTwoErrors.js\n      ---\n      duration_ms: 167.0285\n      ...\n    # Subtest: errors/error_exit.js\n    ok 10 - errors/error_exit.js\n      ---\n      duration_ms: 178.3555\n      ...\n    # Subtest: errors/error_with_nul.js\n    ok 11 - errors/error_with_nul.js\n      ---\n      duration_ms: 266.7476\n      ...\n    # Subtest: errors/events_unhandled_error_common_trace.js\n    not ok 12 - errors/events_unhandled_error_common_trace.js\n      ---\n      duration_ms: 266.7143\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_nexttick.js\n    not ok 13 - errors/events_unhandled_error_nexttick.js\n      ---\n      duration_ms: 179.8477\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at *events_unhandled_error_nexttick.js:*:*\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_sameline.js\n    not ok 14 - errors/events_unhandled_error_sameline.js\n      ---\n      duration_ms: 173.1226\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_subclass.js\n    not ok 15 - errors/events_unhandled_error_subclass.js\n      ---\n      duration_ms: 171.5353\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/if-error-has-good-stack.js\n    ok 16 - errors/if-error-has-good-stack.js\n      ---\n      duration_ms: 166.0438\n      ...\n    # Subtest: errors/throw_custom_error.js\n    ok 17 - errors/throw_custom_error.js\n      ---\n      duration_ms: 147.641\n      ...\n    # Subtest: errors/throw_error_with_getter_throw.js\n    ok 18 - errors/throw_error_with_getter_throw.js\n      ---\n      duration_ms: 169.6977\n      ...\n    # Subtest: errors/throw_in_line_with_tabs.js\n    ok 19 - errors/throw_in_line_with_tabs.js\n      ---\n      duration_ms: 192.1653\n      ...\n    # Subtest: errors/throw_non_error.js\n    ok 20 - errors/throw_non_error.js\n      ---\n      duration_ms: 165.7285\n      ...\n    # Subtest: errors/throw_null.js\n    ok 21 - errors/throw_null.js\n      ---\n      duration_ms: 173.4331\n      ...\n    # Subtest: errors/throw_undefined.js\n    ok 22 - errors/throw_undefined.js\n      ---\n      duration_ms: 155.523\n      ...\n    # Subtest: errors/timeout_throw.js\n    ok 23 - errors/timeout_throw.js\n      ---\n      duration_ms: 176.121\n      ...\n    # Subtest: errors/undefined_reference_in_new_context.js\n    ok 24 - errors/undefined_reference_in_new_context.js\n      ---\n      duration_ms: 164.4442\n      ...\n    # Subtest: errors/promise_always_throw_unhandled.js\n    ok 25 - errors/promise_always_throw_unhandled.js\n      ---\n      duration_ms: 154.5532\n      ...\n    # Subtest: errors/promise_unhandled_warn_with_error.js\n    ok 26 - errors/promise_unhandled_warn_with_error.js\n      ---\n      duration_ms: 163.1481\n      ...\n    # Subtest: errors/unhandled_promise_trace_warnings.js\n    ok 27 - errors/unhandled_promise_trace_warnings.js\n      ---\n      duration_ms: 170.684\n      ...\n    # Subtest: errors/force_colors.js\n    ok 28 - errors/force_colors.js\n      ---\n      duration_ms: 151.4609\n      ...\n    1..28\nnot ok 1 - errors output\n  ---\n  duration_ms: 5458.0136\n  type: 'suite'\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:23:1'\n  failureType: 'subtestsFailed'\n  error: '4 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 28\n# suites 1\n# pass 24\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 5498.5888"},"time":5874.097,"fullname":"parallel/test-node-output-errors","closingTestPoint":false}},{"testName":"message/stdin_messages","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2016-COMPILED_BY-vs2022-x86 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win2016_vs2017-x64-1","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"message/stdin_messages","id":78,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","stack":"[stdin]\n[stdin]:1\nwith(this){__filename}\n^^^^\n\nSyntaxError: Strict mode code may not include a with statement\n    at makeContextifyScript (node:internal/vm:185:14)\n    at node:internal/process/execution:107:22\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\nNode.js v23.0.0-pre\n42\n42\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n100\n[stdin]:1\nlet x = 100; y = x;\n               ^\n\nReferenceError: y is not defined\n    at [stdin]:1:16\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\ndone"},"time":1112.008,"fullname":"message/stdin_messages","closingTestPoint":false}},{"testName":"message/stdin_messages","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2019-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"message/stdin_messages","id":86,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","stack":"[stdin]\n[stdin]:1\nwith(this){__filename}\n^^^^\n\nSyntaxError: Strict mode code may not include a with statement\n    at makeContextifyScript (node:internal/vm:185:14)\n    at node:internal/process/execution:107:22\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\nNode.js v23.0.0-pre\n42\n42\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n100\n[stdin]:1\nlet x = 100; y = x;\n               ^\n\nReferenceError: y is not defined\n    at [stdin]:1:16\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\ndone"},"time":1776.014,"fullname":"message/stdin_messages","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win10-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win10-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win10_vs2019-x64-2","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":671,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 1631.5965\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 1540.9707\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 757.5366\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 1446.1617\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 851.774\n      ...\n    # Subtest: test-runner/output/eval_dot.js\n    ok 6 - test-runner/output/eval_dot.js\n      ---\n      duration_ms: 738.8542\n      ...\n    # Subtest: test-runner/output/eval_spec.js\n    ok 7 - test-runner/output/eval_spec.js\n      ---\n      duration_ms: 783.4647\n      ...\n    # Subtest: test-runner/output/eval_tap.js\n    ok 8 - test-runner/output/eval_tap.js\n      ---\n      duration_ms: 777.3754\n      ...\n    # Subtest: test-runner/output/hooks.js\n    ok 9 - test-runner/output/hooks.js\n      ---\n      duration_ms: 770.6231\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    ok 10 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 1860.2371\n      ...\n    # Subtest: test-runner/output/skip-each-hooks.js\n    ok 11 - test-runner/output/skip-each-hooks.js\n      ---\n      duration_ms: 813.9276\n      ...\n    # Subtest: test-runner/output/suite-skip-hooks.js\n    ok 12 - test-runner/output/suite-skip-hooks.js\n      ---\n      duration_ms: 605.7657\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    ok 13 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 1958.5182\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    ok 14 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 795.5945\n      ...\n    # Subtest: test-runner/output/global-hooks-with-no-tests.js\n    ok 15 - test-runner/output/global-hooks-with-no-tests.js\n      ---\n      duration_ms: 788.0027\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    ok 16 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 1060.3137\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    ok 17 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 725.8214\n      ...\n    # Subtest: test-runner/output/force_exit.js\n    ok 18 - test-runner/output/force_exit.js\n      ---\n      duration_ms: 1227.4154\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    ok 19 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 1187.6677\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 20 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 1172.9282\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            \"      error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"      code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '      ...\\n' +\n        +   '    1..1\\n' +\n        +   'not ok 1 - does not keep event loop alive\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '      stack: |-\\n' +\n        -   '        *\\n' +\n        -   '      ...\\n' +\n        -   '    1..1\\n' +\n        -   'not ok 1 - does not keep event loop alive\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 21 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 1166.8003\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    ok 22 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 1241.4985\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 23 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 2275.132\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    not ok 24 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 2096.988\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n            '<testsuites>\\n' +\n        ...\n            '\\t\\t</failure>\\n' +\n            '\\t</testcase>\\n' +\n        +   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11376 more characters\n        -   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11392 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        Error [ERR_TEST_FAILURE]: thrown from callback async throw\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        Error [ERR_TEST_FAILURE]: foo\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        Error [ERR_TEST_FAILURE]: bar\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      actual: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        [Error [ERR_TEST_FAILURE]: callback invoked multiple times] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback async throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        [Error [ERR_TEST_FAILURE]: foo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        [Error [ERR_TEST_FAILURE]: bar] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    ok 25 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 1073.3317\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    ok 26 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 2216.767\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    ok 27 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 2329.342\n      ...\n    # Subtest: test-runner/output/source_mapped_locations.mjs\n    ok 28 - test-runner/output/source_mapped_locations.mjs\n      ---\n      duration_ms: 1090.0992\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 29 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 2293.196\n      ...\n    # Subtest: test-runner/output/output.js\n    ok 30 - test-runner/output/output.js\n      ---\n      duration_ms: 1514.2054\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    ok 31 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 2297.4614\n      ...\n    # Subtest: test-runner/output/name_and_skip_patterns.js\n    ok 32 - test-runner/output/name_and_skip_patterns.js\n      ---\n      duration_ms: 1257.1119\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    ok 33 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 1312.9826\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    ok 34 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 1075.4569\n      ...\n    # Subtest: test-runner/output/skip_pattern.js\n    ok 35 - test-runner/output/skip_pattern.js\n      ---\n      duration_ms: 1036.0624\n      ...\n    # Subtest: test-runner/output/unfinished-suite-async-error.js\n    ok 36 - test-runner/output/unfinished-suite-async-error.js\n      ---\n      duration_ms: 945.8217\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 37 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 978.967\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '  ...\\n' +\n        +   '# Subtest: fail\\n' +\n        +   'not ok 3 - fail\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n        -   '  ...\\n' +\n        -   '# Subtest: fail\\n' +\n        -   'not ok 3 - fail\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 36)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 114.9987\n          ...\n        1..1\n    ok 38 - test-runner/output/default_output.js\n      ---\n      duration_ms: 115.5239\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    ok 39 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 1388.9887\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    ok 40 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 1299.0423\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 17.6577\n          ...\n        1..1\n    ok 41 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 17.9759\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 17.5881\n          ...\n        1..1\n    ok 42 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 17.8331\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    ok 43 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 1149.7125\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    ok 44 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 1193.7853\n      ...\n    1..44\nnot ok 1 - test runner output\n  ---\n  duration_ms: 2669.8273\n  type: 'suite'\n  location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:153:1'\n  failureType: 'subtestsFailed'\n  error: '3 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 47\n# suites 1\n# pass 41\n# fail 3\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 2684.603"},"time":3019.004,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"message/stdin_messages","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win10-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win10-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win10_vs2019-x64-1","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"message/stdin_messages","id":80,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","stack":"[stdin]\n[stdin]:1\nwith(this){__filename}\n^^^^\n\nSyntaxError: Strict mode code may not include a with statement\n    at makeContextifyScript (node:internal/vm:185:14)\n    at node:internal/process/execution:107:22\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\nNode.js v23.0.0-pre\n42\n42\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n100\n[stdin]:1\nlet x = 100; y = x;\n               ^\n\nReferenceError: y is not defined\n    at [stdin]:1:16\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\ndone"},"time":1656.009,"fullname":"message/stdin_messages","closingTestPoint":false}},{"testName":"parallel/test-assert-builtins-not-read-from-filesystem","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2019-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-assert-builtins-not-read-from-filesystem","id":69,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Exit code: 1\n,,node:fs:2348\n\n    return binding.writeFileUtf8(\n\n                   ^\n\n\n\nError: ENOENT: no such file or directory, open 'C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.67\\node:internal\\events\\event_emitter'\n\n    at writeFileSync (node:fs:2348:20)\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:41:3)\n\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n\n    at node:internal/main/run_main_module:30:49 {\n\n  errno: -4058,\n\n  code: 'ENOENT',\n\n  syscall: 'open',\n\n  path: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.67\\\\node:internal\\\\events\\\\event_emitter'\n\n}\n\n\n\nNode.js v23.0.0-pre\n\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:31:12)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":692.023,"fullname":"parallel/test-assert-builtins-not-read-from-filesystem","closingTestPoint":false}},{"testName":"parallel/test-bootstrap-modules","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2019-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-bootstrap-modules","id":85,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: These builtins are now unexpectedly loaded before pre-execution.\nIf this is intentional, add them to `expected.beforePreExec`.\n\n# Note: loading more builtins before pre-execution can lead to startup performance regression or invalid snapshots.\n- Consider lazy loading builtins that are not used universally.\n- Make sure that the builtins do not access environment dependent states e.g. command line arguments or environment variables during loading.\n- When in doubt, ask @nodejs/startup.\n\n--- These could be added to expected.beforePreExec ---\n[\n  'NativeModule internal/events/event_emitter',\n  'NativeModule internal/events/event_emitter_helpers'\n]\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-bootstrap-modules.js:245:8)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":317.032,"fullname":"parallel/test-bootstrap-modules","closingTestPoint":false}},{"testName":"parallel/test-node-output-errors","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2019-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-node-output-errors","id":670,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: errors output\n    # Subtest: errors/async_error_eval_cjs.js\n    ok 1 - errors/async_error_eval_cjs.js\n      ---\n      duration_ms: 373.2556\n      ...\n    # Subtest: errors/async_error_eval_esm.js\n    ok 2 - errors/async_error_eval_esm.js\n      ---\n      duration_ms: 386.8834\n      ...\n    # Subtest: errors/async_error_microtask_main.js\n    ok 3 - errors/async_error_microtask_main.js\n      ---\n      duration_ms: 215.2966\n      ...\n    # Subtest: errors/async_error_nexttick_main.js\n    ok 4 - errors/async_error_nexttick_main.js\n      ---\n      duration_ms: 208.2761\n      ...\n    # Subtest: errors/async_error_sync_main.js\n    ok 5 - errors/async_error_sync_main.js\n      ---\n      duration_ms: 233.5466\n      ...\n    # Subtest: errors/core_line_numbers.js\n    ok 6 - errors/core_line_numbers.js\n      ---\n      duration_ms: 267.2016\n      ...\n    # Subtest: errors/async_error_sync_esm.mjs\n    ok 7 - errors/async_error_sync_esm.mjs\n      ---\n      duration_ms: 633.9386\n      ...\n    # Subtest: errors/test-no-extra-info-on-fatal-exception.js\n    ok 8 - errors/test-no-extra-info-on-fatal-exception.js\n      ---\n      duration_ms: 273.5602\n      ...\n    # Subtest: errors/error_aggregateTwoErrors.js\n    ok 9 - errors/error_aggregateTwoErrors.js\n      ---\n      duration_ms: 239.8523\n      ...\n    # Subtest: errors/error_exit.js\n    ok 10 - errors/error_exit.js\n      ---\n      duration_ms: 293.294\n      ...\n    # Subtest: errors/error_with_nul.js\n    ok 11 - errors/error_with_nul.js\n      ---\n      duration_ms: 529.5133\n      ...\n    # Subtest: errors/events_unhandled_error_common_trace.js\n    not ok 12 - errors/events_unhandled_error_common_trace.js\n      ---\n      duration_ms: 225.051\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_nexttick.js\n    not ok 13 - errors/events_unhandled_error_nexttick.js\n      ---\n      duration_ms: 290.7656\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at *events_unhandled_error_nexttick.js:*:*\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_sameline.js\n    not ok 14 - errors/events_unhandled_error_sameline.js\n      ---\n      duration_ms: 210.0547\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_subclass.js\n    not ok 15 - errors/events_unhandled_error_subclass.js\n      ---\n      duration_ms: 205.8541\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/if-error-has-good-stack.js\n    ok 16 - errors/if-error-has-good-stack.js\n      ---\n      duration_ms: 200.1863\n      ...\n    # Subtest: errors/throw_custom_error.js\n    ok 17 - errors/throw_custom_error.js\n      ---\n      duration_ms: 202.563\n      ...\n    # Subtest: errors/throw_error_with_getter_throw.js\n    ok 18 - errors/throw_error_with_getter_throw.js\n      ---\n      duration_ms: 273.6152\n      ...\n    # Subtest: errors/throw_in_line_with_tabs.js\n    ok 19 - errors/throw_in_line_with_tabs.js\n      ---\n      duration_ms: 259.9274\n      ...\n    # Subtest: errors/throw_non_error.js\n    ok 20 - errors/throw_non_error.js\n      ---\n      duration_ms: 194.0052\n      ...\n    # Subtest: errors/throw_null.js\n    ok 21 - errors/throw_null.js\n      ---\n      duration_ms: 196.7116\n      ...\n    # Subtest: errors/throw_undefined.js\n    ok 22 - errors/throw_undefined.js\n      ---\n      duration_ms: 196.7028\n      ...\n    # Subtest: errors/timeout_throw.js\n    ok 23 - errors/timeout_throw.js\n      ---\n      duration_ms: 249.6529\n      ...\n    # Subtest: errors/undefined_reference_in_new_context.js\n    ok 24 - errors/undefined_reference_in_new_context.js\n      ---\n      duration_ms: 286.4647\n      ...\n    # Subtest: errors/promise_always_throw_unhandled.js\n    ok 25 - errors/promise_always_throw_unhandled.js\n      ---\n      duration_ms: 263.9382\n      ...\n    # Subtest: errors/promise_unhandled_warn_with_error.js\n    ok 26 - errors/promise_unhandled_warn_with_error.js\n      ---\n      duration_ms: 260.9114\n      ...\n    # Subtest: errors/unhandled_promise_trace_warnings.js\n    ok 27 - errors/unhandled_promise_trace_warnings.js\n      ---\n      duration_ms: 292.8971\n      ...\n    # Subtest: errors/force_colors.js\n    ok 28 - errors/force_colors.js\n      ---\n      duration_ms: 225.3913\n      ...\n    1..28\nnot ok 1 - errors output\n  ---\n  duration_ms: 7700.7574\n  type: 'suite'\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:23:1'\n  failureType: 'subtestsFailed'\n  error: '4 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 28\n# suites 1\n# pass 24\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 7731.324"},"time":8324.142,"fullname":"parallel/test-node-output-errors","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win2022-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2022-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2022_vs2022-x64-5","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":680,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 4146.8666\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 4052.9498\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 3983.258\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 3867.6249\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 3687.294\n      ...\n    # Subtest: test-runner/output/eval_dot.js\n    ok 6 - test-runner/output/eval_dot.js\n      ---\n      duration_ms: 3460.575\n      ...\n    # Subtest: test-runner/output/eval_spec.js\n    ok 7 - test-runner/output/eval_spec.js\n      ---\n      duration_ms: 3301.8808\n      ...\n    # Subtest: test-runner/output/eval_tap.js\n    ok 8 - test-runner/output/eval_tap.js\n      ---\n      duration_ms: 3207.0722\n      ...\n    # Subtest: test-runner/output/hooks.js\n    ok 9 - test-runner/output/hooks.js\n      ---\n      duration_ms: 3163.1523\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    ok 10 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 3130.4805\n      ...\n    # Subtest: test-runner/output/skip-each-hooks.js\n    ok 11 - test-runner/output/skip-each-hooks.js\n      ---\n      duration_ms: 3058.3327\n      ...\n    # Subtest: test-runner/output/suite-skip-hooks.js\n    ok 12 - test-runner/output/suite-skip-hooks.js\n      ---\n      duration_ms: 3018.24\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    ok 13 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 2991.392\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    ok 14 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 2588.7343\n      ...\n    # Subtest: test-runner/output/global-hooks-with-no-tests.js\n    ok 15 - test-runner/output/global-hooks-with-no-tests.js\n      ---\n      duration_ms: 2512.8656\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    ok 16 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 2468.2781\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    ok 17 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 2402.987\n      ...\n    # Subtest: test-runner/output/force_exit.js\n    ok 18 - test-runner/output/force_exit.js\n      ---\n      duration_ms: 2208.7564\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    ok 19 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 2143.0277\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 20 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 2107.84\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            \"      error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"      code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '      ...\\n' +\n        +   '    1..1\\n' +\n        +   'not ok 1 - does not keep event loop alive\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '      stack: |-\\n' +\n        -   '        *\\n' +\n        -   '      ...\\n' +\n        -   '    1..1\\n' +\n        -   'not ok 1 - does not keep event loop alive\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 21 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 2070.8122\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    ok 22 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 2042.3178\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 23 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 2620.1673\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    not ok 24 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 2407.8909\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n            '<testsuites>\\n' +\n        ...\n            '\\t\\t</failure>\\n' +\n            '\\t</testcase>\\n' +\n        +   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11376 more characters\n        -   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11392 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        Error [ERR_TEST_FAILURE]: thrown from callback async throw\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        Error [ERR_TEST_FAILURE]: foo\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        Error [ERR_TEST_FAILURE]: bar\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      actual: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        [Error [ERR_TEST_FAILURE]: callback invoked multiple times] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback async throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        [Error [ERR_TEST_FAILURE]: foo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        [Error [ERR_TEST_FAILURE]: bar] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    ok 25 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 1936.0843\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    ok 26 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 2081.4739\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    ok 27 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 2653.107\n      ...\n    # Subtest: test-runner/output/source_mapped_locations.mjs\n    ok 28 - test-runner/output/source_mapped_locations.mjs\n      ---\n      duration_ms: 1753.0908\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 29 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 2510.177\n      ...\n    # Subtest: test-runner/output/output.js\n    ok 30 - test-runner/output/output.js\n      ---\n      duration_ms: 1603.3029\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    ok 31 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 2400.4478\n      ...\n    # Subtest: test-runner/output/name_and_skip_patterns.js\n    ok 32 - test-runner/output/name_and_skip_patterns.js\n      ---\n      duration_ms: 1122.3517\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    ok 33 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 1003.0805\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    ok 34 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 918.4667\n      ...\n    # Subtest: test-runner/output/skip_pattern.js\n    ok 35 - test-runner/output/skip_pattern.js\n      ---\n      duration_ms: 872.4488\n      ...\n    # Subtest: test-runner/output/unfinished-suite-async-error.js\n    ok 36 - test-runner/output/unfinished-suite-async-error.js\n      ---\n      duration_ms: 774.8305\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 37 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 933.8843\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '  ...\\n' +\n        +   '# Subtest: fail\\n' +\n        +   'not ok 3 - fail\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n        -   '  ...\\n' +\n        -   '# Subtest: fail\\n' +\n        -   'not ok 3 - fail\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 36)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 452.0151\n          ...\n        1..1\n    ok 38 - test-runner/output/default_output.js\n      ---\n      duration_ms: 453.1089\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    ok 39 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 1306.8106\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    ok 40 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 1119.8591\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 305.342\n          ...\n        1..1\n    ok 41 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 306.028\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 305.1642\n          ...\n        1..1\n    ok 42 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 305.7905\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    ok 43 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 1014.4821\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    ok 44 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 878.9645\n      ...\n    1..44\nnot ok 1 - test runner output\n  ---\n  duration_ms: 5247.118\n  type: 'suite'\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:153:1'\n  failureType: 'subtestsFailed'\n  error: '3 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 47\n# suites 1\n# pass 41\n# fail 3\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 5274.3497"},"time":5840.212,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win2019-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":678,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 1962.4632\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 1988.2939\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 812.1166\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 1148.603\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 783.5819\n      ...\n    # Subtest: test-runner/output/eval_dot.js\n    ok 6 - test-runner/output/eval_dot.js\n      ---\n      duration_ms: 775.7556\n      ...\n    # Subtest: test-runner/output/eval_spec.js\n    ok 7 - test-runner/output/eval_spec.js\n      ---\n      duration_ms: 766.5375\n      ...\n    # Subtest: test-runner/output/eval_tap.js\n    ok 8 - test-runner/output/eval_tap.js\n      ---\n      duration_ms: 754.7175\n      ...\n    # Subtest: test-runner/output/hooks.js\n    ok 9 - test-runner/output/hooks.js\n      ---\n      duration_ms: 954.8938\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    ok 10 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 2610.0003\n      ...\n    # Subtest: test-runner/output/skip-each-hooks.js\n    ok 11 - test-runner/output/skip-each-hooks.js\n      ---\n      duration_ms: 712.0257\n      ...\n    # Subtest: test-runner/output/suite-skip-hooks.js\n    ok 12 - test-runner/output/suite-skip-hooks.js\n      ---\n      duration_ms: 907.678\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    ok 13 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 2513.1675\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    ok 14 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 808.6471\n      ...\n    # Subtest: test-runner/output/global-hooks-with-no-tests.js\n    ok 15 - test-runner/output/global-hooks-with-no-tests.js\n      ---\n      duration_ms: 783.2994\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    ok 16 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 1730.8782\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    ok 17 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 998.0577\n      ...\n    # Subtest: test-runner/output/force_exit.js\n    ok 18 - test-runner/output/force_exit.js\n      ---\n      duration_ms: 807.4217\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    ok 19 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 1229.1846\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 20 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 1182.1881\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            \"      error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"      code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '      ...\\n' +\n        +   '    1..1\\n' +\n        +   'not ok 1 - does not keep event loop alive\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '      stack: |-\\n' +\n        -   '        *\\n' +\n        -   '      ...\\n' +\n        -   '    1..1\\n' +\n        -   'not ok 1 - does not keep event loop alive\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 21 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 1172.9296\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    ok 22 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 1881.8894\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 23 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 2211.002\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    not ok 24 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 3393.7983\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n            '<testsuites>\\n' +\n        ...\n            '\\t\\t</failure>\\n' +\n            '\\t</testcase>\\n' +\n        +   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11376 more characters\n        -   '\\t<testcase name=\"callback called twice\" time=\"*\" '... 11392 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        Error [ERR_TEST_FAILURE]: thrown from callback async throw\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        Error [ERR_TEST_FAILURE]: foo\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        Error [ERR_TEST_FAILURE]: bar\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      actual: |-\n        <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <testsuites>\n        \t<testcase name=\"sync pass todo\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass todo with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"todo\" message=\"this is a passing todo\"/>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo\">\n        \t\t<skipped type=\"todo\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync fail todo with message\" time=\"*\" classname=\"test\" failure=\"thrown from sync fail todo with message\">\n        \t\t<skipped type=\"todo\" message=\"this is a failing todo\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync fail todo with message\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync fail todo with message] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip pass with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync pass\" time=\"*\" classname=\"test\"/>\n        \t<!-- this test should pass -->\n        \t<testcase name=\"sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from sync throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from sync throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from sync throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip pass\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"async pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async skip fail\" time=\"*\" classname=\"test\" failure=\"thrown from async throw fail\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from async throw fail\">\n        [Error [ERR_TEST_FAILURE]: thrown from async throw fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"async assertion fail\" time=\"*\" classname=\"test\" failure=\"Expected values to be strictly equal:true !== false\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be strictly equal:true !== false\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be strictly equal:\n        \n        true !== false\n        ] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"reject fail\" time=\"*\" classname=\"test\" failure=\"rejected from reject fail\">\n        \t\t<failure type=\"testCodeFailure\" message=\"rejected from reject fail\">\n        [Error [ERR_TEST_FAILURE]: rejected from reject fail] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async unhandled rejection - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate throw - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate reject - passes but warns\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"immediate resolve pass\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"subtest sync throw fail\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+sync throw fail\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fail\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fail\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fail\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<!-- this subtest should make its parent test fail -->\n        \t</testsuite>\n        \t<testcase name=\"sync throw non-error fail\" time=\"*\" classname=\"test\" failure=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Symbol(thrown symbol from sync throw non-error fail)\">\n        [Error [ERR_TEST_FAILURE]: Symbol(thrown symbol from sync throw non-error fail)] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: Symbol(thrown symbol from sync throw non-error fail) }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"level 0a\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"level 1a\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1b\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1c\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"level 1d\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<testsuite name=\"top level\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"1\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"+long running\" time=\"*\" classname=\"test\" failure=\"test did not finish before its parent and was cancelled\">\n        \t\t\t<failure type=\"cancelledByParent\" message=\"test did not finish before its parent and was cancelled\">\n        [Error [ERR_TEST_FAILURE]: test did not finish before its parent and was cancelled] { code: 'ERR_TEST_FAILURE', failureType: 'cancelledByParent', cause: 'test did not finish before its parent and was cancelled' }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testsuite name=\"+short running\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"1\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t\t<testcase name=\"++short running\" time=\"*\" classname=\"test\"/>\n        \t\t</testsuite>\n        \t</testsuite>\n        \t<testcase name=\"invalid subtest - pass but subtest fails\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"sync skip option\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option with message\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"this is skipped\"/>\n        \t</testcase>\n        \t<testcase name=\"sync skip option is false fail\" time=\"*\" classname=\"test\" failure=\"this should be executed\">\n        \t\t<failure type=\"testCodeFailure\" message=\"this should be executed\">\n        [Error [ERR_TEST_FAILURE]: this should be executed] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"functionOnly\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"test with only a name provided\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"&lt;anonymous>\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"test with a name and options provided\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"functionAndOptions\" time=\"*\" classname=\"test\">\n        \t\t<skipped type=\"skipped\" message=\"true\"/>\n        \t</testcase>\n        \t<testcase name=\"callback pass\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback fail\" time=\"*\" classname=\"test\" failure=\"callback failure\">\n        \t\t<failure type=\"testCodeFailure\" message=\"callback failure\">\n        [Error [ERR_TEST_FAILURE]: callback failure] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: callback failure\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"sync t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"async t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback t is this in test\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback also returns a Promise\" time=\"*\" classname=\"test\" failure=\"passed a callback but also returned a Promise\">\n        \t\t<failure type=\"callbackAndPromisePresent\" message=\"passed a callback but also returned a Promise\">\n        [Error [ERR_TEST_FAILURE]: passed a callback but also returned a Promise] { code: 'ERR_TEST_FAILURE', failureType: 'callbackAndPromisePresent', cause: 'passed a callback but also returned a Promise' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback throw\">\n        \t\t<failure type=\"testCodeFailure\" message=\"thrown from callback throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"multipleCallbackInvocations\" message=\"callback invoked multiple times\">\n        Error [ERR_TEST_FAILURE]: callback invoked multiple times\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'multipleCallbackInvocations',\n          cause: 'callback invoked multiple times'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback called twice in different ticks\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"callback called twice in future tick\" time=\"*\" classname=\"test\" failure=\"callback invoked multiple times\">\n        \t\t<failure type=\"uncaughtException\" message=\"callback invoked multiple times\">\n        [Error [ERR_TEST_FAILURE]: callback invoked multiple times] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw\" time=\"*\" classname=\"test\" failure=\"thrown from callback async throw\">\n        \t\t<failure type=\"uncaughtException\" message=\"thrown from callback async throw\">\n        [Error [ERR_TEST_FAILURE]: thrown from callback async throw] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: thrown from callback async throw\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"callback async throw after done\" time=\"*\" classname=\"test\"/>\n        \t<testsuite name=\"only is set but not in only mode\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"4\" failures=\"0\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"running subtest 1\" time=\"*\" classname=\"test\"/>\n        \t\t<testcase name=\"running subtest 2\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 3\" time=\"*\" classname=\"test\"/>\n        \t\t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t\t<testcase name=\"running subtest 4\" time=\"*\" classname=\"test\"/>\n        \t</testsuite>\n        \t<!-- 'only' and 'runOnly' require the &#45;&#45;test-only command-line option. -->\n        \t<testcase name=\"custom inspect symbol fail\" time=\"*\" classname=\"test\" failure=\"customized\">\n        \t\t<failure type=\"testCodeFailure\" message=\"customized\">\n        [Error [ERR_TEST_FAILURE]: customized] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: customized }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"custom inspect symbol that throws fail\" time=\"*\" classname=\"test\" failure=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"{  foo: 1,  [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]}\">\n        [Error [ERR_TEST_FAILURE]: {\n          foo: 1,\n          [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testsuite name=\"subtest sync throw fails\" time=\"*\" disabled=\"0\" errors=\"0\" tests=\"2\" failures=\"2\" skipped=\"0\" hostname=\"HOSTNAME\">\n        \t\t<testcase name=\"sync throw fails at first\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at first\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at first\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at first\n            *\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t\t<testcase name=\"sync throw fails at second\" time=\"*\" classname=\"test\" failure=\"thrown from subtest sync throw fails at second\">\n        \t\t\t<failure type=\"testCodeFailure\" message=\"thrown from subtest sync throw fails at second\">\n        Error [ERR_TEST_FAILURE]: thrown from subtest sync throw fails at second\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        }\n        \t\t\t</failure>\n        \t\t</testcase>\n        \t</testsuite>\n        \t<testcase name=\"timed out async test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"timed out callback test\" time=\"*\" classname=\"test\" failure=\"test timed out after 5ms\">\n        \t\t<failure type=\"testTimeoutFailure\" message=\"test timed out after 5ms\">\n        [Error [ERR_TEST_FAILURE]: test timed out after 5ms] { code: 'ERR_TEST_FAILURE', failureType: 'testTimeoutFailure', cause: 'test timed out after 5ms' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"large timeout async test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"large timeout callback test is ok\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"successful thenable\" time=\"*\" classname=\"test\"/>\n        \t<testcase name=\"rejected thenable\" time=\"*\" classname=\"test\" failure=\"custom error\">\n        \t\t<failure type=\"testCodeFailure\" message=\"custom error\">\n        [Error [ERR_TEST_FAILURE]: custom error] { code: 'ERR_TEST_FAILURE', failureType: 'testCodeFailure', cause: 'custom error' }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with uncaughtException\" time=\"*\" classname=\"test\" failure=\"foo\">\n        \t\t<failure type=\"uncaughtException\" message=\"foo\">\n        [Error [ERR_TEST_FAILURE]: foo] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'uncaughtException',\n          cause: Error: foo\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"unfinished test with unhandledRejection\" time=\"*\" classname=\"test\" failure=\"bar\">\n        \t\t<failure type=\"unhandledRejection\" message=\"bar\">\n        [Error [ERR_TEST_FAILURE]: bar] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'unhandledRejection',\n          cause: Error: bar\n              *\n              *\n              *\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"assertion errors display actual and expected properly\" time=\"*\" classname=\"test\" failure=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        \t\t<failure type=\"testCodeFailure\" message=\"Expected values to be loosely deep-equal:{  bar: 1,  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  foo: 1}should loosely deep-equal{  baz: {    date: 1970-01-01T00:00:00.000Z,    null: null,    number: 1,    string: 'Hello',    undefined: undefined  },  boo: [    1  ],  circular: &lt;ref *1> {    bar: 2,    c: [Circular *1]  }}\">\n        [Error [ERR_TEST_FAILURE]: Expected values to be loosely deep-equal:\n        \n        {\n          bar: 1,\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          foo: 1\n        }\n        \n        should loosely deep-equal\n        \n        {\n          baz: {\n            date: 1970-01-01T00:00:00.000Z,\n            null: null,\n            number: 1,\n            string: 'Hello',\n            undefined: undefined\n          },\n          boo: [\n            1\n          ],\n          circular: &lt;ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n        }] {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'testCodeFailure',\n          cause: AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: &lt;ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<testcase name=\"invalid subtest fail\" time=\"*\" classname=\"test\" failure=\"test could not be started because its parent finished\">\n        \t\t<failure type=\"parentAlreadyFinished\" message=\"test could not be started because its parent finished\">\n        Error [ERR_TEST_FAILURE]: test could not be started because its parent finished\n            * {\n          code: 'ERR_TEST_FAILURE',\n          failureType: 'parentAlreadyFinished',\n          cause: 'test could not be started because its parent finished'\n        }\n        \t\t</failure>\n        \t</testcase>\n        \t<!-- Error: Test \"unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:72:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"async unhandled rejection - passes but warns\" at test/fixtures/test-runner/output/output.js:76:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner. -->\n        \t<!-- Error: Test \"immediate throw - passes but warns\" at test/fixtures/test-runner/output/output.js:80:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"immediate reject - passes but warns\" at test/fixtures/test-runner/output/output.js:86:1 generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event. -->\n        \t<!-- Error: Test \"callback called twice in different ticks\" at test/fixtures/test-runner/output/output.js:251:1 generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- Error: Test \"callback async throw after done\" at test/fixtures/test-runner/output/output.js:269:1 generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event. -->\n        \t<!-- tests 76 -->\n        \t<!-- suites 0 -->\n        \t<!-- pass 35 -->\n        \t<!-- fail 25 -->\n        \t<!-- cancelled 3 -->\n        \t<!-- skipped 9 -->\n        \t<!-- todo 4 -->\n        \t<!-- duration_ms * -->\n        </testsuites>\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    ok 25 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 1597.419\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    ok 26 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 3023.5461\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    ok 27 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 3754.0719\n      ...\n    # Subtest: test-runner/output/source_mapped_locations.mjs\n    ok 28 - test-runner/output/source_mapped_locations.mjs\n      ---\n      duration_ms: 1586.0404\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 29 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 3233.6978\n      ...\n    # Subtest: test-runner/output/output.js\n    ok 30 - test-runner/output/output.js\n      ---\n      duration_ms: 1740.7906\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    ok 31 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 3752.5447\n      ...\n    # Subtest: test-runner/output/name_and_skip_patterns.js\n    ok 32 - test-runner/output/name_and_skip_patterns.js\n      ---\n      duration_ms: 1389.3415\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    ok 33 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 1379.3986\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    ok 34 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 1432.9687\n      ...\n    # Subtest: test-runner/output/skip_pattern.js\n    ok 35 - test-runner/output/skip_pattern.js\n      ---\n      duration_ms: 1470.383\n      ...\n    # Subtest: test-runner/output/unfinished-suite-async-error.js\n    ok 36 - test-runner/output/unfinished-suite-async-error.js\n      ---\n      duration_ms: 1026.3891\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 37 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 1295.438\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:155:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n            \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        +   '  ...\\n' +\n        +   '# Subtest: fail\\n' +\n        +   'not ok 3 - fail\\n' +\n        +   '  ---\\n' +\n        +   '  duration_ms: *\\n' +\n        +   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        +   \"  failureType: 'cancelledByParent'\\n\" +\n        +   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        +   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n        -   '  ...\\n' +\n        -   '# Subtest: fail\\n' +\n        -   'not ok 3 - fail\\n' +\n        -   '  ---\\n' +\n        -   '  duration_ms: *\\n' +\n        -   \"  location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\\n\" +\n        -   \"  failureType: 'cancelledByParent'\\n\" +\n        -   \"  error: 'Promise resolution is still pending but the event loop has already resolved'\\n\" +\n        -   \"  code: 'ERR_TEST_FAILURE'\\n\" +\n        -   '  stack: |-\\n' +\n        -   '    *\\n' +\n            '  ...\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n            '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:149:5)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Promise.all (index 36)\n        async Suite.run (node:internal/test_runner/test:1106:7)\n        async Test.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 147.6092\n          ...\n        1..1\n    ok 38 - test-runner/output/default_output.js\n      ---\n      duration_ms: 148.8041\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    ok 39 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 2699.2443\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    ok 40 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 2055.2696\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 125.5702\n          ...\n        1..1\n    ok 41 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 126.2675\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 125.4063\n          ...\n        1..1\n    ok 42 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 126.0089\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    ok 43 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 1792.6688\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    ok 44 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 1683.1263\n      ...\n    1..44\nnot ok 1 - test runner output\n  ---\n  duration_ms: 4303.1268\n  type: 'suite'\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:153:1'\n  failureType: 'subtestsFailed'\n  error: '3 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 47\n# suites 1\n# pass 41\n# fail 3\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 4333.1366"},"time":4863.024,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"message/stdin_messages","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win11_vs2022-x64-4","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"message/stdin_messages","id":79,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","stack":"[stdin]\n[stdin]:1\nwith(this){__filename}\n^^^^\n\nSyntaxError: Strict mode code may not include a with statement\n    at makeContextifyScript (node:internal/vm:185:14)\n    at node:internal/process/execution:107:22\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\nNode.js v23.0.0-pre\n42\n42\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n100\n[stdin]:1\nlet x = 100; y = x;\n               ^\n\nReferenceError: y is not defined\n    at [stdin]:1:16\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\ndone"},"time":1276.991,"fullname":"message/stdin_messages","closingTestPoint":false}},{"testName":"message/stdin_messages","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2022-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"message/stdin_messages","id":88,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","stack":"[stdin]\n[stdin]:1\nwith(this){__filename}\n^^^^\n\nSyntaxError: Strict mode code may not include a with statement\n    at makeContextifyScript (node:internal/vm:185:14)\n    at node:internal/process/execution:107:22\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n\nNode.js v23.0.0-pre\n42\n42\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n[stdin]:1\nthrow new Error(\"hello\")\n^\n\nError: hello\n    at [stdin]:1:7\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n100\n[stdin]:1\nlet x = 100; y = x;\n               ^\n\nReferenceError: y is not defined\n    at [stdin]:1:16\n    at runScriptInThisContext (node:internal/vm:209:10)\n    at node:internal/process/execution:118:14\n    at [stdin]-wrapper:6:24\n    at runScript (node:internal/process/execution:101:62)\n    at evalScript (node:internal/process/execution:136:3)\n    at node:internal/main/eval_stdin:32:5\n    at Socket.<anonymous> (node:internal/process/execution:237:5)\n    at Socket.emit (node:internal/events/event_emitter:401:35)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\n\n[stdin]:1\nlet ______________________________________________; throw 10\n                                                    ^\n10\n(Use `node --trace-uncaught ...` to show where the exception was thrown)\n\nNode.js v23.0.0-pre\ndone"},"time":2042.066,"fullname":"message/stdin_messages","closingTestPoint":false}},{"testName":"parallel/test-assert-builtins-not-read-from-filesystem","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win10-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-assert-builtins-not-read-from-filesystem","id":68,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Exit code: 1\n,,node:fs:2348\n\n    return binding.writeFileUtf8(\n\n                   ^\n\n\n\nError: ENOENT: no such file or directory, open 'c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.67\\node:internal\\events\\event_emitter'\n\n    at writeFileSync (node:fs:2348:20)\n\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:41:3)\n\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n\n    at node:internal/main/run_main_module:30:49 {\n\n  errno: -4058,\n\n  code: 'ENOENT',\n\n  syscall: 'open',\n\n  path: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.67\\\\node:internal\\\\events\\\\event_emitter'\n\n}\n\n\n\nNode.js v23.0.0-pre\n\n\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-assert-builtins-not-read-from-filesystem.js:31:12)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":373.027,"fullname":"parallel/test-assert-builtins-not-read-from-filesystem","closingTestPoint":false}},{"testName":"parallel/test-bootstrap-modules","timestamp":1714248189199,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win10-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-bootstrap-modules","id":86,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: These builtins are now unexpectedly loaded before pre-execution.\nIf this is intentional, add them to `expected.beforePreExec`.\n\n# Note: loading more builtins before pre-execution can lead to startup performance regression or invalid snapshots.\n- Consider lazy loading builtins that are not used universally.\n- Make sure that the builtins do not access environment dependent states e.g. command line arguments or environment variables during loading.\n- When in doubt, ask @nodejs/startup.\n\n--- These could be added to expected.beforePreExec ---\n[\n  'NativeModule internal/events/event_emitter',\n  'NativeModule internal/events/event_emitter_helpers'\n]\n\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-bootstrap-modules.js:245:8)\n    at Module._compile (node:internal/modules/cjs/loader:1476:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1555:10)\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:191:14)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":164.012,"fullname":"parallel/test-bootstrap-modules","closingTestPoint":false}},{"testName":"parallel/test-node-output-errors","timestamp":1714248189199,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win10-COMPILED_BY-vs2022 #27434","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022/27434/","buildNumber":27434,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"23.0.0","commitHash":"99826978815ae1f46815c2dd106f3cdaa41a40b6","callStack":[{"upstreamBuild":62538,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70297,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52726"}],"tap":{"ok":false,"name":"parallel/test-node-output-errors","id":622,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: errors output\n    # Subtest: errors/async_error_eval_cjs.js\n    ok 1 - errors/async_error_eval_cjs.js\n      ---\n      duration_ms: 264.8239\n      ...\n    # Subtest: errors/async_error_eval_esm.js\n    ok 2 - errors/async_error_eval_esm.js\n      ---\n      duration_ms: 235.0998\n      ...\n    # Subtest: errors/async_error_microtask_main.js\n    ok 3 - errors/async_error_microtask_main.js\n      ---\n      duration_ms: 170.902\n      ...\n    # Subtest: errors/async_error_nexttick_main.js\n    ok 4 - errors/async_error_nexttick_main.js\n      ---\n      duration_ms: 142.6102\n      ...\n    # Subtest: errors/async_error_sync_main.js\n    ok 5 - errors/async_error_sync_main.js\n      ---\n      duration_ms: 142.9423\n      ...\n    # Subtest: errors/core_line_numbers.js\n    ok 6 - errors/core_line_numbers.js\n      ---\n      duration_ms: 154.2064\n      ...\n    # Subtest: errors/async_error_sync_esm.mjs\n    ok 7 - errors/async_error_sync_esm.mjs\n      ---\n      duration_ms: 191.315\n      ...\n    # Subtest: errors/test-no-extra-info-on-fatal-exception.js\n    ok 8 - errors/test-no-extra-info-on-fatal-exception.js\n      ---\n      duration_ms: 162.5037\n      ...\n    # Subtest: errors/error_aggregateTwoErrors.js\n    ok 9 - errors/error_aggregateTwoErrors.js\n      ---\n      duration_ms: 133.4721\n      ...\n    # Subtest: errors/error_exit.js\n    ok 10 - errors/error_exit.js\n      ---\n      duration_ms: 181.7051\n      ...\n    # Subtest: errors/error_with_nul.js\n    ok 11 - errors/error_with_nul.js\n      ---\n      duration_ms: 159.4397\n      ...\n    # Subtest: errors/events_unhandled_error_common_trace.js\n    not ok 12 - errors/events_unhandled_error_common_trace.js\n      ---\n      duration_ms: 139.3393\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error: foo:bar\n            at bar (*events_unhandled_error_common_trace.js:*:*)\n            at foo (*events_unhandled_error_common_trace.js:*:*)\n        Emitted 'error' event at:\n            at quux (*events_unhandled_error_common_trace.js:*:*)\n            at Object.<anonymous> (*events_unhandled_error_common_trace.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_nexttick.js\n    not ok 13 - errors/events_unhandled_error_nexttick.js\n      ---\n      duration_ms: 154.3075\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at *events_unhandled_error_nexttick.js:*:*\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_nexttick.js:*:*)\n        Emitted 'error' event at:\n            at *events_unhandled_error_nexttick.js:*:*\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_sameline.js\n    not ok 14 - errors/events_unhandled_error_sameline.js\n      ---\n      duration_ms: 125.6107\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        Emitted 'error' event at:\n            at Object.<anonymous> (*events_unhandled_error_sameline.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/events_unhandled_error_subclass.js\n    not ok 15 - errors/events_unhandled_error_subclass.js\n      ---\n      duration_ms: 121.0228\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:78:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n        + 'node:internal*events*event_emitter:*\\n' +\n        - 'node:events:*\\n' +\n            \"      throw er; * Unhandled 'error' event\\n\" +\n        ...\n            '    at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\\n' +\n            '\\n' +\n            'Node.js *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        node:events:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      actual: |-\n        node:internal*events*event_emitter:*\n              throw er; * Unhandled 'error' event\n              ^\n        \n        Error\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        Emitted 'error' event on Foo instance at:\n            at Object.<anonymous> (*events_unhandled_error_subclass.js:*:*)\n        \n        Node.js *\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-node-output-errors.mjs:79:7)\n        async Test.run (node:internal/test_runner/test:748:9)\n        async Suite.processPendingSubtests (node:internal/test_runner/test:461:7)\n      ...\n    # Subtest: errors/if-error-has-good-stack.js\n    ok 16 - errors/if-error-has-good-stack.js\n      ---\n      duration_ms: 171.3135\n      ...\n    # Subtest: errors/throw_custom_error.js\n    ok 17 - errors/throw_custom_error.js\n      ---\n      duration_ms: 462.886\n      ...\n    # Subtest: errors/throw_error_with_getter_throw.js\n    ok 18 - errors/throw_error_with_getter_throw.js\n      ---\n      duration_ms: 159.1082\n      ...\n    # Subtest: errors/throw_in_line_with_tabs.js\n    ok 19 - errors/throw_in_line_with_tabs.js\n      ---\n      duration_ms: 121.0374\n      ...\n    # Subtest: errors/throw_non_error.js\n    ok 20 - errors/throw_non_error.js\n      ---\n      duration_ms: 128.6655\n      ...\n    # Subtest: errors/throw_null.js\n    ok 21 - errors/throw_null.js\n      ---\n      duration_ms: 120.0718\n      ...\n    # Subtest: errors/throw_undefined.js\n    ok 22 - errors/throw_undefined.js\n      ---\n      duration_ms: 136.9099\n      ...\n    # Subtest: errors/timeout_throw.js\n    ok 23 - errors/timeout_throw.js\n      ---\n      duration_ms: 128.0925\n      ...\n    # Subtest: errors/undefined_reference_in_new_context.js\n    ok 24 - errors/undefined_reference_in_new_context.js\n      ---\n      duration_ms: 146.7856\n      ...\n    # Subtest: errors/promise_always_throw_unhandled.js\n    ok 25 - errors/promise_always_throw_unhandled.js\n      ---\n      duration_ms: 136.3331\n      ...\n    # Subtest: errors/promise_unhandled_warn_with_error.js\n    ok 26 - errors/promise_unhandled_warn_with_error.js\n      ---\n      duration_ms: 195.5779\n      ...\n    # Subtest: errors/unhandled_promise_trace_warnings.js\n    ok 27 - errors/unhandled_promise_trace_warnings.js\n      ---\n      duration_ms: 405.4455\n      ...\n    # Subtest: errors/force_colors.js\n    ok 28 - errors/force_colors.js\n      ---\n      duration_ms: 86.9093\n      ...\n    1..28\nnot ok 1 - errors output\n  ---\n  duration_ms: 4883.1162\n  type: 'suite'\n  location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-node-output-errors.mjs:23:1'\n  failureType: 'subtestsFailed'\n  error: '4 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 28\n# suites 1\n# pass 24\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 4894.4991"},"time":5352.392,"fullname":"parallel/test-node-output-errors","closingTestPoint":false}}]}