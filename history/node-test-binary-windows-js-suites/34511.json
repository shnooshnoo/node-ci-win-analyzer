{"failedTests":[{"testName":"parallel/test-repl-top-level-await","timestamp":1748348470683,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #34511","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/34511/","buildNumber":34511,"builtOn":"test-azure_msft-win11_vs2022-arm64-1","nodeVersion":"25.0.0","commitHash":"70adc77807065826544855738f110fc8dd7d9873","callStack":[{"upstreamBuild":70709,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":80258,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":67144,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"58225"}],"tap":{"ok":false,"name":"parallel/test-repl-top-level-await","id":712,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"crashed","exitcode":3221225477,"stack":"Testing await Promise.resolve(0)\nTesting { a: await Promise.resolve(1) }\nTesting _\nTesting let { aa, bb } = await Promise.resolve({ aa: 1, bb: 2 }), f = 5;\nTesting aa\nTesting bb\nTesting f\nTesting let cc = await Promise.resolve(2)\nTesting cc\nTesting let dd;\nTesting dd\nTesting let [ii, { abc: { kk } }] = [0, { abc: { kk: 1 } }];\nTesting ii\nTesting kk\nTesting var ll = await Promise.resolve(2);\nTesting ll\nTesting foo(await koo())\nTesting _\nTesting const m = foo(await koo());\nTesting m\nTesting const n = foo(await\nkoo());\nTesting n\nTesting `status: ${(await Promise.resolve({ status: 200 })).status}`\nTesting for (let i = 0; i < 2; ++i) await i\nTesting for (let i = 0; i < 2; ++i) { await i }\nTesting await 0\nTesting await 0; function foo() {}\nTesting foo\nTesting class Foo {}; await 1;\nTesting Foo\nTesting if (await true) { function bar() {}; }\nTesting bar\nTesting if (await true) { class Bar {}; }\nTesting Bar\nTesting await 0; function* gen(){}\nTesting for (var i = 0; i < 10; ++i) { await i; }\nTesting i\nTesting for (let j = 0; j < 5; ++j) { await j; }\nTesting j\nTesting gen\nTesting return 42; await 5;\nTesting let o = await 1, p\nTesting p\nTesting let q = 1, s = await 2\nTesting s\nTesting for await (let i of [1,2,3]) console.log(i)\nTesting await Promise..resolve()\nTesting for (const x of [1,2,3]) {\nawait x\n}\nTesting for (const x of [1,2,3]) {\nawait x;\n}\nTesting for await (const x of [1,2,3]) {\nconsole.log(x)\n}\nTesting for await (const x of [1,2,3]) {\nconsole.log(x);\n}\nTesting const k = await Promise.resolve(123)\nTesting k\nTesting k = await Promise.resolve(234)\nTesting k\nTesting const k = await Promise.resolve(345)\nTesting await Promise.resolve(123), Promise.resolve(456)\nTesting await Promise.resolve(123), await Promise.resolve(456)\nTesting await (Promise.resolve(123), Promise.resolve(456))\nTesting Ctrl+C"},"time":473.005,"fullname":"parallel/test-repl-top-level-await","closingTestPoint":false}}]}