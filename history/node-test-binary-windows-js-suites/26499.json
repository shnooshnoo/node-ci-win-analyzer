{"failedTests":[{"testName":"parallel/test-runner-watch-mode","timestamp":1710509939876,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win11-COMPILED_BY-vs2022 #26499","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-COMPILED_BY-vs2022/26499/","buildNumber":26499,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"22.0.0","commitHash":"719f745c5f617869076a51691c12372a8ec73f42","callStack":[{"upstreamBuild":61447,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":69128,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":57757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51091"}],"tap":{"ok":false,"name":"parallel/test-runner-watch-mode","id":684,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner watch mode\n    # Subtest: should run tests repeatedly\n    ok 1 - should run tests repeatedly\n      ---\n      duration_ms: 2396.1847\n      ...\n    # Subtest: should run tests with dependency repeatedly\n    ok 2 - should run tests with dependency repeatedly\n      ---\n      duration_ms: 1536.4488\n      ...\n    # Subtest: should run tests with ESM dependency\n    ok 3 - should run tests with ESM dependency\n      ---\n      duration_ms: 1560.5174\n      ...\n    # Subtest: should support running tests without a file\n    ok 4 - should support running tests without a file\n      ---\n      duration_ms: 1624.8281\n      ...\n    1..4\nok 1 - test runner watch mode\n  ---\n  duration_ms: 7122.3054\n  type: 'suite'\n  ...\n1..1\n# tests 4\n# suites 1\n# pass 4\n# fail 0\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 7131.1474\nCan't clean tmpdir: c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.663\nFiles blocking: [ 'dependency.js', 'dependency.mjs', 'test.js' ]\n\nc:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:69\n    throw e;\n    ^\n\nError: EBUSY: resource busy or locked, rmdir 'c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.663'\n    at rmdirSync (node:fs:1214:11)\n    at _rmdirSync (node:internal/fs/rimraf:235:5)\n    at rimrafSync (node:internal/fs/rimraf:193:7)\n    at Object.rmSync (node:fs:1263:10)\n    at rmSync (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:20:8)\n    at onexit (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:54:5)\n    at process.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:43:14)\n    at process.emit (node:events:531:35) {\n  errno: -4082,\n  code: 'EBUSY',\n  syscall: 'rmdir',\n  path: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.663'\n}\n\nNode.js v22.0.0-pre"},"time":7637.186,"fullname":"parallel/test-runner-watch-mode","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1710509939876,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-COMPILED_BY-vs2022 #26499","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022/26499/","buildNumber":26499,"builtOn":"test-azure_msft-win11_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"719f745c5f617869076a51691c12372a8ec73f42","callStack":[{"upstreamBuild":61447,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":69128,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":57757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51091"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":663,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 1656.8115\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 1632.2676\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 1186.7111\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 1764.979\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 1128.1694\n      ...\n    # Subtest: test-runner/output/eval_dot.js\n    ok 6 - test-runner/output/eval_dot.js\n      ---\n      duration_ms: 1107.0439\n      ...\n    # Subtest: test-runner/output/eval_spec.js\n    ok 7 - test-runner/output/eval_spec.js\n      ---\n      duration_ms: 1332.6481\n      ...\n    # Subtest: test-runner/output/eval_tap.js\n    ok 8 - test-runner/output/eval_tap.js\n      ---\n      duration_ms: 1064.21\n      ...\n    # Subtest: test-runner/output/hooks.js\n    ok 9 - test-runner/output/hooks.js\n      ---\n      duration_ms: 1654.791\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    ok 10 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 3985.5318\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    ok 11 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 3263.0501\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    ok 12 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 1331.9267\n      ...\n    # Subtest: test-runner/output/global-hooks-with-no-tests.js\n    ok 13 - test-runner/output/global-hooks-with-no-tests.js\n      ---\n      duration_ms: 1590.9665\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    ok 14 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 2717.6754\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    ok 15 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 2302.4702\n      ...\n    # Subtest: test-runner/output/force_exit.js\n    ok 16 - test-runner/output/force_exit.js\n      ---\n      duration_ms: 2436.0785\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    ok 17 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 1385.8649\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    ok 18 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 1472.8125\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 19 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 2628.4089\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    ok 20 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 2610.9532\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 21 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 4338.0958\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    ok 22 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 4247.6785\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    ok 23 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 2548.8991\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    not ok 24 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 4166.0299\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:149:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' sync pass todo (*ms) # TODO\\n' +\n            ' sync pass todo with message (*ms) # this is a passing todo\\n' +\n        ...\n            '\\n' +\n            ' timed out callback test (*ms)\\n' +\n        +   ' large timeout async test is ok (*ms)\\n' +\n        +   ' large timeout callback test is ok (*ms)\\n' +\n        +   ' successful thenable (*ms)\\n' +\n        +   ' rejected thenable (*ms)\\n' +\n        +   \"  'custom error'\\n\" +\n        +   '\\n' +\n        +   ' unfinished test with uncaughtException (*ms)\\n' +\n        +   '  Error: foo\\n' +\n        +   '      *\\n' +\n        +   '      *\\n' +\n        -   \"  'test timed out after *ms'\\n\" +\n        -   '\\n' +\n        -   ' large timeout async test is ok (*ms)\\n' +\n        -   ' large timeout callback test is ok (*ms)\\n' +\n        -   ' successful thenable (*ms)\\n' +\n        -   ' rejected thenable (*ms)\\n' +\n        -   \"  'custom error'\\n\" +\n        -   '\\n' +\n        -   ' unfinished test with uncaughtException (*ms)\\n' +\n        -   '  Error: foo\\n' +\n            '      *\\n' +\n        +   '\\n' +\n        +   ' unfinished test with unhandledRejection (*ms)\\n' +\n        +   '  Error: bar\\n' +\n        +   '      *\\n' +\n        +   '      *\\n' +\n        -   '      *\\n' +\n        -   '      *\\n' +\n        -   '\\n' +\n        -   ' unfinished test with unhandledRejection (*ms)\\n' +\n        -   '  Error: bar\\n' +\n            '      *\\n' +\n        +   '\\n' +\n        +   ' assertion errors display actual and expected properly (*ms)\\n' +\n        +   '  AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n' +\n        +   '  \\n' +\n        +   '  {\\n' +\n        +   '    bar: 1,\\n' +\n        +   '    baz: {\\n' +\n        +   '      date: 1970-01-01T00:00:00.000Z,\\n' +\n        ...\n        -   '      *\\n' +\n        -   '      *\\n' +\n        -   '\\n' +\n        -   ' assertion errors display actual and expected properly (*ms)\\n' +\n        -   '  AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n' +\n        -   '  \\n' +\n        -   '  {\\n' +\n        -   '    bar: 1,\\n' +\n        ...\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      actual: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 36\n         fail 25\n         cancelled 2\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          {\n            baz: {\n              date: 1970-01-01T00:00:00.000Z,\n              null: null,\n              number: 1,\n              string: 'Hello',\n              undefined: undefined\n            },\n            boo: [\n              1\n            ],\n            circular: <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:143:5)\n        async Test.run (node:internal/test_runner/test:707:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:1051:7)\n        async startSubtest (node:internal/test_runner/harness:223:3)\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    ok 25 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 4612.1372\n      ...\n    # Subtest: test-runner/output/source_mapped_locations.mjs\n    ok 26 - test-runner/output/source_mapped_locations.mjs\n      ---\n      duration_ms: 2610.0985\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 27 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 4278.3669\n      ...\n    # Subtest: test-runner/output/output.js\n    ok 28 - test-runner/output/output.js\n      ---\n      duration_ms: 3475.0332\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    ok 29 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 4493.9872\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    ok 30 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 3318.6748\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    ok 31 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 2913.0006\n      ...\n    # Subtest: test-runner/output/unfinished-suite-async-error.js\n    ok 32 - test-runner/output/unfinished-suite-async-error.js\n      ---\n      duration_ms: 2799.5245\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    ok 33 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 2238.6003\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 0.3403\n          ...\n        1..1\n    ok 34 - test-runner/output/default_output.js\n      ---\n      duration_ms: 81.6703\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    ok 35 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 3460.9468\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    ok 36 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 3439.8794\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 0.398\n          ...\n        1..1\n    ok 37 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 44.3272\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 0.317\n          ...\n        1..1\n    ok 38 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 44.1425\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    ok 39 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 2672.2124\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    ok 40 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 3058.8838\n      ...\n    1..40\nnot ok 1 - test runner output\n  ---\n  duration_ms: 5324.2369\n  type: 'suite'\n  location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-output.mjs:147:1'\n  failureType: 'subtestsFailed'\n  error: '1 subtest failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 43\n# suites 1\n# pass 39\n# fail 1\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 5340.6989"},"time":5845.081,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"parallel/test-runner-run","timestamp":1710509939876,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-COMPILED_BY-vs2022 #26499","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022/26499/","buildNumber":26499,"builtOn":"test-azure_msft-win11_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"719f745c5f617869076a51691c12372a8ec73f42","callStack":[{"upstreamBuild":61447,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":69128,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":57757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51091"}],"tap":{"ok":false,"name":"parallel/test-runner-run","id":932,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"timeout\nTAP version 13\n# Subtest: require('node:test').run\n    # Subtest: should run with no tests\n    ok 1 - should run with no tests\n      ---\n      duration_ms: 647.3693\n      ...\n    # Subtest: should fail with non existing file\n    ok 2 - should fail with non existing file\n      ---\n      duration_ms: 1295.2856\n      ...\n    # Subtest: should succeed with a file\n    ok 3 - should succeed with a file\n      ---\n      duration_ms: 1940.5792\n      ...\n    # Subtest: should run same file twice\n    ok 4 - should run same file twice\n      ---\n      duration_ms: 3525.2817\n      ...\n    # Subtest: should run a failed test\n    ok 5 - should run a failed test\n      ---\n      duration_ms: 2165.6431\n      ...\n    # Subtest: should support timeout\n    ok 6 - should support timeout\n      ---\n      duration_ms: 751.4921\n      ...\n    # Subtest: should be piped with dot\n    ok 7 - should be piped with dot\n      ---\n      duration_ms: 2831.5016\n      ...\n    # Subtest: should be piped with spec reporter\n        # Subtest: new spec\n        ok 1 - new spec\n          ---\n          duration_ms: 2511.3427\n          ...\n        # Subtest: spec()\n        ok 2 - spec()\n          ---\n          duration_ms: 2511.7031\n          ...\n        # Subtest: spec\n        ok 3 - spec\n          ---\n          duration_ms: 2031.5226\n          ...\n        1..3\n    ok 8 - should be piped with spec reporter\n      ---\n      duration_ms: 2569.3453\n      type: 'suite'\n      ...\n    # Subtest: should be piped with tap\n    not ok 9 - should be piped with tap\n      ---\n      duration_ms: 2373.5167\n      location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-run.mjs:111:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        \n        14 !== 13\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: 13\n      actual: 14\n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:115:12)\n        process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n        async Test.run (node:internal/test_runner/test:707:9)\n        async Promise.all (index 8)\n        async Suite.run (node:internal/test_runner/test:1051:7)\n        async startSubtest (node:internal/test_runner/harness:223:3)\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - RegExp\n    ok 10 - should skip tests not matching testNamePatterns - RegExp\n      ---\n      duration_ms: 2481.4369\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - string\n    ok 11 - should skip tests not matching testNamePatterns - string\n      ---\n      duration_ms: 2381.4145\n      ...\n    # Subtest: should pass only to children\n    ok 12 - should pass only to children\n      ---\n      duration_ms: 1279.3228\n      ...\n    # Subtest: should emit \"test:watch:drained\" event on watch mode\n    ok 13 - should emit \"test:watch:drained\" event on watch mode\n      ---\n      duration_ms: 615.7835\n      ...\n    # Subtest: AbortSignal\n        # Subtest: should accept a signal\n        ok 1 - should accept a signal\n          ---\n          duration_ms: 612.1642\n          ...\n        # Subtest: should stop watch mode when abortSignal aborts\n        ok 2 - should stop watch mode when abortSignal aborts\n          ---\n          duration_ms: 1853.5178\n          ...\n        # Subtest: should abort when test succeeded\n        ok 3 - should abort when test succeeded\n          ---\n          duration_ms: 2346.0003\n          ...\n        # Subtest: should abort when test failed\n        ok 4 - should abort when test failed\n          ---\n          duration_ms: 2486.4538\n          ...\n        1..4\n    ok 14 - AbortSignal\n      ---\n      duration_ms: 2513.4783\n      type: 'suite'\n      ...\n    # Subtest: sharding\n        # Subtest: validation\n            # Subtest: should require shard.total when having shard option\n            ok 1 - should require shard.total when having shard option\n              ---\n              duration_ms: 3.523\n              ...\n            # Subtest: should require shard.index when having shards option\n            ok 2 - should require shard.index when having shards option\n              ---\n              duration_ms: 3.0459\n              ...\n            # Subtest: should require shard.total to be greater than 0 when having shard option\n            ok 3 - should require shard.total to be greater than 0 when having shard option\n              ---\n              duration_ms: 2.7973\n              ...\n            # Subtest: should require shard.index to be greater than 0 when having shard option\n            ok 4 - should require shard.index to be greater than 0 when having shard option\n              ---\n              duration_ms: 2.2071\n              ...\n            # Subtest: should require shard.index to not be greater than the shards total when having shard option\n            ok 5 - should require shard.index to not be greater than the shards total when having shard option\n              ---\n              duration_ms: 1.948\n              ...\n            # Subtest: should require watch mode to be disabled when having shard option\n            ok 6 - should require watch mode to be disabled when having shard option\n              ---\n              duration_ms: 1.7517\n              ...\n            1..6\n        ok 1 - validation\n          ---\n          duration_ms: 435.9985\n          type: 'suite'\n          ...\n        # Subtest: should run only the tests files matching the shard index\n        ok 2 - should run only the tests files matching the shard index\n          ---\n          duration_ms: 3914.1553\n          ...\n        # Subtest: different shards should not run the same file\n        ok 3 - different shards should not run the same file\n          ---\n          duration_ms: 3983.0789\n          ...\n        # Subtest: combination of all shards should be all the tests\n        ok 4 - combination of all shards should be all the tests\n          ---\n          duration_ms: 4034.6533\n          ...\n        1..4\n    ok 15 - sharding\n      ---\n      duration_ms: 4063.6376\n      type: 'suite'\n      ...\n    # Subtest: validation\n        # Subtest: should only allow array in options.files\n        ok 1 - should only allow array in options.files\n          ---\n          duration_ms: 492.0793\n          ...\n        # Subtest: should only allow object as options\n        ok 2 - should only allow object as options\n          ---\n          duration_ms: 489.3715\n          ...\n        # Subtest: should pass instance of stream to setup\n        ok 3 - should pass instance of stream to setup\n          ---\n          duration_ms: 2558.3033\n          ...\n        1..3\n    ok 16 - validation\n      ---\n      duration_ms: 2591.8327\n      type: 'suite'\n      ...\n    # Subtest: should run with no files\n    ok 17 - should run with no files\n      ---\n      duration_ms: 3983.3796\n      ...\n    # Subtest: should run with no files and use spec reporter\n    ok 18 - should run with no files and use spec reporter\n      ---\n      duration_ms: 3717.4642\n      ...\n    # Subtest: should run with no files and use dot reporter\n    ok 19 - should run with no files and use dot reporter\n      ---\n      duration_ms: 3793.897\n      ...\n    1..19\nnot ok 1 - require('node:test').run\n  ---\n  duration_ms: 4180.1951\n  type: 'suite'\n  location: 'c:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-run.mjs:10:1'\n  failureType: 'subtestsFailed'\n  error: '1 subtest failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: forceExit\n    # Subtest: throws for non-boolean values\n    ok 1 - throws for non-boolean values\n      ---\n      duration_ms: 0.8077\n      ...\n    # Subtest: throws if enabled with watch mode\n    ok 2 - throws if enabled with watch mode\n      ---\n      duration_ms: 0.2398\n      ...\n    1..2\nok 2 - forceExit\n  ---\n  duration_ms: 1.3703\n  type: 'suite'\n  ...\n(node:11068) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 uncaughtException listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:11068) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 unhandledRejection listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(node:11068) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 beforeExit listeners added to [process]. Use emitter.setMaxListeners() to increase limit"},"time":120353.113,"fullname":"parallel/test-runner-run","closingTestPoint":false}},{"testName":"sequential/test-vm-break-on-sigint","timestamp":1710509939876,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-COMPILED_BY-vs2022 #26499","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-COMPILED_BY-vs2022/26499/","buildNumber":26499,"builtOn":"test-azure_msft-win11_vs2022-x64-2","nodeVersion":"22.0.0","commitHash":"719f745c5f617869076a51691c12372a8ec73f42","callStack":[{"upstreamBuild":61447,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":69128,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":57757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51091"}],"tap":{"ok":false,"name":"sequential/test-vm-break-on-sigint","id":972,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"crashed","exitcode":3221225477,"stack":""},"time":254.491,"fullname":"sequential/test-vm-break-on-sigint","closingTestPoint":false}},{"testName":"wasi/test-wasi-poll","timestamp":1710509939876,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win11-arm64-COMPILED_BY-vs2022-arm64 #26499","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/26499/","buildNumber":26499,"builtOn":"test-azure_msft-win11_vs2022-arm64-4","nodeVersion":"22.0.0","commitHash":"719f745c5f617869076a51691c12372a8ec73f42","callStack":[{"upstreamBuild":61447,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":69128,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":57757,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51091"}],"tap":{"ok":false,"name":"wasi/test-wasi-poll","id":919,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":1,"stack":"Testing with --turbo-fast-api-calls: poll\n[process 10412]: --- stderr ---\n(node:10412) ExperimentalWarning: WASI is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\n\n[process 10412]: --- stdout ---\n\n[process 10412]: status = 3221225477, signal = null\nd:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\child_process.js:86\n    throw new Error(`${failures.join('\\n')}`);\n    ^\n\nError: - process terminated with status 3221225477, expected 0\n    at logAndThrow (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\child_process.js:86:11)\n    at expectSyncExit (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\child_process.js:91:5)\n    at spawnSyncAndExitWithoutError (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\child_process.js:125:10)\n    at testWasiPreview1 (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wasi.js:18:3)\n    at Object.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wasi\\test-wasi-poll.js:5:1)\n    at Module._compile (node:internal/modules/cjs/loader:1357:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1415:10)\n    at Module.load (node:internal/modules/cjs/loader:1207:32)\n    at Module._load (node:internal/modules/cjs/loader:1023:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:177:12)\n\nNode.js v22.0.0-pre"},"time":491.004,"fullname":"wasi/test-wasi-poll","closingTestPoint":false}}]}