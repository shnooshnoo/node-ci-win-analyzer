{"failedTests":[{"testName":"parallel/test-util-parse-env","timestamp":1722967388361,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-COMPILED_BY-vs2022 #29160","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022/29160/","buildNumber":29160,"builtOn":"test-azure_msft-win11_vs2022-x64-2","nodeVersion":"23.0.0","commitHash":"68e2fb103a334fdcf1478d398c73d2257442c8bc","callStack":[{"upstreamBuild":64636,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":72811,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":60913,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"53705"}],"tap":{"ok":false,"name":"parallel/test-util-parse-env","id":837,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  {\n    AFTER_LINE: 'after_line',\n...\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n+   SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  }\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-util-parse-env.js:13:10)\n    at Module._compile (node:internal/modules/cjs/loader:1546:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1691:10)\n    at Module.load (node:internal/modules/cjs/loader:1317:32)\n    at Module._load (node:internal/modules/cjs/loader:1127:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:315:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:166:5)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    EXPORT_EXAMPLE: 'ignore export',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  expected: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPORT_EXAMPLE: 'ignore export',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  operator: 'deepStrictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":190.006,"fullname":"parallel/test-util-parse-env","closingTestPoint":false}},{"testName":"parallel/test-util-parse-env","timestamp":1722967388361,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win10-COMPILED_BY-vs2022 #29160","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022/29160/","buildNumber":29160,"builtOn":"test-azure_msft-win10_vs2019-x64-1","nodeVersion":"23.0.0","commitHash":"68e2fb103a334fdcf1478d398c73d2257442c8bc","callStack":[{"upstreamBuild":64636,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":72811,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":60913,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"53705"}],"tap":{"ok":false,"name":"parallel/test-util-parse-env","id":837,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  {\n    AFTER_LINE: 'after_line',\n...\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n+   SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  }\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-util-parse-env.js:13:10)\n    at Module._compile (node:internal/modules/cjs/loader:1546:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1691:10)\n    at Module.load (node:internal/modules/cjs/loader:1317:32)\n    at Module._load (node:internal/modules/cjs/loader:1127:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:315:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:166:5)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    EXPORT_EXAMPLE: 'ignore export',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  expected: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPORT_EXAMPLE: 'ignore export',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  operator: 'deepStrictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":193.005,"fullname":"parallel/test-util-parse-env","closingTestPoint":false}},{"testName":"parallel/test-util-parse-env","timestamp":1722967388361,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2022-COMPILED_BY-vs2022 #29160","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/29160/","buildNumber":29160,"builtOn":"test-rackspace-win2022_vs2022-x64-3","nodeVersion":"23.0.0","commitHash":"68e2fb103a334fdcf1478d398c73d2257442c8bc","callStack":[{"upstreamBuild":64636,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":72811,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":60913,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"53705"}],"tap":{"ok":false,"name":"parallel/test-util-parse-env","id":835,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  {\n    AFTER_LINE: 'after_line',\n...\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n+   SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  }\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-util-parse-env.js:13:10)\n    at Module._compile (node:internal/modules/cjs/loader:1546:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1691:10)\n    at Module.load (node:internal/modules/cjs/loader:1317:32)\n    at Module._load (node:internal/modules/cjs/loader:1127:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:315:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:166:5)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    EXPORT_EXAMPLE: 'ignore export',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  expected: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPORT_EXAMPLE: 'ignore export',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  operator: 'deepStrictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":249.986,"fullname":"parallel/test-util-parse-env","closingTestPoint":false}},{"testName":"parallel/test-util-parse-env","timestamp":1722967388361,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win11-arm64-COMPILED_BY-vs2022-arm64 #29160","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/29160/","buildNumber":29160,"builtOn":"test-azure_msft-win11_vs2022-arm64-1","nodeVersion":"23.0.0","commitHash":"68e2fb103a334fdcf1478d398c73d2257442c8bc","callStack":[{"upstreamBuild":64636,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":72811,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":60913,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"53705"}],"tap":{"ok":false,"name":"parallel/test-util-parse-env","id":834,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  {\n    AFTER_LINE: 'after_line',\n...\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n+   SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  }\n    at Object.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-util-parse-env.js:13:10)\n    at Module._compile (node:internal/modules/cjs/loader:1546:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1691:10)\n    at Module.load (node:internal/modules/cjs/loader:1317:32)\n    at Module._load (node:internal/modules/cjs/loader:1127:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:315:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:166:5)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    EXPORT_EXAMPLE: 'ignore export',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  expected: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPORT_EXAMPLE: 'ignore export',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  operator: 'deepStrictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":261.994,"fullname":"parallel/test-util-parse-env","closingTestPoint":false}},{"testName":"parallel/test-util-parse-env","timestamp":1722967388361,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #29160","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/29160/","buildNumber":29160,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"23.0.0","commitHash":"68e2fb103a334fdcf1478d398c73d2257442c8bc","callStack":[{"upstreamBuild":64636,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":72811,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":60913,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"53705"}],"tap":{"ok":false,"name":"parallel/test-util-parse-env","id":836,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected ... Lines skipped\n\n  {\n    AFTER_LINE: 'after_line',\n...\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n+   SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  }\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-util-parse-env.js:13:10)\n    at Module._compile (node:internal/modules/cjs/loader:1546:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1691:10)\n    at Module.load (node:internal/modules/cjs/loader:1317:32)\n    at Module._load (node:internal/modules/cjs/loader:1127:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:315:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:217:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:166:5)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    EXPORT_EXAMPLE: 'ignore export',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    SPACE_BEFORE_DOUBLE_QUOTES: 'space before double quotes',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  expected: {\n    AFTER_LINE: 'after_line',\n    BACKTICKS: 'backticks',\n    BACKTICKS_INSIDE_DOUBLE: '`backticks` work inside double quotes',\n    BACKTICKS_INSIDE_SINGLE: '`backticks` work inside single quotes',\n    BACKTICKS_SPACED: '    backticks    ',\n    BASIC: 'basic',\n    DONT_EXPAND_SQUOTED: 'dontexpand\\\\nnewlines',\n    DONT_EXPAND_UNQUOTED: 'dontexpand\\\\nnewlines',\n    DOUBLE_AND_SINGLE_QUOTES_INSIDE_BACKTICKS: `double \"quotes\" and single 'quotes' work inside backticks`,\n    DOUBLE_QUOTES: 'double_quotes',\n    DOUBLE_QUOTES_INSIDE_BACKTICKS: 'double \"quotes\" work inside backticks',\n    DOUBLE_QUOTES_INSIDE_SINGLE: 'double \"quotes\" work inside single quotes',\n    DOUBLE_QUOTES_SPACED: '    double quotes    ',\n    DOUBLE_QUOTES_WITH_NO_SPACE_BRACKET: '{ port: $MONGOLAB_PORT}',\n    EDGE_CASE_INLINE_COMMENTS: 'VALUE1',\n    EMAIL: 'therealnerdybeast@example.tld',\n    EMPTY: '',\n    EMPTY_BACKTICKS: '',\n    EMPTY_DOUBLE_QUOTES: '',\n    EMPTY_SINGLE_QUOTES: '',\n    EQUAL_SIGNS: 'equals==',\n    EXPORT_EXAMPLE: 'ignore export',\n    EXPAND_NEWLINES: 'expand\\nnew\\nlines',\n    INLINE_COMMENTS: 'inline comments',\n    INLINE_COMMENTS_BACKTICKS: 'inline comments outside of #backticks',\n    INLINE_COMMENTS_DOUBLE_QUOTES: 'inline comments outside of #doublequotes',\n    INLINE_COMMENTS_SINGLE_QUOTES: 'inline comments outside of #singlequotes',\n    INLINE_COMMENTS_SPACE: 'inline comments start with a',\n    MULTI_BACKTICKED: `THIS\\nIS\\nA\\n\"MULTILINE'S\"\\nSTRING`,\n    MULTI_DOUBLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    MULTI_NOT_VALID: 'THIS',\n    MULTI_NOT_VALID_QUOTE: '\"',\n    MULTI_SINGLE_QUOTED: 'THIS\\nIS\\nA\\nMULTILINE\\nSTRING',\n    RETAIN_INNER_QUOTES: '{\"foo\": \"bar\"}',\n    RETAIN_INNER_QUOTES_AS_BACKTICKS: `{\"foo\": \"bar's\"}`,\n    RETAIN_INNER_QUOTES_AS_STRING: '{\"foo\": \"bar\"}',\n    SINGLE_QUOTES: 'single_quotes',\n    SINGLE_QUOTES_INSIDE_BACKTICKS: \"single 'quotes' work inside backticks\",\n    SINGLE_QUOTES_INSIDE_DOUBLE: \"single 'quotes' work inside double quotes\",\n    SINGLE_QUOTES_SPACED: '    single quotes    ',\n    SPACED_KEY: 'parsed',\n    TRIM_SPACE_FROM_UNQUOTED: 'some spaced out string'\n  },\n  operator: 'deepStrictEqual'\n}\n\nNode.js v23.0.0-pre"},"time":307.292,"fullname":"parallel/test-util-parse-env","closingTestPoint":false}}]}