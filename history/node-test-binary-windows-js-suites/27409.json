{"failedTests":[{"testName":"parallel/test-node-run","timestamp":1714085550187,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win10-COMPILED_BY-vs2022 #27409","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win10-COMPILED_BY-vs2022/27409/","buildNumber":27409,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"84e0566749d7df52eef4b413ea287cf9fc690ee5","callStack":[{"upstreamBuild":62505,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70244,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58708,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52609"}],"tap":{"ok":false,"name":"parallel/test-node-run","id":951,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"timeout\nTAP version 13\n# Subtest: node run [command]\n    # Subtest: should emit experimental warning\n    ok 1 - should emit experimental warning\n      ---\n      duration_ms: 48.143\n      ...\n    # Subtest: returns error on non-existent file\n    ok 2 - returns error on non-existent file\n      ---\n      duration_ms: 53.2866\n      ..."},"time":120214.641,"fullname":"parallel/test-node-run","closingTestPoint":false}},{"testName":"parallel/test-error-serdes","timestamp":1714085550187,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #27409","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/27409/","buildNumber":27409,"builtOn":"test-rackspace-win2022_vs2022-x64-4","nodeVersion":"22.0.0","commitHash":"84e0566749d7df52eef4b413ea287cf9fc690ee5","callStack":[{"upstreamBuild":62505,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70244,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58708,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52609"}],"tap":{"ok":false,"name":"parallel/test-error-serdes","id":941,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"timeout"},"time":120252.129,"fullname":"parallel/test-error-serdes","closingTestPoint":false}},{"testName":"parallel/test-node-run","timestamp":1714085550187,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #27409","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/27409/","buildNumber":27409,"builtOn":"test-rackspace-win2022_vs2022-x64-4","nodeVersion":"22.0.0","commitHash":"84e0566749d7df52eef4b413ea287cf9fc690ee5","callStack":[{"upstreamBuild":62505,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70244,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58708,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52609"}],"tap":{"ok":false,"name":"parallel/test-node-run","id":942,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"timeout\nTAP version 13\n# Subtest: node run [command]\n    # Subtest: should emit experimental warning\n    ok 1 - should emit experimental warning\n      ---\n      duration_ms: 109.9508\n      ...\n    # Subtest: returns error on non-existent file\n    ok 2 - returns error on non-existent file\n      ---\n      duration_ms: 56.2573\n      ..."},"time":120200.057,"fullname":"parallel/test-node-run","closingTestPoint":false}},{"testName":"parallel/test-node-run","timestamp":1714085550187,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2016-COMPILED_BY-vs2022-x86 #27409","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2016-COMPILED_BY-vs2022-x86/27409/","buildNumber":27409,"builtOn":"test-rackspace-win2016_vs2015-x64-1","nodeVersion":"22.0.0","commitHash":"84e0566749d7df52eef4b413ea287cf9fc690ee5","callStack":[{"upstreamBuild":62505,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70244,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58708,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52609"}],"tap":{"ok":false,"name":"parallel/test-node-run","id":942,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"timeout\nTAP version 13\n# Subtest: node run [command]\n    # Subtest: should emit experimental warning\n    ok 1 - should emit experimental warning\n      ---\n      duration_ms: 72.6124\n      ...\n    # Subtest: returns error on non-existent file\n    ok 2 - returns error on non-existent file\n      ---\n      duration_ms: 53.3446\n      ..."},"time":120193.395,"fullname":"parallel/test-node-run","closingTestPoint":false}},{"testName":"parallel/test-node-run","timestamp":1714085550187,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-arm64-COMPILED_BY-vs2022-arm64 #27409","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/27409/","buildNumber":27409,"builtOn":"test-azure_msft-win11_vs2022-arm64-1","nodeVersion":"22.0.0","commitHash":"84e0566749d7df52eef4b413ea287cf9fc690ee5","callStack":[{"upstreamBuild":62505,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70244,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58708,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52609"}],"tap":{"ok":false,"name":"parallel/test-node-run","id":941,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"timeout\nTAP version 13\n# Subtest: node run [command]\n    # Subtest: should emit experimental warning\n    ok 1 - should emit experimental warning\n      ---\n      duration_ms: 45.397\n      ...\n    # Subtest: returns error on non-existent file\n    ok 2 - returns error on non-existent file\n      ---\n      duration_ms: 39.9302\n      ..."},"time":120217.388,"fullname":"parallel/test-node-run","closingTestPoint":false}},{"testName":"parallel/test-node-run","timestamp":1714085550187,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-COMPILED_BY-vs2022 #27409","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-COMPILED_BY-vs2022/27409/","buildNumber":27409,"builtOn":"test-azure_msft-win11_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"84e0566749d7df52eef4b413ea287cf9fc690ee5","callStack":[{"upstreamBuild":62505,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70244,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58708,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52609"}],"tap":{"ok":false,"name":"parallel/test-node-run","id":952,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"timeout\nTAP version 13\n# Subtest: node run [command]\n    # Subtest: should emit experimental warning\n    ok 1 - should emit experimental warning\n      ---\n      duration_ms: 48.4259\n      ...\n    # Subtest: returns error on non-existent file\n    ok 2 - returns error on non-existent file\n      ---\n      duration_ms: 98.188\n      ..."},"time":120419.736,"fullname":"parallel/test-node-run","closingTestPoint":false}},{"testName":"parallel/test-node-run","timestamp":1714085550187,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #27409","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/27409/","buildNumber":27409,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"84e0566749d7df52eef4b413ea287cf9fc690ee5","callStack":[{"upstreamBuild":62505,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70244,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58708,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52609"}],"tap":{"ok":false,"name":"parallel/test-node-run","id":946,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"timeout\nTAP version 13\n# Subtest: node run [command]\n    # Subtest: should emit experimental warning\n    ok 1 - should emit experimental warning\n      ---\n      duration_ms: 57.7562\n      ...\n    # Subtest: returns error on non-existent file\n    ok 2 - returns error on non-existent file\n      ---\n      duration_ms: 57.3169\n      ..."},"time":120227.065,"fullname":"parallel/test-node-run","closingTestPoint":false}},{"testName":"wpt/test-performance-timeline","timestamp":1714085550187,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2019-COMPILED_BY-vs2022 #27409","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022/27409/","buildNumber":27409,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"84e0566749d7df52eef4b413ea287cf9fc690ee5","callStack":[{"upstreamBuild":62505,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70244,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":58708,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"52609"}],"tap":{"ok":false,"name":"wpt/test-performance-timeline","id":989,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":3221226356,"stack":"[SKIPPED] webtiming-resolution.any.js: flaky\n[PASS] PerformanceObserver with buffered flag should see past and future entries.\n[PASS] getEntriesByType values are case sensitive\n[EXPECTED_FAILURE][FAIL] getEntriesByName values are case sensitive\nassert_equals: Resource entry exist expected 1 but got 0\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\performance-timeline\\case-sensitivity.any.js:25:5)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\performance-timeline\\case-sensitivity.any.js:14:3\n    at Script.runInThisContext (node:vm:136:12)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-performance-timeline.js 'case-sensitivity.any.js'\n\n[PASS] Test toJSON() in PerformanceEntry\n[PASS] PerformanceObserver with buffered flag sees entry after timeout\n[PASS] PerformanceObserver modifications inside callback should update filtering and not clear buffer\n[PASS] PerformanceObserver without buffered flag set to false cannot see past entries.\n[PASS] Multiple PerformanceObservers with buffered flag see all entries\n[PASS] Types observed are forgotten when disconnect() is called.\n[PASS] idl_test validation\n[PASS] Partial interface Performance: original interface defined\n[PASS] Partial interface Performance: member names are unique\n[PASS] PerformanceEntry interface: existence and properties of interface object\n[PASS] PerformanceEntry interface object length\n[PASS] PerformanceEntry interface object name\n[PASS] PerformanceEntry interface: existence and properties of interface prototype object\n[PASS] PerformanceEntry interface: existence and properties of interface prototype object's \"constructor\" property\n[PASS] PerformanceEntry interface: existence and properties of interface prototype object's @@unscopables property\n[PASS] PerformanceEntry interface: operation toJSON()\n[PASS] PerformanceObserver interface: existence and properties of interface object\n[PASS] PerformanceObserver interface object length\n[PASS] PerformanceObserver interface object name\n[PASS] PerformanceObserver interface: existence and properties of interface prototype object\n[PASS] PerformanceObserver interface: existence and properties of interface prototype object's \"constructor\" property\n[PASS] PerformanceObserver interface: existence and properties of interface prototype object's @@unscopables property\n[PASS] PerformanceObserver interface: operation observe(optional PerformanceObserverInit)\n[PASS] PerformanceObserver interface: operation disconnect()\n[PASS] PerformanceObserver interface: operation takeRecords()\n[PASS] PerformanceObserver interface: attribute supportedEntryTypes\n[PASS] PerformanceObserver must be primary interface of observer\n[PASS] Stringification of observer\n[PASS] PerformanceObserver interface: observer must inherit property \"observe(optional PerformanceObserverInit)\" with the proper type\n[PASS] PerformanceObserver interface: calling observe(optional PerformanceObserverInit) on observer with too few arguments must throw TypeError\n[PASS] PerformanceObserver interface: observer must inherit property \"disconnect()\" with the proper type\n[PASS] PerformanceObserver interface: observer must inherit property \"takeRecords()\" with the proper type\n[PASS] PerformanceObserver interface: observer must inherit property \"supportedEntryTypes\" with the proper type\n[PASS] PerformanceObserverEntryList interface: existence and properties of interface object\n[PASS] PerformanceObserverEntryList interface object length\n[PASS] PerformanceObserverEntryList interface object name\n[PASS] PerformanceObserverEntryList interface: existence and properties of interface prototype object\n[PASS] PerformanceObserverEntryList interface: existence and properties of interface prototype object's \"constructor\" property\n[PASS] PerformanceObserverEntryList interface: existence and properties of interface prototype object's @@unscopables property\n[PASS] PerformanceObserverEntryList interface: operation getEntries()\n[PASS] PerformanceObserverEntryList interface: operation getEntriesByType(DOMString)\n[PASS] PerformanceObserverEntryList interface: operation getEntriesByName(DOMString, optional DOMString)\n[PASS] PerformanceObserverEntryList must be primary interface of entryList\n[PASS] Stringification of entryList\n[PASS] PerformanceObserverEntryList interface: entryList must inherit property \"getEntries()\" with the proper type\n[PASS] PerformanceObserverEntryList interface: entryList must inherit property \"getEntriesByType(DOMString)\" with the proper type\n[PASS] PerformanceObserverEntryList interface: calling getEntriesByType(DOMString) on entryList with too few arguments must throw TypeError\n[PASS] PerformanceObserverEntryList interface: entryList must inherit property \"getEntriesByName(DOMString, optional DOMString)\" with the proper type\n[PASS] PerformanceObserverEntryList interface: calling getEntriesByName(DOMString, optional DOMString) on entryList with too few arguments must throw TypeError\n[PASS] Performance interface: operation getEntries()\n[PASS] Performance interface: operation getEntriesByType(DOMString)\n[PASS] Performance interface: operation getEntriesByName(DOMString, optional DOMString)\n[PASS] Performance interface: performance must inherit property \"getEntries()\" with the proper type\n[PASS] Performance interface: performance must inherit property \"getEntriesByType(DOMString)\" with the proper type\n[PASS] Performance interface: calling getEntriesByType(DOMString) on performance with too few arguments must throw TypeError\n[PASS] Performance interface: performance must inherit property \"getEntriesByName(DOMString, optional DOMString)\" with the proper type\n[PASS] Performance interface: calling getEntriesByName(DOMString, optional DOMString) on performance with too few arguments must throw TypeError\n[PASS] PerformanceEntry interface: attribute name\n[PASS] PerformanceEntry interface: attribute entryType\n[PASS] PerformanceEntry interface: attribute startTime\n[PASS] PerformanceEntry interface: attribute duration\n[PASS] idl_test setup\n[PASS] disconnecting an unconnected observer is a no-op\n[PASS] getEntries, getEntriesByType and getEntriesByName work\n[PASS] entries are observable\n[PASS] mark entries are observable\n[PASS] measure entries are observable\n[PASS] getEntries, getEntriesByType, getEntriesByName sort order\n[PASS] Two calls of observe() with the same 'type' cause override.\n[PASS] Calling observe() without 'type' or 'entryTypes' throws a TypeError\n[PASS] Calling observe() with entryTypes and then type should throw an InvalidModificationError\n[PASS] Calling observe() with type and then entryTypes should throw an InvalidModificationError\n[PASS] Calling observe() with type and entryTypes should throw a TypeError\n[PASS] Passing in unknown values to type does throw an exception.\n[PASS] observe() with different type values stacks.\n[PASS] entryTypes must be a sequence or throw a TypeError\n[PASS] Empty sequence entryTypes does not throw an exception.\n[PASS] Unknown entryTypes do not throw an exception.\n[PASS] Filter unsupported entryType entryType names within the entryTypes sequence\n[PASS] Check observer callback parameter and this values\n[PASS] replace observer if already present\n[PASS] supportedEntryTypes exists and returns entries in alphabetical order\n[PASS] supportedEntryTypes caches result\n[PASS] Test PerformanceObserver's takeRecords()\n[PASS] observe() and case sensitivity for types/entryTypes and buffered.\n[PASS] disconnected callbacks must not be invoked\n[PASS] An observer disconnected after a mark must not have its callback invoked"},"time":2774.008,"fullname":"wpt/test-performance-timeline","closingTestPoint":false}}]}