{"failedTests":[{"testName":"client-proxy/test-https-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-arm64-1","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-request","id":48,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:54 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:55 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///d:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-request.mjs:79\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 996,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 996,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 173,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [ 'proxy-connection', 'keep-alive', 'host', 'localhost:55241' ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:55241',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 996,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 996,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 173,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 4,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 163,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 996,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 165,\n      Symbol(triggerId): 164,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 163,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 996,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 165,\n      Symbol(triggerId): 164,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 173,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1524.999,"fullname":"client-proxy/test-https-proxy-request","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win10-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win10_vs2019-x64-2","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":34,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 554,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 554,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:65270',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:65270',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 554,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 554,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 554,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 554,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 164,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":951,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win10-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win10_vs2019-x64-2","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":322,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":220,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win10-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win10-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-request","id":40,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:19 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:19 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-request.mjs:79\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 162,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 573,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 164,\n        Symbol(triggerId): 163,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 162,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 573,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 164,\n        Symbol(triggerId): 163,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 172,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [ 'proxy-connection', 'keep-alive', 'host', 'localhost:56778' ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:56778',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 162,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 573,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 164,\n        Symbol(triggerId): 163,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 162,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 573,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 164,\n        Symbol(triggerId): 163,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 172,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 4,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 162,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 573,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 164,\n      Symbol(triggerId): 163,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 162,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 573,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 164,\n      Symbol(triggerId): 163,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 172,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":972.077,"fullname":"client-proxy/test-https-proxy-request","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-arm64-2","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":43,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///d:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 155,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1102,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 157,\n        Symbol(triggerId): 156,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 155,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1102,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 157,\n        Symbol(triggerId): 156,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 165,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:57286',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:57286',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 155,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1102,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 157,\n        Symbol(triggerId): 156,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 155,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1102,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 157,\n        Symbol(triggerId): 156,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 165,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 155,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1102,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 157,\n      Symbol(triggerId): 156,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 155,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1102,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 157,\n      Symbol(triggerId): 156,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 165,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1627.005,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2019-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":42,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 155,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 915,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 157,\n        Symbol(triggerId): 156,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 155,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 915,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 157,\n        Symbol(triggerId): 156,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 165,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:59063',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:59063',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 155,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 915,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 157,\n        Symbol(triggerId): 156,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 155,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 915,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 157,\n        Symbol(triggerId): 156,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 165,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 155,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 915,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 157,\n      Symbol(triggerId): 156,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 155,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 915,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 157,\n      Symbol(triggerId): 156,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 165,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1374.046,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2019-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":324,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":362.023,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-x64-1","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":26,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 586,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 586,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:63649',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:63649',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 586,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 586,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 586,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 586,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 150,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1095.069,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-x64-1","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-request","id":28,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:43 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:44 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-request.mjs:68\ncalled with arguments: <ref *2> IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1315084\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 462,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 462,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 178,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  rawHeaders: [\n    'Host',\n    'localhost:63674',\n    'proxy-connection',\n    'keep-alive',\n    'Connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: false,\n  url: 'http://localhost:63674/test',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 462,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 462,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 178,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): {\n    host: 'localhost:63674',\n    'proxy-connection': 'keep-alive',\n    connection: 'keep-alive'\n  },\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *1> ServerResponse {\n  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  outputData: [],\n  outputSize: 0,\n  writable: true,\n  destroyed: false,\n  _last: false,\n  chunkedEncoding: false,\n  shouldKeepAlive: true,\n  maxRequestsOnConnectionReached: false,\n  _defaultKeepAlive: true,\n  useChunkedEncodingByDefault: true,\n  sendDate: true,\n  _removedConnection: false,\n  _removedContLen: false,\n  _removedTE: false,\n  strictContentLength: false,\n  _contentLength: null,\n  _hasBody: true,\n  _trailer: '',\n  finished: false,\n  _headerSent: false,\n  _closed: false,\n  _header: null,\n  _keepAliveTimeout: 5000,\n  _onPendingData: [Function: bound updateOutgoingData],\n  req: IncomingMessage {\n    _events: {\n      close: undefined,\n      error: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 1315084\n    },\n    _maxListeners: undefined,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 178,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    httpVersionMajor: 1,\n    httpVersionMinor: 1,\n    httpVersion: '1.1',\n    complete: false,\n    rawHeaders: [\n      'Host',\n      'localhost:63674',\n      'proxy-connection',\n      'keep-alive',\n      'Connection',\n      'keep-alive'\n    ],\n    rawTrailers: [],\n    joinDuplicateHeaders: null,\n    aborted: false,\n    upgrade: false,\n    url: 'http://localhost:63674/test',\n    method: 'GET',\n    statusCode: null,\n    statusMessage: null,\n    client: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 178,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    _consuming: false,\n    _dumped: false,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kHeaders): {\n      host: 'localhost:63674',\n      'proxy-connection': 'keep-alive',\n      connection: 'keep-alive'\n    },\n    Symbol(kHeadersCount): 6,\n    Symbol(kTrailers): null,\n    Symbol(kTrailersCount): 0\n  },\n  _sent100: false,\n  _expect_continue: false,\n  _maxRequestsPerSocket: 0,\n  Symbol(shapeMode): false,\n  Symbol(kCapture): false,\n  Symbol(kBytesWritten): 0,\n  Symbol(kNeedDrain): false,\n  Symbol(corked): 0,\n  Symbol(kChunkedBuffer): [],\n  Symbol(kChunkedLength): 0,\n  Symbol(kSocket): <ref *2> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 462,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 462,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *2],\n      incoming: [IncomingMessage],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: [Circular *1],\n    Symbol(async_id_symbol): 178,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *2]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  Symbol(kOutHeaders): null,\n  Symbol(errored): null,\n  Symbol(kHighWaterMark): 16384,\n  Symbol(kRejectNonStandardBodyWrites): false,\n  Symbol(kUniqueHeaders): null\n}\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at parserOnIncoming (node:_http_server:1153:12)\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":849.057,"fullname":"client-proxy/test-http-proxy-request","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":27,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///d:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 977,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 977,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:64714',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:64714',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 977,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 977,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 977,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 977,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 150,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1539.996,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-request","id":30,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:47:54 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:47:55 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///d:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-request.mjs:68\ncalled with arguments: <ref *2> IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1315084\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 911,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 911,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 178,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  rawHeaders: [\n    'Host',\n    'localhost:64737',\n    'proxy-connection',\n    'keep-alive',\n    'Connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: false,\n  url: 'http://localhost:64737/test',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 911,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 911,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 178,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): {\n    host: 'localhost:64737',\n    'proxy-connection': 'keep-alive',\n    connection: 'keep-alive'\n  },\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *1> ServerResponse {\n  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  outputData: [],\n  outputSize: 0,\n  writable: true,\n  destroyed: false,\n  _last: false,\n  chunkedEncoding: false,\n  shouldKeepAlive: true,\n  maxRequestsOnConnectionReached: false,\n  _defaultKeepAlive: true,\n  useChunkedEncodingByDefault: true,\n  sendDate: true,\n  _removedConnection: false,\n  _removedContLen: false,\n  _removedTE: false,\n  strictContentLength: false,\n  _contentLength: null,\n  _hasBody: true,\n  _trailer: '',\n  finished: false,\n  _headerSent: false,\n  _closed: false,\n  _header: null,\n  _keepAliveTimeout: 5000,\n  _onPendingData: [Function: bound updateOutgoingData],\n  req: IncomingMessage {\n    _events: {\n      close: undefined,\n      error: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 1315084\n    },\n    _maxListeners: undefined,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 178,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    httpVersionMajor: 1,\n    httpVersionMinor: 1,\n    httpVersion: '1.1',\n    complete: false,\n    rawHeaders: [\n      'Host',\n      'localhost:64737',\n      'proxy-connection',\n      'keep-alive',\n      'Connection',\n      'keep-alive'\n    ],\n    rawTrailers: [],\n    joinDuplicateHeaders: null,\n    aborted: false,\n    upgrade: false,\n    url: 'http://localhost:64737/test',\n    method: 'GET',\n    statusCode: null,\n    statusMessage: null,\n    client: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 178,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    _consuming: false,\n    _dumped: false,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kHeaders): {\n      host: 'localhost:64737',\n      'proxy-connection': 'keep-alive',\n      connection: 'keep-alive'\n    },\n    Symbol(kHeadersCount): 6,\n    Symbol(kTrailers): null,\n    Symbol(kTrailersCount): 0\n  },\n  _sent100: false,\n  _expect_continue: false,\n  _maxRequestsPerSocket: 0,\n  Symbol(shapeMode): false,\n  Symbol(kCapture): false,\n  Symbol(kBytesWritten): 0,\n  Symbol(kNeedDrain): false,\n  Symbol(corked): 0,\n  Symbol(kChunkedBuffer): [],\n  Symbol(kChunkedLength): 0,\n  Symbol(kSocket): <ref *2> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 911,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 168,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 911,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 170,\n        Symbol(triggerId): 169,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *2],\n      incoming: [IncomingMessage],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: [Circular *1],\n    Symbol(async_id_symbol): 178,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *2]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  Symbol(kOutHeaders): null,\n  Symbol(errored): null,\n  Symbol(kHighWaterMark): 16384,\n  Symbol(kRejectNonStandardBodyWrites): false,\n  Symbol(kUniqueHeaders): null\n}\n    at Server.mustNotCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at parserOnIncoming (node:_http_server:1153:12)\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1405,"fullname":"client-proxy/test-http-proxy-request","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win11-arm64-COMPILED_BY-vs2022_clang-arm64 #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022_clang-arm64/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":323,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":539.997,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win2022-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2022-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2022_vs2022-x64-3","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":28,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1105,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1105,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 151,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:62637',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:62637',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1105,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1105,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 151,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 141,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1105,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 143,\n      Symbol(triggerId): 142,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 141,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1105,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 143,\n      Symbol(triggerId): 142,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 151,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1686.056,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win2022-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2022-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2022_vs2022-x64-3","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-request","id":29,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:41 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:41 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-request.mjs:68\ncalled with arguments: <ref *2> IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1315084\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 679,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 679,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 177,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  rawHeaders: [\n    'Host',\n    'localhost:62661',\n    'proxy-connection',\n    'keep-alive',\n    'Connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: false,\n  url: 'http://localhost:62661/test',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 679,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 679,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 177,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): {\n    host: 'localhost:62661',\n    'proxy-connection': 'keep-alive',\n    connection: 'keep-alive'\n  },\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *1> ServerResponse {\n  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  outputData: [],\n  outputSize: 0,\n  writable: true,\n  destroyed: false,\n  _last: false,\n  chunkedEncoding: false,\n  shouldKeepAlive: true,\n  maxRequestsOnConnectionReached: false,\n  _defaultKeepAlive: true,\n  useChunkedEncodingByDefault: true,\n  sendDate: true,\n  _removedConnection: false,\n  _removedContLen: false,\n  _removedTE: false,\n  strictContentLength: false,\n  _contentLength: null,\n  _hasBody: true,\n  _trailer: '',\n  finished: false,\n  _headerSent: false,\n  _closed: false,\n  _header: null,\n  _keepAliveTimeout: 5000,\n  _onPendingData: [Function: bound updateOutgoingData],\n  req: IncomingMessage {\n    _events: {\n      close: undefined,\n      error: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 1315084\n    },\n    _maxListeners: undefined,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 177,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    httpVersionMajor: 1,\n    httpVersionMinor: 1,\n    httpVersion: '1.1',\n    complete: false,\n    rawHeaders: [\n      'Host',\n      'localhost:62661',\n      'proxy-connection',\n      'keep-alive',\n      'Connection',\n      'keep-alive'\n    ],\n    rawTrailers: [],\n    joinDuplicateHeaders: null,\n    aborted: false,\n    upgrade: false,\n    url: 'http://localhost:62661/test',\n    method: 'GET',\n    statusCode: null,\n    statusMessage: null,\n    client: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 177,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    _consuming: false,\n    _dumped: false,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kHeaders): {\n      host: 'localhost:62661',\n      'proxy-connection': 'keep-alive',\n      connection: 'keep-alive'\n    },\n    Symbol(kHeadersCount): 6,\n    Symbol(kTrailers): null,\n    Symbol(kTrailersCount): 0\n  },\n  _sent100: false,\n  _expect_continue: false,\n  _maxRequestsPerSocket: 0,\n  Symbol(shapeMode): false,\n  Symbol(kCapture): false,\n  Symbol(kBytesWritten): 0,\n  Symbol(kNeedDrain): false,\n  Symbol(corked): 0,\n  Symbol(kChunkedBuffer): [],\n  Symbol(kChunkedLength): 0,\n  Symbol(kSocket): <ref *2> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 679,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 679,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *2],\n      incoming: [IncomingMessage],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: [Circular *1],\n    Symbol(async_id_symbol): 177,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *2]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  Symbol(kOutHeaders): null,\n  Symbol(errored): null,\n  Symbol(kHighWaterMark): 16384,\n  Symbol(kRejectNonStandardBodyWrites): false,\n  Symbol(kUniqueHeaders): null\n}\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at parserOnIncoming (node:_http_server:1153:12)\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1407.053,"fullname":"client-proxy/test-http-proxy-request","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2022-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2022_vs2022-x64-4","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":43,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 958,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 958,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:63469',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:63469',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 958,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 958,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 958,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 958,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 164,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1505.024,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win2022-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2022_vs2022-x64-4","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":325,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":468.971,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win10-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win10-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":25,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 399,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 399,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:57650',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:57650',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 399,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 140,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 399,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 142,\n        Symbol(triggerId): 141,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 150,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 399,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 140,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 399,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 142,\n      Symbol(triggerId): 141,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 150,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":666.025,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win10-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win10-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-request","id":28,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:49:06 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:49:06 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-request.mjs:68\ncalled with arguments: <ref *2> IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1315084\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 347,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 347,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 177,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  rawHeaders: [\n    'Host',\n    'localhost:57677',\n    'proxy-connection',\n    'keep-alive',\n    'Connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: false,\n  url: 'http://localhost:57677/test',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 347,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 347,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 177,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): {\n    host: 'localhost:57677',\n    'proxy-connection': 'keep-alive',\n    connection: 'keep-alive'\n  },\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *1> ServerResponse {\n  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  outputData: [],\n  outputSize: 0,\n  writable: true,\n  destroyed: false,\n  _last: false,\n  chunkedEncoding: false,\n  shouldKeepAlive: true,\n  maxRequestsOnConnectionReached: false,\n  _defaultKeepAlive: true,\n  useChunkedEncodingByDefault: true,\n  sendDate: true,\n  _removedConnection: false,\n  _removedContLen: false,\n  _removedTE: false,\n  strictContentLength: false,\n  _contentLength: null,\n  _hasBody: true,\n  _trailer: '',\n  finished: false,\n  _headerSent: false,\n  _closed: false,\n  _header: null,\n  _keepAliveTimeout: 5000,\n  _onPendingData: [Function: bound updateOutgoingData],\n  req: IncomingMessage {\n    _events: {\n      close: undefined,\n      error: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 1315084\n    },\n    _maxListeners: undefined,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 177,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    httpVersionMajor: 1,\n    httpVersionMinor: 1,\n    httpVersion: '1.1',\n    complete: false,\n    rawHeaders: [\n      'Host',\n      'localhost:57677',\n      'proxy-connection',\n      'keep-alive',\n      'Connection',\n      'keep-alive'\n    ],\n    rawTrailers: [],\n    joinDuplicateHeaders: null,\n    aborted: false,\n    upgrade: false,\n    url: 'http://localhost:57677/test',\n    method: 'GET',\n    statusCode: null,\n    statusMessage: null,\n    client: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 177,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    _consuming: false,\n    _dumped: false,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kHeaders): {\n      host: 'localhost:57677',\n      'proxy-connection': 'keep-alive',\n      connection: 'keep-alive'\n    },\n    Symbol(kHeadersCount): 6,\n    Symbol(kTrailers): null,\n    Symbol(kTrailersCount): 0\n  },\n  _sent100: false,\n  _expect_continue: false,\n  _maxRequestsPerSocket: 0,\n  Symbol(shapeMode): false,\n  Symbol(kCapture): false,\n  Symbol(kBytesWritten): 0,\n  Symbol(kNeedDrain): false,\n  Symbol(corked): 0,\n  Symbol(kChunkedBuffer): [],\n  Symbol(kChunkedLength): 0,\n  Symbol(kSocket): <ref *2> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 347,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 347,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *2],\n      incoming: [IncomingMessage],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: [Circular *1],\n    Symbol(async_id_symbol): 177,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *2]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  Symbol(kOutHeaders): null,\n  Symbol(errored): null,\n  Symbol(kHighWaterMark): 16384,\n  Symbol(kRejectNonStandardBodyWrites): false,\n  Symbol(kUniqueHeaders): null\n}\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at parserOnIncoming (node:_http_server:1153:12)\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":606.018,"fullname":"client-proxy/test-http-proxy-request","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2019-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-request","id":48,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:46:14 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:46:15 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-request.mjs:79\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1064,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1064,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 173,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [ 'proxy-connection', 'keep-alive', 'host', 'localhost:63245' ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:63245',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1064,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 1064,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 173,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 4,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 163,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1064,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 165,\n      Symbol(triggerId): 164,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 163,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 1064,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 165,\n      Symbol(triggerId): 164,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 173,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1720.059,"fullname":"client-proxy/test-https-proxy-request","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win2019-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-fetch","id":27,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-fetch.mjs:58\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 737,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 737,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 151,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:60170',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:60170',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 737,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 141,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 737,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 143,\n        Symbol(triggerId): 142,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 151,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 141,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 737,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 143,\n      Symbol(triggerId): 142,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 141,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 737,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 143,\n      Symbol(triggerId): 142,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 151,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1268.01,"fullname":"client-proxy/test-http-proxy-fetch","closingTestPoint":false}},{"testName":"client-proxy/test-http-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 3,win2019-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-http-proxy-request","id":29,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:49:40 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:49:40 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-http-proxy-request.mjs:68\ncalled with arguments: <ref *2> IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1315084\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 571,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 571,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 177,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  rawHeaders: [\n    'Host',\n    'localhost:60196',\n    'proxy-connection',\n    'keep-alive',\n    'Connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: false,\n  url: 'http://localhost:60196/test',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 571,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 571,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(kBytesWritten): 0,\n      Symbol(kNeedDrain): false,\n      Symbol(corked): 0,\n      Symbol(kChunkedBuffer): [],\n      Symbol(kChunkedLength): 0,\n      Symbol(kSocket): [Circular *1],\n      Symbol(kOutHeaders): null,\n      Symbol(errored): null,\n      Symbol(kHighWaterMark): 16384,\n      Symbol(kRejectNonStandardBodyWrites): false,\n      Symbol(kUniqueHeaders): null\n    },\n    Symbol(async_id_symbol): 177,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): {\n    host: 'localhost:60196',\n    'proxy-connection': 'keep-alive',\n    connection: 'keep-alive'\n  },\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *1> ServerResponse {\n  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  outputData: [],\n  outputSize: 0,\n  writable: true,\n  destroyed: false,\n  _last: false,\n  chunkedEncoding: false,\n  shouldKeepAlive: true,\n  maxRequestsOnConnectionReached: false,\n  _defaultKeepAlive: true,\n  useChunkedEncodingByDefault: true,\n  sendDate: true,\n  _removedConnection: false,\n  _removedContLen: false,\n  _removedTE: false,\n  strictContentLength: false,\n  _contentLength: null,\n  _hasBody: true,\n  _trailer: '',\n  finished: false,\n  _headerSent: false,\n  _closed: false,\n  _header: null,\n  _keepAliveTimeout: 5000,\n  _onPendingData: [Function: bound updateOutgoingData],\n  req: IncomingMessage {\n    _events: {\n      close: undefined,\n      error: undefined,\n      data: undefined,\n      end: undefined,\n      readable: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 1315084\n    },\n    _maxListeners: undefined,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 177,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    httpVersionMajor: 1,\n    httpVersionMinor: 1,\n    httpVersion: '1.1',\n    complete: false,\n    rawHeaders: [\n      'Host',\n      'localhost:60196',\n      'proxy-connection',\n      'keep-alive',\n      'Connection',\n      'keep-alive'\n    ],\n    rawTrailers: [],\n    joinDuplicateHeaders: null,\n    aborted: false,\n    upgrade: false,\n    url: 'http://localhost:60196/test',\n    method: 'GET',\n    statusCode: null,\n    statusMessage: null,\n    client: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _events: [Object],\n      _readableState: [ReadableState],\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _maxListeners: undefined,\n      _eventsCount: 8,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *1],\n      Symbol(async_id_symbol): 177,\n      Symbol(kHandle): [TCP],\n      Symbol(lastWriteQueueSize): 0,\n      Symbol(timeout): null,\n      Symbol(kBuffer): null,\n      Symbol(kBufferCb): null,\n      Symbol(kBufferGen): null,\n      Symbol(shapeMode): true,\n      Symbol(kCapture): false,\n      Symbol(kSetNoDelay): true,\n      Symbol(kSetKeepAlive): false,\n      Symbol(kSetKeepAliveInitialDelay): 0,\n      Symbol(kBytesRead): 0,\n      Symbol(kBytesWritten): 0\n    },\n    _consuming: false,\n    _dumped: false,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kHeaders): {\n      host: 'localhost:60196',\n      'proxy-connection': 'keep-alive',\n      connection: 'keep-alive'\n    },\n    Symbol(kHeadersCount): 6,\n    Symbol(kTrailers): null,\n    Symbol(kTrailersCount): 0\n  },\n  _sent100: false,\n  _expect_continue: false,\n  _maxRequestsPerSocket: 0,\n  Symbol(shapeMode): false,\n  Symbol(kCapture): false,\n  Symbol(kBytesWritten): 0,\n  Symbol(kNeedDrain): false,\n  Symbol(corked): 0,\n  Symbol(kChunkedBuffer): [],\n  Symbol(kChunkedLength): 0,\n  Symbol(kSocket): <ref *2> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: [Array],\n      error: [Function: socketOnError],\n      prefinish: undefined,\n      finish: undefined,\n      drain: [Function: bound socketOnDrain],\n      data: [Function: bound socketOnData],\n      end: [Array],\n      readable: undefined,\n      timeout: [Function: socketOnTimeout],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 193997060\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 8,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 571,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 167,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 571,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 169,\n        Symbol(triggerId): 168,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *2],\n      incoming: [IncomingMessage],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      joinDuplicateHeaders: null,\n      Symbol(resource_symbol): [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: [Circular *1],\n    Symbol(async_id_symbol): 177,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *2]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  Symbol(kOutHeaders): null,\n  Symbol(errored): null,\n  Symbol(kHighWaterMark): 16384,\n  Symbol(kRejectNonStandardBodyWrites): false,\n  Symbol(kUniqueHeaders): null\n}\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at parserOnIncoming (node:_http_server:1153:12)\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1075.016,"fullname":"client-proxy/test-http-proxy-request","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-fetch","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win11-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-fetch","id":32,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Hello world\n\n[CLOSE] 0 null\n[STDOUT] Hello world\n\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-fetch.mjs:64\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 696,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 696,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'host',\n    'localhost:52328',\n    'connection',\n    'close',\n    'proxy-connection',\n    'keep-alive'\n  ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:52328',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 696,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 154,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 696,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 156,\n        Symbol(triggerId): 155,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 164,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 6,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 696,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 154,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 696,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 156,\n      Symbol(triggerId): 155,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 164,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1198.023,"fullname":"client-proxy/test-https-proxy-fetch","closingTestPoint":false}},{"testName":"parallel/test-fs-cp","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 2,win11-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"parallel/test-fs-cp","id":322,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":3221226505,"stack":""},"time":332.007,"fullname":"parallel/test-fs-cp","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win11-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-azure_msft-win11_vs2022-x64-4","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-request","id":40,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:48:55 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:48:55 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-request.mjs:79\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 162,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 483,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 164,\n        Symbol(triggerId): 163,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 162,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 483,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 164,\n        Symbol(triggerId): 163,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 172,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [ 'proxy-connection', 'keep-alive', 'host', 'localhost:54789' ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:54789',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 162,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 483,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 164,\n        Symbol(triggerId): 163,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 162,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 483,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 164,\n        Symbol(triggerId): 163,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 172,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 4,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 162,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 483,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 164,\n      Symbol(triggerId): 163,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 162,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 483,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 164,\n      Symbol(triggerId): 163,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 172,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":841.022,"fullname":"client-proxy/test-https-proxy-request","closingTestPoint":false}},{"testName":"client-proxy/test-https-proxy-request","timestamp":1752093819720,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites Â» 0,win2022-COMPILED_BY-vs2022_clang #35340","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022_clang/35340/","buildNumber":35340,"builtOn":"test-rackspace-win2022_vs2022-x64-2","nodeVersion":"25.0.0","commitHash":"2172897e7ea6bfb9ee62bda567d534994976c467","callStack":[{"upstreamBuild":71582,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":81175,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"}],"tap":{"ok":false,"name":"client-proxy/test-https-proxy-request","id":48,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:43 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\n[STDOUT] Status Code: 200\n\n[STDOUT] Headers: {\n  date: 'Wed, 09 Jul 2025 20:45:44 GMT',\n  connection: 'keep-alive',\n  'keep-alive': 'timeout=5',\n  'content-length': '11'\n}\n\n[STDOUT] Hello world\n[CLOSE] 0 null\nnode:assert:117\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/client-proxy/test-https-proxy-request.mjs:79\ncalled with arguments: IncomingMessage {\n  _events: {\n    close: undefined,\n    error: undefined,\n    data: undefined,\n    end: undefined,\n    readable: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 1331980\n  },\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 955,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 955,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 173,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [ 'proxy-connection', 'keep-alive', 'host', 'localhost:55603' ],\n  rawTrailers: [],\n  joinDuplicateHeaders: null,\n  aborted: false,\n  upgrade: true,\n  url: 'localhost:55603',\n  method: 'CONNECT',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _events: {\n      close: undefined,\n      error: undefined,\n      prefinish: undefined,\n      finish: undefined,\n      drain: undefined,\n      data: undefined,\n      end: [Function: onReadableStreamEnd],\n      readable: undefined,\n      timeout: undefined,\n      resume: undefined,\n      pause: undefined\n    },\n    _readableState: ReadableState {\n      highWaterMark: 16384,\n      buffer: [],\n      bufferIndex: 0,\n      length: 0,\n      pipes: [],\n      awaitDrainWriters: null,\n      Symbol(kState): 34613508\n    },\n    _writableState: WritableState {\n      highWaterMark: 16384,\n      length: 0,\n      corked: 0,\n      onwrite: [Function: bound onwrite],\n      writelen: 0,\n      bufferedIndex: 0,\n      pendingcb: 0,\n      Symbol(kState): 17564420,\n      Symbol(kBufferedValue): null\n    },\n    allowHalfOpen: true,\n    _maxListeners: undefined,\n    _eventsCount: 1,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 955,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      requireHostHeader: true,\n      joinDuplicateHeaders: undefined,\n      rejectNonStandardBodyWrites: false,\n      _events: [Object: null prototype],\n      _eventsCount: 4,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      _listeningId: 2,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      highWaterMark: 16384,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::0',\n      Symbol(IncomingMessage): [Function: IncomingMessage],\n      Symbol(ServerResponse): [Function: ServerResponse],\n      Symbol(shapeMode): false,\n      Symbol(kCapture): false,\n      Symbol(async_id_symbol): 163,\n      Symbol(kUniqueHeaders): null,\n      Symbol(http.server.connections): ConnectionsList {},\n      Symbol(http.server.connectionsCheckingInterval): Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [Timeout],\n        _idleStart: 955,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        Symbol(refed): false,\n        Symbol(kHasPrimitive): false,\n        Symbol(asyncId): 165,\n        Symbol(triggerId): 164,\n        Symbol(kAsyncContextFrame): undefined\n      }\n    },\n    parser: null,\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    Symbol(async_id_symbol): 173,\n    Symbol(kHandle): TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      Symbol(owner_symbol): [Circular *1]\n    },\n    Symbol(lastWriteQueueSize): 0,\n    Symbol(timeout): null,\n    Symbol(kBuffer): null,\n    Symbol(kBufferCb): null,\n    Symbol(kBufferGen): null,\n    Symbol(shapeMode): true,\n    Symbol(kCapture): false,\n    Symbol(kSetNoDelay): true,\n    Symbol(kSetKeepAlive): false,\n    Symbol(kSetKeepAliveInitialDelay): 0,\n    Symbol(kBytesRead): 0,\n    Symbol(kBytesWritten): 0\n  },\n  _consuming: false,\n  _dumped: false,\n  parser: null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kHeaders): null,\n  Symbol(kHeadersCount): 4,\n  Symbol(kTrailers): null,\n  Symbol(kTrailersCount): 0\n}, <ref *2> Socket {\n  connecting: false,\n  _hadError: false,\n  _parent: null,\n  _host: null,\n  _closeAfterHandlingError: false,\n  _events: {\n    close: undefined,\n    error: undefined,\n    prefinish: undefined,\n    finish: undefined,\n    drain: undefined,\n    data: undefined,\n    end: [Function: onReadableStreamEnd],\n    readable: undefined,\n    timeout: undefined,\n    resume: undefined,\n    pause: undefined\n  },\n  _readableState: ReadableState {\n    highWaterMark: 16384,\n    buffer: [],\n    bufferIndex: 0,\n    length: 0,\n    pipes: [],\n    awaitDrainWriters: null,\n    Symbol(kState): 34613508\n  },\n  _writableState: WritableState {\n    highWaterMark: 16384,\n    length: 0,\n    corked: 0,\n    onwrite: [Function: bound onwrite],\n    writelen: 0,\n    bufferedIndex: 0,\n    pendingcb: 0,\n    Symbol(kState): 17564420,\n    Symbol(kBufferedValue): null\n  },\n  allowHalfOpen: true,\n  _maxListeners: undefined,\n  _eventsCount: 1,\n  _sockname: null,\n  _pendingData: null,\n  _pendingEncoding: '',\n  server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 163,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 955,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 165,\n      Symbol(triggerId): 164,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  _server: <ref *1> Server {\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    requestTimeout: 300000,\n    headersTimeout: 60000,\n    keepAliveTimeout: 5000,\n    connectionsCheckingInterval: 30000,\n    requireHostHeader: true,\n    joinDuplicateHeaders: undefined,\n    rejectNonStandardBodyWrites: false,\n    _events: [Object: null prototype] {\n      request: [Function: mustNotCall],\n      connection: [Function: connectionListener],\n      listening: [Function: setupConnectionsTracking],\n      connect: [Function: mustNotCall]\n    },\n    _eventsCount: 4,\n    _maxListeners: undefined,\n    _connections: 1,\n    _handle: TCP {\n      reading: false,\n      onconnection: [Function: onconnection],\n      Symbol(owner_symbol): [Circular *1]\n    },\n    _usingWorkers: false,\n    _workers: [],\n    _unref: false,\n    _listeningId: 2,\n    allowHalfOpen: true,\n    pauseOnConnect: false,\n    noDelay: true,\n    keepAlive: false,\n    keepAliveInitialDelay: 0,\n    highWaterMark: 16384,\n    httpAllowHalfOpen: false,\n    timeout: 0,\n    maxHeadersCount: null,\n    maxRequestsPerSocket: 0,\n    _connectionKey: '6::::0',\n    Symbol(IncomingMessage): [Function: IncomingMessage],\n    Symbol(ServerResponse): [Function: ServerResponse],\n    Symbol(shapeMode): false,\n    Symbol(kCapture): false,\n    Symbol(async_id_symbol): 163,\n    Symbol(kUniqueHeaders): null,\n    Symbol(http.server.connections): ConnectionsList {},\n    Symbol(http.server.connectionsCheckingInterval): Timeout {\n      _idleTimeout: 30000,\n      _idlePrev: [TimersList],\n      _idleNext: [Timeout],\n      _idleStart: 955,\n      _onTimeout: [Function: bound checkConnections],\n      _timerArgs: undefined,\n      _repeat: 30000,\n      _destroyed: false,\n      Symbol(refed): false,\n      Symbol(kHasPrimitive): false,\n      Symbol(asyncId): 165,\n      Symbol(triggerId): 164,\n      Symbol(kAsyncContextFrame): undefined\n    }\n  },\n  parser: null,\n  on: [Function: socketListenerWrap],\n  addListener: [Function: socketListenerWrap],\n  prependListener: [Function: socketListenerWrap],\n  setEncoding: [Function: socketSetEncoding],\n  _paused: false,\n  Symbol(async_id_symbol): 173,\n  Symbol(kHandle): TCP {\n    reading: true,\n    onconnection: null,\n    _consumed: true,\n    Symbol(owner_symbol): [Circular *2]\n  },\n  Symbol(lastWriteQueueSize): 0,\n  Symbol(timeout): null,\n  Symbol(kBuffer): null,\n  Symbol(kBufferCb): null,\n  Symbol(kBufferGen): null,\n  Symbol(shapeMode): true,\n  Symbol(kCapture): false,\n  Symbol(kSetNoDelay): true,\n  Symbol(kSetKeepAlive): false,\n  Symbol(kSetKeepAliveInitialDelay): 0,\n  Symbol(kBytesRead): 0,\n  Symbol(kBytesWritten): 0\n}, <Buffer >\n    at Server.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:495:12)\n    at Server.emit (node:events:507:28)\n    at onParserExecuteCommon (node:_http_server:950:14)\n    at onParserExecute (node:_http_server:854:3) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v25.0.0-pre"},"time":1508.022,"fullname":"client-proxy/test-https-proxy-request","closingTestPoint":false}}]}