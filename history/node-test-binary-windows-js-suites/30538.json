{"failedTests":[{"testName":"parallel/test-runner-run-watch","timestamp":1727306017045,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #30538","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/30538/","buildNumber":30538,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"23.0.0","commitHash":"126b6869f9d9ee1eb14261969af3023f61b22683","callStack":[{"upstreamBuild":66231,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":74817,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":62772,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"54933"}],"tap":{"ok":false,"name":"parallel/test-runner-run-watch","id":939,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":1,"stack":"▶ test runner watch mode\n  ✔ should run tests repeatedly (1696.8169ms)\n  ✔ should run tests with dependency repeatedly (1735.0516ms)\n  ✔ should run tests with ESM dependency (1679.8124ms)\n  ✔ should support running tests without a file (1721.9917ms)\n  ✔ should support a watched test file rename (1703.7257ms)\n  ✔ should not throw when deleting a watched test file (2353.659ms)\n  ✔ should run tests with dependency repeatedly in a different cwd (1742.9841ms)\n  ✖ should handle renames in a different cwd (2392.1463ms)\n    Error: ENOENT: no such file or directory, rename 'C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.687\\test.js' -> 'C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.687\\test-renamed-test.js'\n        at renameSync (node:fs:1020:11)\n        at Timeout._onTimeout (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run-watch.mjs:94:40)\n        at listOnTimeout (node:internal/timers:614:17)\n        at process.processTimers (node:internal/timers:549:7) {\n      errno: -4058,\n      code: 'ENOENT',\n      syscall: 'rename',\n      path: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.687\\\\test.js',\n      dest: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.687\\\\test-renamed-test.js'\n    }\n\n  ✔ should run new tests when a new file is created in the watched directory (2072.977ms)\n✖ test runner watch mode (17108.8077ms)\nℹ tests 9\nℹ suites 1\nℹ pass 8\nℹ fail 1\nℹ cancelled 0\nℹ skipped 0\nℹ todo 0\nℹ duration_ms 17121.9375\n\n✖ failing tests:\n\ntest at test\\parallel\\test-runner-run-watch.mjs:215:3\n✖ should handle renames in a different cwd (2392.1463ms)\n  Error: ENOENT: no such file or directory, rename 'C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.687\\test.js' -> 'C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.687\\test-renamed-test.js'\n      at renameSync (node:fs:1020:11)\n      at Timeout._onTimeout (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run-watch.mjs:94:40)\n      at listOnTimeout (node:internal/timers:614:17)\n      at process.processTimers (node:internal/timers:549:7) {\n    errno: -4058,\n    code: 'ENOENT',\n    syscall: 'rename',\n    path: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.687\\\\test.js',\n    dest: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.687\\\\test-renamed-test.js'\n  }"},"time":17434.093,"fullname":"parallel/test-runner-run-watch","closingTestPoint":false}},{"testName":"es-module/test-esm-loader-entry-url","timestamp":1727306017045,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win10-COMPILED_BY-vs2022 #30538","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022/30538/","buildNumber":30538,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"23.0.0","commitHash":"126b6869f9d9ee1eb14261969af3023f61b22683","callStack":[{"upstreamBuild":66231,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":74817,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":62772,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"54933"}],"tap":{"ok":false,"name":"es-module/test-esm-loader-entry-url","id":40,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"▶ --entry-url\n  ✖ should reject loading a path that contains % (256.9585ms)\n    AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n    \n    '(node:4312) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n      '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n      'node:internal/modules/esm/load:227\\r\\n' +\n      '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n      '          ^\\r\\n' +\n      '\\r\\n' +\n      \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n      '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n      '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n      '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n      '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n      '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n      '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n      '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n      '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n      '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n      \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n      '}\\r\\n' +\n      '\\r\\n' +\n      'Node.js v23.0.0-pre\\r\\n'\n    \n        at assertSpawnedProcess (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n        at async Test.run (node:internal/test_runner/test:931:9)\n        at async Promise.all (index 0)\n        at async Suite.run (node:internal/test_runner/test:1301:7)\n        at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n      generatedMessage: true,\n      code: 'ERR_ASSERTION',\n      actual: \"(node:4312) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n      expected: /ERR_MODULE_NOT_FOUND/,\n      operator: 'match'\n    }\n\n  ✔ should support loading properly encoded Unix path (269.2091ms)\n  ✔ should support loading absolute URLs (260.7474ms)\n  ✔ should support loading relative URLs (275.337ms)\n  ✔ should support loading `data:` URLs (265.864ms)\n  ✔ should support loading TypeScript URLs (602.9159ms)\n✖ --entry-url (652.8635ms)\nℹ tests 6\nℹ suites 1\nℹ pass 5\nℹ fail 1\nℹ cancelled 0\nℹ skipped 0\nℹ todo 0\nℹ duration_ms 660.0924\n\n✖ failing tests:\n\ntest at test\\es-module\\test-esm-loader-entry-url.mjs:27:3\n✖ should reject loading a path that contains % (256.9585ms)\n  AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n  \n  '(node:4312) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n    '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n    'node:internal/modules/esm/load:227\\r\\n' +\n    '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n    '          ^\\r\\n' +\n    '\\r\\n' +\n    \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n    '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n    '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n    '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n    '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n    '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n    '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n    '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n    '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n    \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n    '}\\r\\n' +\n    '\\r\\n' +\n    'Node.js v23.0.0-pre\\r\\n'\n  \n      at assertSpawnedProcess (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n      at async Test.run (node:internal/test_runner/test:931:9)\n      at async Promise.all (index 0)\n      at async Suite.run (node:internal/test_runner/test:1301:7)\n      at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n    generatedMessage: true,\n    code: 'ERR_ASSERTION',\n    actual: \"(node:4312) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n    expected: /ERR_MODULE_NOT_FOUND/,\n    operator: 'match'\n  }"},"time":1119.085,"fullname":"es-module/test-esm-loader-entry-url","closingTestPoint":false}},{"testName":"es-module/test-esm-loader-entry-url","timestamp":1727306017045,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #30538","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/30538/","buildNumber":30538,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"23.0.0","commitHash":"126b6869f9d9ee1eb14261969af3023f61b22683","callStack":[{"upstreamBuild":66231,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":74817,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":62772,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"54933"}],"tap":{"ok":false,"name":"es-module/test-esm-loader-entry-url","id":40,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"▶ --entry-url\n  ✖ should reject loading a path that contains % (454.5031ms)\n    AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n    \n    '(node:4820) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n      '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n      'node:internal/modules/esm/load:227\\r\\n' +\n      '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n      '          ^\\r\\n' +\n      '\\r\\n' +\n      \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n      '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n      '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n      '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n      '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n      '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n      '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n      '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n      '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n      '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n      \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n      '}\\r\\n' +\n      '\\r\\n' +\n      'Node.js v23.0.0-pre\\r\\n'\n    \n        at assertSpawnedProcess (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n        at async Test.run (node:internal/test_runner/test:931:9)\n        at async Promise.all (index 0)\n        at async Suite.run (node:internal/test_runner/test:1301:7)\n        at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n      generatedMessage: true,\n      code: 'ERR_ASSERTION',\n      actual: \"(node:4820) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n      expected: /ERR_MODULE_NOT_FOUND/,\n      operator: 'match'\n    }\n\n  ✔ should support loading properly encoded Unix path (452.0947ms)\n  ✔ should support loading absolute URLs (531.5255ms)\n  ✔ should support loading relative URLs (566.3953ms)\n  ✔ should support loading `data:` URLs (314.426ms)\n  ✔ should support loading TypeScript URLs (1165.7688ms)\n✖ --entry-url (1238.8191ms)\nℹ tests 6\nℹ suites 1\nℹ pass 5\nℹ fail 1\nℹ cancelled 0\nℹ skipped 0\nℹ todo 0\nℹ duration_ms 1250.6428\n\n✖ failing tests:\n\ntest at test\\es-module\\test-esm-loader-entry-url.mjs:27:3\n✖ should reject loading a path that contains % (454.5031ms)\n  AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n  \n  '(node:4820) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n    '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n    'node:internal/modules/esm/load:227\\r\\n' +\n    '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n    '          ^\\r\\n' +\n    '\\r\\n' +\n    \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n    '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n    '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n    '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n    '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n    '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n    '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n    '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n    '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n    \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n    '}\\r\\n' +\n    '\\r\\n' +\n    'Node.js v23.0.0-pre\\r\\n'\n  \n      at assertSpawnedProcess (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n      at async Test.run (node:internal/test_runner/test:931:9)\n      at async Promise.all (index 0)\n      at async Suite.run (node:internal/test_runner/test:1301:7)\n      at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n    generatedMessage: true,\n    code: 'ERR_ASSERTION',\n    actual: \"(node:4820) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n    expected: /ERR_MODULE_NOT_FOUND/,\n    operator: 'match'\n  }"},"time":1846.01,"fullname":"es-module/test-esm-loader-entry-url","closingTestPoint":false}},{"testName":"es-module/test-esm-loader-entry-url","timestamp":1727306017045,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-COMPILED_BY-vs2022 #30538","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022/30538/","buildNumber":30538,"builtOn":"test-azure_msft-win11_vs2022-x64-4","nodeVersion":"23.0.0","commitHash":"126b6869f9d9ee1eb14261969af3023f61b22683","callStack":[{"upstreamBuild":66231,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":74817,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":62772,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"54933"}],"tap":{"ok":false,"name":"es-module/test-esm-loader-entry-url","id":40,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"▶ --entry-url\n  ✖ should reject loading a path that contains % (172.7574ms)\n    AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n    \n    '(node:7584) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n      '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n      'node:internal/modules/esm/load:227\\r\\n' +\n      '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n      '          ^\\r\\n' +\n      '\\r\\n' +\n      \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n      '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n      '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n      '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n      '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n      '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n      '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n      '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n      '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n      '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n      \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n      '}\\r\\n' +\n      '\\r\\n' +\n      'Node.js v23.0.0-pre\\r\\n'\n    \n        at assertSpawnedProcess (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n        at async Test.run (node:internal/test_runner/test:931:9)\n        at async Promise.all (index 0)\n        at async Suite.run (node:internal/test_runner/test:1301:7)\n        at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n      generatedMessage: true,\n      code: 'ERR_ASSERTION',\n      actual: \"(node:7584) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n      expected: /ERR_MODULE_NOT_FOUND/,\n      operator: 'match'\n    }\n\n  ✔ should support loading properly encoded Unix path (257.2389ms)\n  ✔ should support loading absolute URLs (237.0179ms)\n  ✔ should support loading relative URLs (231.1062ms)\n  ✔ should support loading `data:` URLs (197.7864ms)\n  ✔ should support loading TypeScript URLs (551.4151ms)\n✖ --entry-url (585.245ms)\nℹ tests 6\nℹ suites 1\nℹ pass 5\nℹ fail 1\nℹ cancelled 0\nℹ skipped 0\nℹ todo 0\nℹ duration_ms 591.4144\n\n✖ failing tests:\n\ntest at test\\es-module\\test-esm-loader-entry-url.mjs:27:3\n✖ should reject loading a path that contains % (172.7574ms)\n  AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n  \n  '(node:7584) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n    '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n    'node:internal/modules/esm/load:227\\r\\n' +\n    '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n    '          ^\\r\\n' +\n    '\\r\\n' +\n    \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n    '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n    '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n    '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n    '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n    '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n    '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n    '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n    '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n    \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n    '}\\r\\n' +\n    '\\r\\n' +\n    'Node.js v23.0.0-pre\\r\\n'\n  \n      at assertSpawnedProcess (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async TestContext.<anonymous> (file:///c:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n      at async Test.run (node:internal/test_runner/test:931:9)\n      at async Promise.all (index 0)\n      at async Suite.run (node:internal/test_runner/test:1301:7)\n      at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n    generatedMessage: true,\n    code: 'ERR_ASSERTION',\n    actual: \"(node:7584) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n    expected: /ERR_MODULE_NOT_FOUND/,\n    operator: 'match'\n  }"},"time":1012.026,"fullname":"es-module/test-esm-loader-entry-url","closingTestPoint":false}},{"testName":"es-module/test-esm-loader-entry-url","timestamp":1727306017045,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2022-COMPILED_BY-vs2022 #30538","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/30538/","buildNumber":30538,"builtOn":"test-rackspace-win2022_vs2022-x64-4","nodeVersion":"23.0.0","commitHash":"126b6869f9d9ee1eb14261969af3023f61b22683","callStack":[{"upstreamBuild":66231,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":74817,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":62772,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"54933"}],"tap":{"ok":false,"name":"es-module/test-esm-loader-entry-url","id":39,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"▶ --entry-url\n  ✖ should reject loading a path that contains % (401.2574ms)\n    AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n    \n    '(node:14996) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n      '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n      'node:internal/modules/esm/load:227\\r\\n' +\n      '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n      '          ^\\r\\n' +\n      '\\r\\n' +\n      \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n      '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n      '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n      '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n      '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n      '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n      '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n      '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n      '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n      '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n      \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n      '}\\r\\n' +\n      '\\r\\n' +\n      'Node.js v23.0.0-pre\\r\\n'\n    \n        at assertSpawnedProcess (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n        at async Test.run (node:internal/test_runner/test:931:9)\n        at async Promise.all (index 0)\n        at async Suite.run (node:internal/test_runner/test:1301:7)\n        at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n      generatedMessage: true,\n      code: 'ERR_ASSERTION',\n      actual: \"(node:14996) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n      expected: /ERR_MODULE_NOT_FOUND/,\n      operator: 'match'\n    }\n\n  ✔ should support loading properly encoded Unix path (503.3595ms)\n  ✔ should support loading absolute URLs (469.3255ms)\n  ✔ should support loading relative URLs (319.7611ms)\n  ✔ should support loading `data:` URLs (444.0323ms)\n  ✔ should support loading TypeScript URLs (966.3259ms)\n✖ --entry-url (1035.6152ms)\nℹ tests 6\nℹ suites 1\nℹ pass 5\nℹ fail 1\nℹ cancelled 0\nℹ skipped 0\nℹ todo 0\nℹ duration_ms 1048.7532\n\n✖ failing tests:\n\ntest at test\\es-module\\test-esm-loader-entry-url.mjs:27:3\n✖ should reject loading a path that contains % (401.2574ms)\n  AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n  \n  '(node:14996) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n    '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n    'node:internal/modules/esm/load:227\\r\\n' +\n    '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n    '          ^\\r\\n' +\n    '\\r\\n' +\n    \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n\" +\n    '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n    '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n    '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n    '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n    '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n    '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n    '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n    '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n    \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n    '}\\r\\n' +\n    '\\r\\n' +\n    'Node.js v23.0.0-pre\\r\\n'\n  \n      at assertSpawnedProcess (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n      at async Test.run (node:internal/test_runner/test:931:9)\n      at async Promise.all (index 0)\n      at async Suite.run (node:internal/test_runner/test:1301:7)\n      at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n    generatedMessage: true,\n    code: 'ERR_ASSERTION',\n    actual: \"(node:14996) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'c:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n    expected: /ERR_MODULE_NOT_FOUND/,\n    operator: 'match'\n  }"},"time":1640.998,"fullname":"es-module/test-esm-loader-entry-url","closingTestPoint":false}},{"testName":"es-module/test-esm-loader-entry-url","timestamp":1727306017045,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-arm64-COMPILED_BY-vs2022-arm64 #30538","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/30538/","buildNumber":30538,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"23.0.0","commitHash":"126b6869f9d9ee1eb14261969af3023f61b22683","callStack":[{"upstreamBuild":66231,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":74817,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":62772,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"54933"}],"tap":{"ok":false,"name":"es-module/test-esm-loader-entry-url","id":40,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"▶ --entry-url\n  ✖ should reject loading a path that contains % (310.9806ms)\n    AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n    \n    '(node:6308) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n      '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n      'node:internal/modules/esm/load:227\\r\\n' +\n      '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n      '          ^\\r\\n' +\n      '\\r\\n' +\n      \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'd:'\\r\\n\" +\n      '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n      '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n      '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n      '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n      '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n      '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n      '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n      '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n      '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n      \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n      '}\\r\\n' +\n      '\\r\\n' +\n      'Node.js v23.0.0-pre\\r\\n'\n    \n        at assertSpawnedProcess (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n        at async Test.run (node:internal/test_runner/test:931:9)\n        at async Promise.all (index 0)\n        at async Suite.run (node:internal/test_runner/test:1301:7)\n        at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n      generatedMessage: true,\n      code: 'ERR_ASSERTION',\n      actual: \"(node:6308) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'd:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n      expected: /ERR_MODULE_NOT_FOUND/,\n      operator: 'match'\n    }\n\n  ✔ should support loading properly encoded Unix path (369.0467ms)\n  ✔ should support loading absolute URLs (270.8698ms)\n  ✔ should support loading relative URLs (307.6346ms)\n  ✔ should support loading `data:` URLs (265.4397ms)\n  ✔ should support loading TypeScript URLs (779.5462ms)\n✖ --entry-url (830.6577ms)\nℹ tests 6\nℹ suites 1\nℹ pass 5\nℹ fail 1\nℹ cancelled 0\nℹ skipped 0\nℹ todo 0\nℹ duration_ms 840.1171\n\n✖ failing tests:\n\ntest at test\\es-module\\test-esm-loader-entry-url.mjs:27:3\n✖ should reject loading a path that contains % (310.9806ms)\n  AssertionError [ERR_ASSERTION]: The input did not match the regular expression /ERR_MODULE_NOT_FOUND/. Input:\n  \n  '(node:6308) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n' +\n    '(Use `node --trace-warnings ...` to show where the warning was created)\\n' +\n    'node:internal/modules/esm/load:227\\r\\n' +\n    '    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n' +\n    '          ^\\r\\n' +\n    '\\r\\n' +\n    \"Error [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'd:'\\r\\n\" +\n    '    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n' +\n    '    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n' +\n    '    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n' +\n    '    at ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:43)\\r\\n' +\n    '    at #createModuleJob (node:internal/modules/esm/loader:503:36)\\r\\n' +\n    '    at #getJobFromResolveResult (node:internal/modules/esm/loader:274:34)\\r\\n' +\n    '    at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:242:41)\\r\\n' +\n    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\r\\n' +\n    '    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:542:25) {\\r\\n' +\n    \"  code: 'ERR_UNSUPPORTED_ESM_URL_SCHEME'\\r\\n\" +\n    '}\\r\\n' +\n    '\\r\\n' +\n    'Node.js v23.0.0-pre\\r\\n'\n  \n      at assertSpawnedProcess (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:12:12)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/es-module/test-esm-loader-entry-url.mjs:28:5)\n      at async Test.run (node:internal/test_runner/test:931:9)\n      at async Promise.all (index 0)\n      at async Suite.run (node:internal/test_runner/test:1301:7)\n      at async startSubtestAfterBootstrap (node:internal/test_runner/harness:296:3) {\n    generatedMessage: true,\n    code: 'ERR_ASSERTION',\n    actual: \"(node:6308) ExperimentalWarning: --entry-url is an experimental feature and might change at any time\\n(Use `node --trace-warnings ...` to show where the warning was created)\\nnode:internal/modules/esm/load:227\\r\\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed, schemes);\\r\\n          ^\\r\\n\\r\\nError [ERR_UNSUPPORTED_ESM_URL_SCHEME]: Only URLs with a scheme in: file, data, and node are supported by the default ESM loader. On Windows, absolute paths must be valid file:// URLs. Received protocol 'd:'\\r\\n    at throwIfUnsupportedURLScheme (node:internal/modules/esm/load:227:11)\\r\\n    at defaultLoad (node:internal/modules/esm/load:109:3)\\r\\n    at ModuleLoader.load (node:internal/modules/esm/loader:666:12)\\r\\n...\",\n    expected: /ERR_MODULE_NOT_FOUND/,\n    operator: 'match'\n  }"},"time":1490.003,"fullname":"es-module/test-esm-loader-entry-url","closingTestPoint":false}}]}