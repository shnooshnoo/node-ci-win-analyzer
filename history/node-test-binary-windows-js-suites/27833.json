{"failedTests":[{"testName":"parallel/test-cli-permission-deny-fs","timestamp":1716206057900,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2019 #27833","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2019/27833/","buildNumber":27833,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"20.13.2","commitHash":"be587e3ae30e311aa770f4420abf01aeb7d336eb","callStack":[{"upstreamBuild":63096,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70935,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":200,"upstreamProject":"node-daily-v20.x-staging","upstreamUrl":"job/node-daily-v20.x-staging/"}],"tap":{"ok":false,"name":"parallel/test-cli-permission-deny-fs","id":120,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'' !== 'false'\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-cli-permission-deny-fs.js:43:10)\n    at Module._compile (node:internal/modules/cjs/loader:1358:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1416:10)\n    at Module.load (node:internal/modules/cjs/loader:1208:32)\n    at Module._load (node:internal/modules/cjs/loader:1024:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:174:12)\n    at node:internal/main/run_main_module:28:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'false',\n  operator: 'strictEqual'\n}\n\nNode.js v20.13.2-pre"},"time":995.004,"fullname":"parallel/test-cli-permission-deny-fs","closingTestPoint":false}},{"testName":"parallel/test-cli-node-options","timestamp":1716206057900,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2019 #27833","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2019/27833/","buildNumber":27833,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"20.13.2","commitHash":"be587e3ae30e311aa770f4420abf01aeb7d336eb","callStack":[{"upstreamBuild":63096,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70935,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":200,"upstreamProject":"node-daily-v20.x-staging","upstreamUrl":"job/node-daily-v20.x-staging/"}],"tap":{"ok":false,"name":"parallel/test-cli-node-options","id":123,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":3221226505,"stack":"Can't clean tmpdir: C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.124\nFiles blocking: []"},"time":1375.012,"fullname":"parallel/test-cli-node-options","closingTestPoint":false}},{"testName":"wpt/test-streams","timestamp":1716206057900,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #27833","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/27833/","buildNumber":27833,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"20.13.2","commitHash":"be587e3ae30e311aa770f4420abf01aeb7d336eb","callStack":[{"upstreamBuild":63096,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70935,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":200,"upstreamProject":"node-daily-v20.x-staging","upstreamUrl":"job/node-daily-v20.x-staging/"}],"tap":{"ok":false,"name":"wpt/test-streams","id":981,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":3221226356,"stack":"[SKIPPED] idlharness-shadowrealm.window.js: ShadowRealm support is not enabled\n[SKIPPED] queuing-strategies-size-function-per-global.window.js: Browser-specific test\n[SKIPPED] readable-streams\\cross-realm-crash.window.js: Browser-specific test\n[SKIPPED] readable-streams\\owning-type-video-frame.any.js: Browser-specific test\n[SKIPPED] readable-streams\\read-task-handling.window.js: Browser-specific test\n[SKIPPED] transferable\\deserialize-error.window.js: Browser-specific test\n[SKIPPED] transferable\\transfer-with-messageport.window.js: Browser-specific test\n[SKIPPED] transform-streams\\invalid-realm.tentative.window.js: Browser-specific test\n[PASS] a signal argument 'null' should cause pipeTo() to reject\n[PASS] a signal argument 'AbortSignal' should cause pipeTo() to reject\n[PASS] a signal argument 'true' should cause pipeTo() to reject\n[PASS] a signal argument '-1' should cause pipeTo() to reject\n[PASS] a signal argument '[object AbortSignal]' should cause pipeTo() to reject\n[PASS] an aborted signal should cause the writable stream to reject with an AbortError\n[PASS] (reason: 'null') all the error objects should be the same object\n[PASS] (reason: 'undefined') all the error objects should be the same object\n[PASS] (reason: 'error1: error1') all the error objects should be the same object\n[PASS] preventCancel should prevent canceling the readable\n[PASS] preventAbort should prevent aborting the readable\n[PASS] preventCancel and preventAbort should prevent canceling the readable and aborting the readable\n[PASS] (reason: 'null') abort should prevent further reads\n[PASS] (reason: 'undefined') abort should prevent further reads\n[PASS] (reason: 'error1: error1') abort should prevent further reads\n[PASS] (reason: 'null') all pending writes should complete on abort\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; rejected cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = a (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 1 (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = Symbol() (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = [object Object] (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; rejected close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = undefined (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = null (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = false (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = 0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = -0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = NaN (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose =  (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = true (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = a (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = 1 (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = Symbol() (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = [object Object] (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true, preventCancel = true\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; rejected close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose = true\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: starts errored; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = a (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 1 (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = Symbol() (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = [object Object] (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write, preventCancel = true; preventAbort = true\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel = true\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = undefined (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = null (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = -0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = NaN (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort =  (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = a (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 1 (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = Symbol() (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = [object Object] (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true, preventClose = true\n[PASS] (reason: 'undefined') all pending writes should complete on abort\n[PASS] (reason: 'error1: error1') all pending writes should complete on abort\n[PASS] a rejection from underlyingSource.cancel() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be preferred to one from underlyingSource.cancel()\n[PASS] abort signal takes priority over closed readable\n[PASS] abort signal takes priority over errored readable\n[PASS] abort signal takes priority over closed writable\n[PASS] abort signal takes priority over errored writable\n[PASS] abort should do nothing after the readable is closed\n[PASS] abort should do nothing after the readable is errored\n[PASS] abort should do nothing after the readable is errored, even with pending writes\n[PASS] abort should do nothing after the writable is errored\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = true\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; fulfilled abort promise\n[PASS] pipeTo on a teed readable byte stream should only be aborted when both branches are aborted\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = true\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel omitted (but cancel is never called)\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel = true\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose = true\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; fulfilled cancel promise\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; rejected cancel promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; preventClose = true\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks, but then does\n[PASS] Piping from an empty ReadableStream into a WritableStream that does not desire chunks, but then the readable stream becomes non-empty and the writable stream starts desiring chunks\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel = true\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write\n[PASS] Piping from a ReadableStream to a WritableStream that desires more chunks before finishing with previous ones\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; fulfilled abort promise\n[PASS] idl_test validation\n[PASS] Errors must be propagated backward: erroring via the controller errors once pending write completes\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write; preventClose = true\n[PASS] Closing must be propagated forward: erroring the writable while flushing pending writes should error pipeTo\n[EXPECTED_FAILURE][FAIL] enqueue() must not synchronously call write algorithm\nassert_false: write algorithm must not run synchronously expected false got true\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\piping\\general-addition.any.js:14:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'piping\\general-addition.any.js'"},"time":2287.987,"fullname":"wpt/test-streams","closingTestPoint":false}},{"testName":"parallel/test-cli-bad-options","timestamp":1716206057900,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #27833","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/27833/","buildNumber":27833,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"20.13.2","commitHash":"be587e3ae30e311aa770f4420abf01aeb7d336eb","callStack":[{"upstreamBuild":63096,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70935,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":200,"upstreamProject":"node-daily-v20.x-staging","upstreamUrl":"job/node-daily-v20.x-staging/"}],"tap":{"ok":false,"name":"parallel/test-cli-bad-options","id":121,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n134 !== 1\n\n    at missingOption (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-cli-bad-options.js:22:10)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-cli-bad-options.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1358:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1416:10)\n    at Module.load (node:internal/modules/cjs/loader:1208:32)\n    at Module._load (node:internal/modules/cjs/loader:1024:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:174:12)\n    at node:internal/main/run_main_module:28:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 134,\n  expected: 1,\n  operator: 'strictEqual'\n}\n\nNode.js v20.13.2-pre"},"time":1510.009,"fullname":"parallel/test-cli-bad-options","closingTestPoint":false}},{"testName":"parallel/test-cli-node-options","timestamp":1716206057900,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #27833","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/27833/","buildNumber":27833,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"20.13.2","commitHash":"be587e3ae30e311aa770f4420abf01aeb7d336eb","callStack":[{"upstreamBuild":63096,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70935,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":200,"upstreamProject":"node-daily-v20.x-staging","upstreamUrl":"job/node-daily-v20.x-staging/"}],"tap":{"ok":false,"name":"parallel/test-cli-node-options","id":122,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":3221226505,"stack":"\n<--- Last few GCs --->\n\n\n<--- JS stacktrace --->\n\nFATAL ERROR: Committing semi space failed. Allocation failed - JavaScript heap out of memory\n----- Native stack trace -----\n\nCan't clean tmpdir: C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.124\nFiles blocking: []\n\nnode:internal/child_process:421\n    throw new ErrnoException(err, 'spawn');\n    ^\n\nError: spawn UNKNOWN\n    at ChildProcess.spawn (node:internal/child_process:421:11)\n    at spawn (node:child_process:761:9)\n    at execFile (node:child_process:351:17)\n    at expect (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-cli-node-options.js:119:3)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-cli-node-options.js:75:1)\n    at Module._compile (node:internal/modules/cjs/loader:1358:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1416:10)\n    at Module.load (node:internal/modules/cjs/loader:1208:32)\n    at Module._load (node:internal/modules/cjs/loader:1024:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:174:12) {\n  errno: -4094,\n  code: 'UNKNOWN',\n  syscall: 'spawn'\n}\n\nNode.js v20.13.2-pre"},"time":1421.982,"fullname":"parallel/test-cli-node-options","closingTestPoint":false}},{"testName":"parallel/test-child-process-spawn-windows-batch-file","timestamp":1716206057900,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #27833","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/27833/","buildNumber":27833,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"20.13.2","commitHash":"be587e3ae30e311aa770f4420abf01aeb7d336eb","callStack":[{"upstreamBuild":63096,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":70935,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":200,"upstreamProject":"node-daily-v20.x-staging","upstreamUrl":"job/node-daily-v20.x-staging/"}],"tap":{"ok":false,"name":"parallel/test-child-process-spawn-windows-batch-file","id":126,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n1 !== 0\n\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-child-process-spawn-windows-batch-file.js:35:10)\n    at Module._compile (node:internal/modules/cjs/loader:1358:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1416:10)\n    at Module.load (node:internal/modules/cjs/loader:1208:32)\n    at Module._load (node:internal/modules/cjs/loader:1024:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:174:12)\n    at node:internal/main/run_main_module:28:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v20.13.2-pre"},"time":3332.008,"fullname":"parallel/test-child-process-spawn-windows-batch-file","closingTestPoint":false}}]}