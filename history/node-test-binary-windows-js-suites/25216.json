{"failedTests":[{"testName":"parallel/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob","id":80,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:352:42\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:357:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":555.03,"fullname":"parallel/test-blob","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestreambyob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestreambyob","id":847,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:57:29\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:62:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":308.016,"fullname":"parallel/test-whatwg-readablebytestreambyob","closingTestPoint":false}},{"testName":"parallel/test-blob-file-backed","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob-file-backed","id":88,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Can't clean tmpdir: C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.78\nFiles blocking: [ 'test-file-backed-blob.txt', 'test-file-backed-blob2.txt' ]\n\nnode:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n\nNode.js v22.0.0-pre"},"time":1152.018,"fullname":"parallel/test-blob-file-backed","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream","id":846,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream.js:245:14)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":276.017,"fullname":"parallel/test-whatwg-readablebytestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-webstreams-transfer","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-webstreams-transfer","id":860,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:133:18)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:129:20)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n\nNode.js v22.0.0-pre"},"time":383.032,"fullname":"parallel/test-whatwg-webstreams-transfer","closingTestPoint":false}},{"testName":"wpt/test-structured-clone","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-structured-clone","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[PASS] primitive undefined\n[PASS] primitive null\n[PASS] primitive true\n[PASS] primitive false\n[PASS] primitive string, empty string\n[PASS] primitive string, lone high surrogate\n[PASS] primitive string, lone low surrogate\n[PASS] primitive string, NUL\n[PASS] primitive string, astral character\n[PASS] primitive number, 0.2\n[PASS] primitive number, 0\n[PASS] primitive number, -0\n[PASS] primitive number, NaN\n[PASS] primitive number, Infinity\n[PASS] primitive number, -Infinity\n[PASS] primitive number, 9007199254740992\n[PASS] primitive number, -9007199254740992\n[PASS] primitive number, 9007199254740994\n[PASS] primitive number, -9007199254740994\n[PASS] primitive BigInt, 0n\n[PASS] primitive BigInt, -0n\n[PASS] primitive BigInt, -9007199254740994000n\n[PASS] primitive BigInt, -9007199254740994000900719925474099400090071992547409940009007199254740994000n\n[PASS] Array primitives\n[PASS] Object primitives\n[PASS] Boolean true\n[PASS] Boolean false\n[PASS] Array Boolean objects\n[PASS] Object Boolean objects\n[PASS] String empty string\n[PASS] String lone high surrogate\n[PASS] String lone low surrogate\n[PASS] String NUL\n[PASS] String astral character\n[PASS] Array String objects\n[PASS] Object String objects\n[PASS] Number 0.2\n[PASS] Number 0\n[PASS] Number -0\n[PASS] Number NaN\n[PASS] Number Infinity\n[PASS] Number -Infinity\n[PASS] Number 9007199254740992\n[PASS] Number -9007199254740992\n[PASS] Number 9007199254740994\n[PASS] Number -9007199254740994\n[PASS] BigInt -9007199254740994n\n[PASS] Array Number objects\n[PASS] Object Number objects\n[PASS] Date 0\n[PASS] Date -0\n[PASS] Date -8.64e15\n[PASS] Date 8.64e15\n[PASS] Array Date objects\n[PASS] Object Date objects\n[PASS] RegExp flags and lastIndex\n[PASS] RegExp sticky flag\n[PASS] RegExp unicode flag\n[PASS] RegExp empty\n[PASS] RegExp slash\n[PASS] RegExp new line\n[PASS] Array RegExp object, RegExp flags and lastIndex\n[PASS] Array RegExp object, RegExp sticky flag\n[PASS] Array RegExp object, RegExp unicode flag\n[PASS] Array RegExp object, RegExp empty\n[PASS] Array RegExp object, RegExp slash\n[PASS] Array RegExp object, RegExp new line\n[PASS] Object RegExp object, RegExp flags and lastIndex\n[PASS] Object RegExp object, RegExp sticky flag\n[PASS] Object RegExp object, RegExp unicode flag\n[PASS] Object RegExp object, RegExp empty\n[PASS] Object RegExp object, RegExp slash\n[PASS] Object RegExp object, RegExp new line\n[UNEXPECTED_FAILURE][FAIL] Blob basic\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired high surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired low surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob paired surrogates (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Blob empty\n[UNEXPECTED_FAILURE][FAIL] Blob NUL\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array Blob object, Blob basic\n[PASS] Array Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Array Blob object, Blob empty\n[PASS] Array Blob object, Blob NUL\n[PASS] Array Blob object, two Blobs\n[PASS] Object Blob object, Blob basic\n[PASS] Object Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Object Blob object, Blob empty\n[PASS] Object Blob object, Blob NUL\n[EXPECTED_FAILURE][FAIL] File basic\nassert_true: instanceof File expected true got false\n    at compare_File (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:352:3)\n    at Object.f (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:19:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests-harness.js:37:9)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array sparse\n[PASS] Array with non-index property\n[PASS] Object with index property and length\n[PASS] Array with circular reference\n[PASS] Object with circular reference\n[PASS] Array with identical property values\n[PASS] Object with identical property values\n[PASS] Object with property on prototype\n[PASS] Object with non-enumerable property\n[PASS] Object with non-writable property\n[PASS] Object with non-configurable property\n[PASS] ObjectPrototype must lose its exotic-ness when cloned\n[PASS] ArrayBuffer\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n    at readNext (node:internal/blob:335:18)\n    at Object.pull (node:internal/blob:382:9)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n\n{\n  \"structured-clone.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob basic\",\n        \"Blob unpaired high surrogate (invalid utf-8)\",\n        \"Blob unpaired low surrogate (invalid utf-8)\",\n        \"Blob paired surrogates (invalid utf-8)\",\n        \"Blob NUL\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ],\n      \"expected\": [\n        \"File basic\"\n      ]\n    }\n  }\n}\n\nRan 1/1 tests, 0 skipped, -1 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\html\\webappapis\\structured-clone.json for these files:\nstructured-clone.any.js\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":463.022,"fullname":"wpt/test-structured-clone","closingTestPoint":false}},{"testName":"parallel/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2016_vs2015-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob","id":82,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:352:42\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:357:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":396.01,"fullname":"parallel/test-blob","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestreambyob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2016_vs2015-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestreambyob","id":847,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:57:29\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:62:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":224.993,"fullname":"parallel/test-whatwg-readablebytestreambyob","closingTestPoint":false}},{"testName":"parallel/test-blob-file-backed","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob-file-backed","id":89,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Can't clean tmpdir: c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.78\nFiles blocking: [ 'test-file-backed-blob.txt', 'test-file-backed-blob2.txt' ]\n\nnode:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n\nNode.js v22.0.0-pre"},"time":910.991,"fullname":"parallel/test-blob-file-backed","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream","id":847,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream.js:245:14)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":134.998,"fullname":"parallel/test-whatwg-readablebytestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-webstreams-transfer","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-webstreams-transfer","id":858,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:133:18)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:129:20)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n\nNode.js v22.0.0-pre"},"time":135.997,"fullname":"parallel/test-whatwg-webstreams-transfer","closingTestPoint":false}},{"testName":"wpt/test-structured-clone","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-structured-clone","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[PASS] primitive undefined\n[PASS] primitive null\n[PASS] primitive true\n[PASS] primitive false\n[PASS] primitive string, empty string\n[PASS] primitive string, lone high surrogate\n[PASS] primitive string, lone low surrogate\n[PASS] primitive string, NUL\n[PASS] primitive string, astral character\n[PASS] primitive number, 0.2\n[PASS] primitive number, 0\n[PASS] primitive number, -0\n[PASS] primitive number, NaN\n[PASS] primitive number, Infinity\n[PASS] primitive number, -Infinity\n[PASS] primitive number, 9007199254740992\n[PASS] primitive number, -9007199254740992\n[PASS] primitive number, 9007199254740994\n[PASS] primitive number, -9007199254740994\n[PASS] primitive BigInt, 0n\n[PASS] primitive BigInt, -0n\n[PASS] primitive BigInt, -9007199254740994000n\n[PASS] primitive BigInt, -9007199254740994000900719925474099400090071992547409940009007199254740994000n\n[PASS] Array primitives\n[PASS] Object primitives\n[PASS] Boolean true\n[PASS] Boolean false\n[PASS] Array Boolean objects\n[PASS] Object Boolean objects\n[PASS] String empty string\n[PASS] String lone high surrogate\n[PASS] String lone low surrogate\n[PASS] String NUL\n[PASS] String astral character\n[PASS] Array String objects\n[PASS] Object String objects\n[PASS] Number 0.2\n[PASS] Number 0\n[PASS] Number -0\n[PASS] Number NaN\n[PASS] Number Infinity\n[PASS] Number -Infinity\n[PASS] Number 9007199254740992\n[PASS] Number -9007199254740992\n[PASS] Number 9007199254740994\n[PASS] Number -9007199254740994\n[PASS] BigInt -9007199254740994n\n[PASS] Array Number objects\n[PASS] Object Number objects\n[PASS] Date 0\n[PASS] Date -0\n[PASS] Date -8.64e15\n[PASS] Date 8.64e15\n[PASS] Array Date objects\n[PASS] Object Date objects\n[PASS] RegExp flags and lastIndex\n[PASS] RegExp sticky flag\n[PASS] RegExp unicode flag\n[PASS] RegExp empty\n[PASS] RegExp slash\n[PASS] RegExp new line\n[PASS] Array RegExp object, RegExp flags and lastIndex\n[PASS] Array RegExp object, RegExp sticky flag\n[PASS] Array RegExp object, RegExp unicode flag\n[PASS] Array RegExp object, RegExp empty\n[PASS] Array RegExp object, RegExp slash\n[PASS] Array RegExp object, RegExp new line\n[PASS] Object RegExp object, RegExp flags and lastIndex\n[PASS] Object RegExp object, RegExp sticky flag\n[PASS] Object RegExp object, RegExp unicode flag\n[PASS] Object RegExp object, RegExp empty\n[PASS] Object RegExp object, RegExp slash\n[PASS] Object RegExp object, RegExp new line\n[UNEXPECTED_FAILURE][FAIL] Blob basic\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired high surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired low surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob paired surrogates (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Blob empty\n[UNEXPECTED_FAILURE][FAIL] Blob NUL\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array Blob object, Blob basic\n[PASS] Array Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Array Blob object, Blob empty\n[PASS] Array Blob object, Blob NUL\n[PASS] Array Blob object, two Blobs\n[PASS] Object Blob object, Blob basic\n[PASS] Object Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Object Blob object, Blob empty\n[PASS] Object Blob object, Blob NUL\n[EXPECTED_FAILURE][FAIL] File basic\nassert_true: instanceof File expected true got false\n    at compare_File (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:352:3)\n    at Object.f (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:19:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests-harness.js:37:9)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array sparse\n[PASS] Array with non-index property\n[PASS] Object with index property and length\n[PASS] Array with circular reference\n[PASS] Object with circular reference\n[PASS] Array with identical property values\n[PASS] Object with identical property values\n[PASS] Object with property on prototype\n[PASS] Object with non-enumerable property\n[PASS] Object with non-writable property\n[PASS] Object with non-configurable property\n[PASS] ObjectPrototype must lose its exotic-ness when cloned\n[PASS] ArrayBuffer\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n    at readNext (node:internal/blob:335:18)\n    at Object.pull (node:internal/blob:382:9)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n\n{\n  \"structured-clone.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob basic\",\n        \"Blob unpaired high surrogate (invalid utf-8)\",\n        \"Blob unpaired low surrogate (invalid utf-8)\",\n        \"Blob paired surrogates (invalid utf-8)\",\n        \"Blob NUL\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ],\n      \"expected\": [\n        \"File basic\"\n      ]\n    }\n  }\n}\n\nRan 1/1 tests, 0 skipped, -1 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nc:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\html\\webappapis\\structured-clone.json for these files:\nstructured-clone.any.js\n    at process.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":227.127,"fullname":"wpt/test-structured-clone","closingTestPoint":false}},{"testName":"parallel/test-filehandle-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-filehandle-readablestream","id":254,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-filehandle-readablestream.js:101:27\n\nNode.js v22.0.0-pre"},"time":215.353,"fullname":"parallel/test-filehandle-readablestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","id":848,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:57:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:55:18)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n\nNode.js v22.0.0-pre"},"time":170.986,"fullname":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":849,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-whatwg-readablestream.mjs:51:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n\nNode.js v22.0.0-pre"},"time":216.999,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"wpt/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-blob","id":964,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] Blob-constructor-dom.window.js: Depends on DOM API\n[SKIPPED] Blob-in-worker.worker.js: Depends on Web Workers API\n[SKIPPED] Blob-slice.any.js: Depends on File API\n[PASS] Blob.arrayBuffer()\n[PASS] Blob.arrayBuffer() empty Blob data\n[PASS] Blob.arrayBuffer() non-ascii input\n[PASS] Blob.arrayBuffer() non-unicode input\n[PASS] Blob.arrayBuffer() concurrent reads\n[PASS] Blob interface object\n[PASS] Blob constructor with no arguments\n[PASS] Blob constructor with no arguments, without 'new'\n[PASS] Blob constructor without brackets\n[PASS] Blob constructor with undefined as first argument\n[PASS] Passing non-objects, Dates and RegExps for blobParts should throw a TypeError.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:58:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] A plain object with custom @@iterator should be treated as a sequence for the blobParts argument.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:81:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] slice start is negative, relativeStart will be max((size + start), 0)\n[PASS] slice start is greater than blob size, relativeStart will be min(start, size)\n[PASS] slice end is negative, relativeEnd will be max((size + end), 0)\n[PASS] slice end is greater than blob size, relativeEnd will be min(end, size)\n[EXPECTED_FAILURE][FAIL] A String object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:92:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] A Uint8Array object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:99:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] The length getter should be invoked and any exceptions should be propagated.\n[PASS] ToUint32 should be applied to the length and any exceptions should be propagated.\n[EXPECTED_FAILURE][FAIL] Getters and value conversions should happen in order until an exception is thrown.\nassert_array_equals: lengths differ, expected array [\"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 8, got [\"Symbol.iterator\", \"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 9\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:179:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:142:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] ToString should be called on elements of the blobParts array and any exceptions should be propagated.\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (pop).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:211:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (unshift).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:223:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ToString should be called on elements of the blobParts array.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:251:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ArrayBuffer elements of the blobParts array should be supported.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:275:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:285:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing a Float64Array as element of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:300:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing BigInt typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:314:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two blobs\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:337:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two buffers\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:346:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two bufferviews\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:355:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with mixed types\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:367:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] options properties should be accessed in lexicographic order.\nassert_array_equals: expected property 0 to be \"endings\" but got \"type\" (expected array [\"endings\", \"type\"] got [\"type\", \"endings\"])\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:389:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:377:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Arguments should be evaluated from left to right.\nassert_unreached: type getter should not be called. Reached unreachable code\n    at get type [as type] (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:398:22)\n    at new Blob (node:internal/blob:150:7)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:395:5\n    at assert_throws_exactly_impl (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2332:18)\n    at assert_throws_exactly (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2319:9)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Passing 123 for options should throw\n[PASS] Passing 123.4 for options should throw\n[PASS] Passing true for options should throw\n[PASS] Passing \"abc\" for options should throw\n[PASS] Blob with type \"\"\n[PASS] Blob with type \"a\"\n[PASS] Blob with type \"A\"\n[PASS] Blob with type \"text/html\"\n[PASS] Blob with type \"TEXT/HTML\"\n[PASS] Blob with type \"text/plain;charset=utf-8\"\n[PASS] Blob with type \"å\"\n[PASS] Blob with type \"𐑾\"\n[PASS] Blob with type \" image/gif \"\n[PASS] Blob with type \"\\timage/gif\\t\"\n[PASS] Blob with type \"image/gif;\"\n[PASS] Blob with type \"İmage/gif\"\n[PASS] Blob with type \"ımage/gif\"\n[PASS] Blob with type \"image/gif\\0\"\n[PASS] Blob with type \"unknown/unknown\"\n[PASS] Blob with type \"text/plain\"\n[PASS] Blob with type \"image/png\"\n[PASS] Passing a FrozenArray as the blobParts array should work (FrozenArray<MessagePort>).\n[UNEXPECTED_FAILURE][FAIL] Blob.stream()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.stream() empty Blob\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() non-unicode input\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() garbage collection of blob shouldn't break streamconsumption\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.text()\n[PASS] Blob.text() empty blob data\n[UNEXPECTED_FAILURE][FAIL] Reading Blob.stream() with BYOB reader\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.text() multi-element array in constructor\n[PASS] Blob.text() non-unicode\n[PASS] Blob.text() different charset param in type option\n[PASS] Blob.text() different charset param with non-ascii input\n[PASS] Blob.text() invalid utf-8 input\n[PASS] Blob.text() concurrent reads\n\n{\n  \"Blob-constructor-dom.window.js\": {\n    \"skip\": \"Depends on DOM API\"\n  },\n  \"Blob-constructor.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"A plain object with @@iterator should be treated as a sequence for the blobParts argument.\",\n        \"A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\",\n        \"A String object should be treated as a sequence for the blobParts argument.\",\n        \"A Uint8Array object should be treated as a sequence for the blobParts argument.\",\n        \"Getters and value conversions should happen in order until an exception is thrown.\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (pop).\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (unshift).\",\n        \"ToString should be called on elements of the blobParts array.\",\n        \"ArrayBuffer elements of the blobParts array should be supported.\",\n        \"Passing typed arrays as elements of the blobParts array should work.\",\n        \"Passing a Float64Array as element of the blobParts array should work.\",\n        \"Passing BigInt typed arrays as elements of the blobParts array should work.\",\n        \"Array with two blobs\",\n        \"Array with two buffers\",\n        \"Array with two bufferviews\",\n        \"Array with mixed types\",\n        \"options properties should be accessed in lexicographic order.\",\n        \"Arguments should be evaluated from left to right.\",\n        \"Passing null (index 0) for options should use the defaults.\",\n        \"Passing null (index 0) for options should use the defaults (with newlines).\",\n        \"Passing undefined (index 1) for options should use the defaults.\",\n        \"Passing undefined (index 1) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults.\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults (with newlines).\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults.\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults (with newlines).\"\n      ]\n    }\n  },\n  \"Blob-in-worker.worker.js\": {\n    \"skip\": \"Depends on Web Workers API\"\n  },\n  \"Blob-slice.any.js\": {\n    \"skip\": \"Depends on File API\"\n  },\n  \"Blob-stream.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob.stream()\",\n        \"Blob.stream() non-unicode input\",\n        \"Blob.stream() garbage collection of blob shouldn't break streamconsumption\",\n        \"Reading Blob.stream() with BYOB reader\"\n      ]\n    }\n  }\n}\n\nRan 5/8 tests, 3 skipped, 3 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nc:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\FileAPI\\blob.json for these files:\nBlob-stream.any.js\n    at process.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":400.073,"fullname":"wpt/test-blob","closingTestPoint":false}},{"testName":"wpt/test-streams","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-streams","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] idlharness-shadowrealm.window.js: ShadowRealm support is not enabled\n[SKIPPED] queuing-strategies-size-function-per-global.window.js: Browser-specific test\n[SKIPPED] readable-streams\\cross-realm-crash.window.js: Browser-specific test\n[SKIPPED] readable-streams\\owning-type-video-frame.any.js: Browser-specific test\n[SKIPPED] readable-streams\\read-task-handling.window.js: Browser-specific test\n[SKIPPED] transferable\\deserialize-error.window.js: Browser-specific test\n[SKIPPED] transferable\\transfer-with-messageport.window.js: Browser-specific test\n[SKIPPED] transform-streams\\invalid-realm.tentative.window.js: Browser-specific test\n[PASS] a signal argument 'null' should cause pipeTo() to reject\n[PASS] a signal argument 'AbortSignal' should cause pipeTo() to reject\n[PASS] a signal argument 'true' should cause pipeTo() to reject\n[PASS] a signal argument '-1' should cause pipeTo() to reject\n[PASS] a signal argument '[object AbortSignal]' should cause pipeTo() to reject\n[PASS] an aborted signal should cause the writable stream to reject with an AbortError\n[PASS] (reason: 'null') all the error objects should be the same object\n[PASS] (reason: 'undefined') all the error objects should be the same object\n[PASS] (reason: 'error1: error1') all the error objects should be the same object\n[PASS] preventCancel should prevent canceling the readable\n[PASS] preventAbort should prevent aborting the readable\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; fulfilled cancel promise\n[PASS] preventCancel and preventAbort should prevent canceling the readable and aborting the readable\n[PASS] (reason: 'null') abort should prevent further reads\n[PASS] (reason: 'undefined') abort should prevent further reads\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; rejected cancel promise\n[PASS] (reason: 'error1: error1') abort should prevent further reads\n[PASS] Closing must be propagated backward: starts closed; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] (reason: 'null') all pending writes should complete on abort\n[PASS] Closing must be propagated backward: starts closed; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = a (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 1 (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = Symbol() (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = [object Object] (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] (reason: 'undefined') all pending writes should complete on abort\n[PASS] (reason: 'error1: error1') all pending writes should complete on abort\n[PASS] a rejection from underlyingSource.cancel() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be preferred to one from underlyingSource.cancel()\n[PASS] abort signal takes priority over closed readable\n[PASS] abort signal takes priority over errored readable\n[PASS] abort signal takes priority over closed writable\n[PASS] abort signal takes priority over errored writable\n[PASS] abort should do nothing after the readable is closed\n[PASS] abort should do nothing after the readable is errored\n[PASS] abort should do nothing after the readable is errored, even with pending writes\n[PASS] abort should do nothing after the writable is errored\n[PASS] pipeTo on a teed readable byte stream should only be aborted when both branches are aborted\n[PASS] idl_test validation\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\idlharness.any.js:43:14\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\idlharness.js:3522:28\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'idlharness.any.js'\n\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; rejected close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = undefined (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = null (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = false (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = 0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = -0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = NaN (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose =  (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = true (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = a (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = 1 (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = Symbol() (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = [object Object] (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true, preventCancel = true\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; rejected close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose = true\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: starts errored; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = a (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 1 (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = Symbol() (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = [object Object] (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write, preventCancel = true; preventAbort = true\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = true\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = undefined (falsy); fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = null (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = -0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = NaN (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort =  (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = a (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 1 (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = Symbol() (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = [object Object] (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true, preventClose = true\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel = true\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel omitted (but cancel is never called)\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; fulfilled cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = true\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; rejected cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel = true\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = true\n[PASS] Errors must be propagated backward: erroring via the controller errors once pending write completes\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = true\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; preventClose = true\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = true\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks, but then does\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Piping from an empty ReadableStream into a WritableStream that does not desire chunks, but then the readable stream becomes non-empty and the writable stream starts desiring chunks\n[PASS] Piping from a ReadableStream to a WritableStream that desires more chunks before finishing with previous ones\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; preventAbort = true\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write; preventClose = true\n[PASS] Closing must be propagated forward: erroring the writable while flushing pending writes should error pipeTo\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write\n[EXPECTED_FAILURE][FAIL] enqueue() must not synchronously call write algorithm\nassert_false: write algorithm must not run synchronously expected false got true\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\piping\\general-addition.any.js:14:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'piping\\general-addition.any.js'\n\n[PASS] Piping must lock both the ReadableStream and WritableStream\n[PASS] Piping finishing must unlock both the ReadableStream and WritableStream\n[PASS] pipeTo must check the brand of its ReadableStream this value\n[PASS] pipeTo must check the brand of its WritableStream argument\n[PASS] pipeTo must fail if the ReadableStream is locked, and not lock the WritableStream\n[PASS] pipeTo must fail if the WritableStream is locked, and not lock the ReadableStream\n[PASS] Piping from a ReadableStream from which lots of chunks are synchronously readable\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write; preventAbort = true\n[PASS] Piping from a ReadableStream for which a chunk becomes asynchronously readable after the pipeTo\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is true\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is false\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is true\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is false\n[PASS] pipeTo() should reject if an option getter grabs a writer\n[PASS] pipeTo() promise should resolve if null is passed\n[PASS] pipeThrough should not call pipeTo on this\n[PASS] pipeThrough should not call pipeTo on the ReadableStream prototype\n[PASS] pipeThrough should brand-check this and not allow 'null'\n[PASS] pipeThrough should brand-check readable and not allow 'null'\n[PASS] pipeThrough should brand-check this and not allow 'undefined'\n[PASS] pipeThrough should brand-check readable and not allow 'undefined'\n[PASS] pipeThrough should brand-check this and not allow '0'\n[PASS] pipeThrough should brand-check readable and not allow '0'\n[PASS] pipeThrough should brand-check this and not allow 'NaN'\n[PASS] pipeThrough should brand-check readable and not allow 'NaN'\n[PASS] pipeThrough should brand-check this and not allow 'true'\n[PASS] pipeThrough should brand-check readable and not allow 'true'\n[PASS] pipeThrough should brand-check this and not allow 'ReadableStream'\n[PASS] Piping from an errored readable stream to an erroring writable stream\n[PASS] pipeThrough should brand-check readable and not allow 'ReadableStream'\n[PASS] pipeThrough should brand-check this and not allow '[object ReadableStream]'\n[PASS] pipeThrough should brand-check readable and not allow '[object ReadableStream]'\n[PASS] Piping from an errored readable stream to an errored writable stream\n[PASS] pipeThrough should brand-check writable and not allow 'null'\n[PASS] pipeThrough should brand-check writable and not allow 'undefined'\n[PASS] pipeThrough should brand-check writable and not allow '0'\n[PASS] pipeThrough should brand-check writable and not allow 'NaN'\n[PASS] pipeThrough should brand-check writable and not allow 'true'\n[PASS] Piping from an errored readable stream to an erroring writable stream; preventAbort = true\n[PASS] pipeThrough should brand-check writable and not allow 'WritableStream'\n[PASS] pipeThrough should brand-check writable and not allow '[object WritableStream]'\n[PASS] pipeThrough should rethrow errors from accessing readable or writable\n[PASS] Piping from an errored readable stream to an errored writable stream; preventAbort = true\n[PASS] invalid values of signal should throw; specifically 'null'\n[PASS] invalid values of signal should throw; specifically '0'\n[PASS] invalid values of signal should throw; specifically 'NaN'\n[PASS] invalid values of signal should throw; specifically 'true'\n[PASS] invalid values of signal should throw; specifically 'AbortSignal'\n[PASS] invalid values of signal should throw; specifically '[object AbortSignal]'\n[PASS] Piping from an errored readable stream to a closing writable stream\n[PASS] pipeThrough should accept a real AbortSignal\n[PASS] pipeThrough should throw if this is locked\n[PASS] pipeThrough should throw if writable is locked\n[PASS] pipeThrough should not care if readable is locked\n[PASS] pipeThrough() should throw if an option getter grabs a writer\n[PASS] pipeThrough() should not throw if option is null\n[PASS] pipeThrough() should not throw if signal is undefined\n[PASS] pipeThrough() should throw if readable/writable getters throw\n[PASS] Piping through a duck-typed pass-through transform stream should work\n[PASS] Piping through a transform errored on the writable end does not cause an unhandled promise rejection\n[PASS] Piping from an errored readable stream to a closed writable stream\n[PASS] Piping from a closed readable stream to an erroring writable stream\n[PASS] Piping from a closed readable stream to an errored writable stream\n[PASS] Piping from a closed readable stream to a closed writable stream\n[PASS] preventCancel should work\n[PASS] piping should not be observable\n[PASS] tee should not be observable\n[PASS] preventClose should work\n[PASS] preventAbort should work\n[PASS] pipeThrough should stop after getting preventAbort throws\n[PASS] pipeThrough should stop after getting preventCancel throws\n[PASS] pipeThrough should stop after getting preventClose throws\n[PASS] pipeThrough should stop after getting signal throws\n[PASS] pipeTo should stop after getting preventAbort throws\n[PASS] pipeTo should stop after getting preventCancel throws\n[PASS] pipeTo should stop after getting preventClose throws\n[PASS] pipeTo should stop after getting signal throws\n[PASS] Piping to a WritableStream that does not consume the writes fast enough exerts backpressure on the ReadableStream\n[PASS] Piping through an identity transform stream should close the destination when the source closes\n[PASS] CountQueuingStrategy: Can construct a with a valid high water mark\n[PASS] CountQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] CountQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] CountQueuingStrategy: size is the same function across all instances\n[PASS] CountQueuingStrategy: size should have the right name\n[PASS] CountQueuingStrategy: subclassing should work correctly\n[PASS] CountQueuingStrategy: size should not have a prototype property\n[PASS] ByteLengthQueuingStrategy: Can construct a with a valid high water mark\n[PASS] ByteLengthQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] ByteLengthQueuingStrategy: size is the same function across all instances\n[PASS] ByteLengthQueuingStrategy: size should have the right name\n[PASS] ByteLengthQueuingStrategy: subclassing should work correctly\n[PASS] ByteLengthQueuingStrategy: size should not have a prototype property\n[PASS] CountQueuingStrategy: size should not be a constructor\n[PASS] ByteLengthQueuingStrategy: size should not be a constructor\n[PASS] CountQueuingStrategy: size should have the right length\n[PASS] ByteLengthQueuingStrategy: size should have the right length\n[PASS] CountQueuingStrategy: size behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: size behaves as expected with strange arguments\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueuing an already-detached buffer throws\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:54:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:51:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:50:1\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStream with byte source: enqueuing a zero-length buffer throws\n[PASS] ReadableStream with byte source: enqueuing a zero-length view on a non-zero-length buffer throws\n[PASS] ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has a different length (autoAllocateChunkSize)\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:30:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:28:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into an already-detached buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:84:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:82:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:100:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:98:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:113:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:111:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:136:10)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at async_test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:676:34)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:123:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a real view\n[UNEXPECTED_FAILURE][FAIL] enqueue after detaching byobRequest.view.buffer should throw\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"Error: cannot proceed\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\enqueue-with-detached-buffer.any.js:20:3)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\enqueue-with-detached-buffer.any.js'\n\n[PASS] getReader({mode: \"byob\"}) throws on non-bytes streams\n[PASS] ReadableStream with byte source can be constructed with no errors\n[PASS] getReader({mode}) must perform ToString()\n[PASS] ReadableStream with byte source: start() throws an exception\n[PASS] ReadableStream with byte source: desiredSize when closed\n[PASS] ReadableStream with byte source: desiredSize when errored\n[PASS] ReadableStream with byte source: pull() function is not callable\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw if close()-ed more than once\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1492:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1479:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw on enqueue() after close()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1511:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1498:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: autoAllocateChunkSize cannot be 0\n[PASS] ReadableStreamBYOBReader can be constructed directly\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream argument\n[PASS] ReadableStreamBYOBReader constructor requires an unlocked ReadableStream\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream with type \"bytes\"\n[PASS] ReadableStream constructor should not accept a strategy with a size defined if type is \"bytes\"\n[PASS] ReadableStream with byte source: Construct and expect start and pull being called\n[PASS] ReadableStream with byte source: No automatic pull call if start doesn't finish\n[PASS] ReadableStream with byte source: Construct with highWaterMark of 0\n[PASS] ReadableStream with byte source: getReader(), then releaseLock()\n[PASS] ReadableStream with byte source: getReader() with mode set to byob, then releaseLock()\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a BYOB reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a BYOB reader automatically\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamDefaultReader must reject pending read()\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamBYOBReader must reject pending read()\n[PASS] ReadableStream with byte source: Automatic pull() after start()\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read()\n[PASS] ReadableStream with byte source: enqueue() with a non-transferable buffer\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: autoAllocateChunkSize\nassert_equals: pull() must have been invoked once expected 1 but got 0\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:355:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Mix of auto allocate and BYOB\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read(view)\n[PASS] ReadableStream with byte source: read() with a non-transferable buffer\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:505:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:503:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Push source that doesn't understand pull signal\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:565:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:580:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:578:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), read(view) partially, then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:604:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:599:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), enqueue(), close(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:652:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), close(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:672:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:670:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\nassert_unreached: read() should not reject Reached unreachable code\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\non-transferable-buffers.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:752:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() with too big value\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1000:18)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:996:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1026:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1024:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1056:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1054:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), read(view), then cancel()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: cancel() with partially filled pending pull() request\nassert_equals: 1 pull() should have been made in response to partial fill by enqueue() expected 1 but got 0\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1152:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1172:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1168:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1211:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1205:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1247:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1243:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1277:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1272:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1316:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1312:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1366:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1361:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1438:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1434:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1460:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1456:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() and close() in pull()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read() twice, then enqueue() twice\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1726:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), close() and respond()\nCannot read properties of null (reading 'respond')\nTypeError: Cannot read properties of null (reading 'respond')\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1765:26)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), big enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1801:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view) and multiple enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1835:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: read(view) with passing undefined as view must fail\n[PASS] ReadableStream with byte source: read(view) with passing an empty object as view must fail\n[PASS] ReadableStream with byte source: Even read(view) with passing ArrayBufferView like object as view must fail\n[PASS] ReadableStream with byte source: read() on an errored stream\n[PASS] ReadableStream with byte source: read(), then error()\n[PASS] ReadableStream with byte source: read(view) on an errored stream\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then error()\npromise_rejects_exactly: read() must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: Throwing in pull function must error the stream\n[PASS] ReadableStream with byte source: Throwing in pull in response to read() must be ignored if the stream is errored in it\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"TypeError: foo\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respond() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respondWithNewView() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() with cached byobRequest after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() with double read should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerRespond (node:internal/webstreams/readablestream:2717:17)\n    at ReadableStreamBYOBRequest.respond (node:internal/webstreams/readablestream:702:5)\n    at Object.pull (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:333:21)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream teeing with byte source: rs.tee() returns an array of two ReadableStreams\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing with byte source\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks should be cloned for each branch\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: errors in the source should propagate to both branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should not impact branch2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch2 should not impact branch1\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream teeing with byte source: canceling both branches should aggregate the cancel reasons into an array\n[PASS] Readable stream: throwing strategy.size getter\n[PASS] Readable stream: throwing strategy.highWaterMark getter\n[PASS] ReadableStream teeing with byte source: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] Async iterator instances should have the correct list of properties\n[PASS] ReadableStream teeing with byte source: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] Readable stream: invalid strategy.highWaterMark\n[PASS] ReadableStream teeing with byte source: erroring a teed stream should properly handle canceled branches\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: closing the original should close the branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] values() throws if there's already a lock\n[PASS] ReadableStream teeing with byte source: erroring the original should immediately error the branches\n[PASS] ReadableStream teeing with byte source: erroring the original should error pending reads from default reader\n[PASS] Readable stream: strategy.size errors the stream and then throws\n[PASS] Readable stream: strategy.size errors the stream and then returns Infinity\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:317:3)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] return() should unlock the stream synchronously when preventCancel = false\n[PASS] return() should unlock the stream synchronously when preventCancel = true\n[PASS] Readable stream: throwing strategy.size method\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:372:3)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Readable stream: invalid strategy.size return value\n[PASS] Async-iterating a push source\n[PASS] Readable stream: invalid strategy.size return value when pulling\n[PASS] Async-iterating a pull source\n[PASS] Async-iterating a push source with undefined values\n[PASS] Async-iterating a pull source with undefined values\n[PASS] Async-iterating a pull source manually\n[PASS] Async-iterating an errored stream throws\n[PASS] Async-iterating a closed stream never executes the loop body, but works fine\n[PASS] ReadableStream teeing with byte source: should not pull any chunks if no branches are reading\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\nError\n    at get_stack (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4546:21)\n    at new AssertionError (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4539:22)\n    at assert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4523:19)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:759:29)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2646:35\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Async-iterating an empty but not closed/errored stream never executes the loop body and stalls the async function\n[PASS] Async-iterating a partially consumed stream\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = false\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = true\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = false\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = true\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = false\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = true\n[PASS] Cancellation behavior when manually calling return(); preventCancel = false\n[PASS] Cancellation behavior when manually calling return(); preventCancel = true\n[PASS] next() rejects if the stream errors\n[PASS] return() does not rejects if the stream has not errored yet\n[PASS] Underlying source start: throwing getter\n[PASS] Underlying source start: throwing method\n[PASS] Underlying source: throwing pull getter (initial pull)\n[PASS] Underlying source cancel: throwing getter\n[PASS] Underlying source: throwing pull method (initial pull)\n[PASS] Underlying source pull: throwing getter (second pull does not result in a second get)\n[PASS] Underlying source pull: throwing method (second pull)\n[PASS] Underlying source cancel: throwing method\n[PASS] Underlying source: calling enqueue on an empty canceled stream should throw\n[PASS] Underlying source: calling enqueue on a non-empty canceled stream should throw\n[PASS] Underlying source: calling enqueue on a closed stream should throw\n[PASS] Underlying source: calling enqueue on an errored stream should throw\n[PASS] Underlying source: calling close twice on an empty stream should throw the second time\n[PASS] ReadableStream teeing with byte source: should not pull when original is already errored\n[PASS] return() rejects if the stream has errored\n[PASS] Underlying source: calling close twice on a non-empty stream should throw the second time\n[PASS] next() that succeeds; next() that reports an error; next()\n[PASS] next() that succeeds; next() that reports an error(); next() [no awaiting]\n[PASS] next() that succeeds; next() that reports an error(); return()\n[PASS] Underlying source: calling close on an empty canceled stream should throw\n[PASS] next() that succeeds; next() that reports an error(); return() [no awaiting]\n[PASS] Underlying source: calling close on a non-empty canceled stream should throw\n[PASS] next() that succeeds; return()\n[PASS] next() that succeeds; return() [no awaiting]\n[PASS] Underlying source: calling close after error should throw\n[PASS] return(); next()\n[PASS] Underlying source: calling error twice should not throw\n[PASS] return(); next() [no awaiting]\n[PASS] Underlying source: calling error after close should not throw\n[PASS] return(); return()\n[PASS] return(); return() [no awaiting]\n[PASS] Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error\n[PASS] Acquiring a reader after exhaustively async-iterating a stream\n[PASS] Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error\n[PASS] Acquiring a reader after return()ing from a stream that errors\n[PASS] read should not error if it dequeues and pull() throws\n[PASS] Acquiring a reader after partially async-iterating a stream\n[PASS] Acquiring a reader and reading the remaining chunks after partially async-iterating a stream with preventCancel = true\n[PASS] close() while next() is pending\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:440:26)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream cancellation: cancel(reason) should pass through the given reason to the underlying source\n[PASS] underlyingSource argument should be converted after queuingStrategy argument\n[PASS] Can construct a readable stream with a valid CountQueuingStrategy\n[PASS] ReadableStream cancellation: integration test on an infinite stream derived from a random push source\n[PASS] ReadableStream cancellation: cancel() on a locked stream should fail and not call the underlying source cancel\n[PASS] ReadableStream cancellation: should fulfill promise when cancel callback went fine\n[PASS] ReadableStream cancellation: returning a value from the underlying source's cancel should not affect the fulfillment value of the promise returned by the stream's cancel\n[PASS] ReadableStream cancellation: should reject promise when cancel callback raises an exception\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 0)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 1)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 4)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (1)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (2)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should reject when that one does\n[PASS] ReadableStream cancellation: cancelling before start finishes should prevent pull() from being called\n[PASS] ReadableStreamDefaultReader constructor should get a ReadableStream object as argument\n[PASS] ReadableStreamDefaultReader closed should always return the same promise object\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via direct construction)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via direct construction)\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via getReader)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via getReader)\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is closed\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is errored\n[PASS] getReader() should call ToString() on mode\n[PASS] Reading from a reader for an empty stream will wait until a chunk is available\n[PASS] cancel() on a reader does not release the reader\n[PASS] closed should be fulfilled after stream is closed (.closed access before acquiring)\n[PASS] closed should be rejected after reader releases its lock (multiple stream locks)\n[PASS] closed is replaced when stream closes and reader releases its lock\n[PASS] closed is replaced when stream errors and reader releases its lock\n[PASS] Multiple readers can access the stream in sequence\n[PASS] Cannot use an already-released reader to unlock a stream again\n[PASS] cancel() on a released reader is a no-op and does not pass through\n[PASS] Getting a second reader after erroring the stream and releasing the reader should succeed\n[PASS] ReadableStreamDefaultReader closed promise should be rejected with undefined if that is the error\n[PASS] ReadableStreamDefaultReader: if start rejects with no parameter, it should error the stream with an undefined error\n[PASS] Erroring a ReadableStream after checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Erroring a ReadableStream before checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Reading twice on a stream that gets closed\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Reading twice on a closed stream\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] Reading twice on an errored stream\n[PASS] Reading twice on a stream that gets errored\n[PASS] controller.close() should clear the list of pending read requests\n[PASS] Second reader can read chunks after first reader was released with pending read requests\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] ReadableStream.from throws on invalid iterables; specifically null\n[PASS] ReadableStream.from throws on invalid iterables; specifically undefined\n[PASS] ReadableStream.from throws on invalid iterables; specifically 0\n[PASS] ReadableStream.from throws on invalid iterables; specifically NaN\n[PASS] ReadableStream.from throws on invalid iterables; specifically true\n[PASS] ReadableStream.from throws on invalid iterables; specifically {}\n[PASS] ReadableStream.from throws on invalid iterables; specifically Object.create(null)\n[PASS] ReadableStream.from throws on invalid iterables; specifically a function\n[PASS] ReadableStream.from throws on invalid iterables; specifically a symbol\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@iterator method\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@asyncIterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@iterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@asyncIterator method\n[PASS] ReadableStream.from ignores @@iterator if @@asyncIterator exists\n[PASS] ReadableStream.from accepts an array of values\n[PASS] ReadableStream.from accepts an array of promises\n[PASS] ReadableStream.from accepts an array iterator\n[PASS] ReadableStream.from accepts a string\n[PASS] ReadableStream.from accepts a Set\n[PASS] ReadableStream.from accepts a Set iterator\n[PASS] ReadableStream.from accepts a sync generator\n[PASS] ReadableStream.from accepts an async generator\n[PASS] ReadableStream.from accepts a sync iterable of values\n[PASS] ReadableStream.from accepts a sync iterable of promises\n[PASS] ReadableStream.from accepts an async iterable\n[PASS] ReadableStream.from accepts a ReadableStream\n[PASS] ReadableStream.from accepts a ReadableStream async iterator\n[PASS] ReadableStream.from accepts an empty iterable\n[PASS] ReadableStream.from: stream errors when next() rejects\n[PASS] ReadableStream.from: stream stalls when next() never settles\n[PASS] ReadableStream can be constructed with no errors\n[PASS] ReadableStream can't be constructed with garbage\n[PASS] ReadableStream can't be constructed with an invalid type\n[PASS] ReadableStream constructor should throw for non-function start arguments\n[PASS] ReadableStream constructor will not tolerate initial garbage as cancel argument\n[PASS] ReadableStream constructor will not tolerate initial garbage as pull argument\n[PASS] ReadableStream start should be called with the proper thisArg\n[PASS] ReadableStream start controller parameter should be extensible\n[PASS] default ReadableStream getReader() should only accept mode:undefined\n[PASS] ReadableStream: enqueue should throw when the stream is readable but draining\n[PASS] ReadableStream: enqueue should throw when the stream is closed\n[PASS] ReadableStream: desiredSize when closed\n[PASS] ReadableStream: desiredSize when errored\n[PASS] Subclassing ReadableStream should work\n[PASS] ReadableStream strategies: the default strategy should give desiredSize of 1 to start, decreasing by 1 per enqueue\n[PASS] ReadableStream should be able to call start method within prototype chain of its source\n[PASS] ReadableStream start should be able to return a promise\n[PASS] ReadableStream start should be able to return a promise and reject it\n[PASS] ReadableStream should be able to enqueue different objects.\n[PASS] ReadableStream: if pull rejects, it should error the stream\n[PASS] ReadableStream.from: calls next() after first read()\n[PASS] ReadableStreamController methods should continue working properly when scripts lose their reference to the readable stream\n[PASS] ReadableStream: should only call pull once upon starting the stream\n[PASS] ReadableStream closed promise should fulfill even if the stream and reader JS references are lost\n[PASS] ReadableStream.from: cancelling the returned stream calls and awaits return()\n[PASS] ReadableStream.from: return() is not called when iterator completes normally\n[PASS] ReadableStream.from: cancel() rejects when return() fulfills with a non-object\n[PASS] ReadableStream.from: reader.read() inside next()\n[PASS] ReadableStream: should call pull when trying to read from a started, empty stream\n[PASS] ReadableStream.from: reader.cancel() inside next()\n[PASS] ReadableStream.from: reader.cancel() inside return()\n[PASS] ReadableStream closed promise should reject even if stream and reader JS references are lost\n[PASS] ReadableStream.from(array), push() to array while reading\n[PASS] Garbage-collecting a ReadableStreamDefaultReader should not unlock its stream\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from before start fulfills\n[EXPECTED_FAILURE][FAIL] ReadableStream can be constructed with owning type\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:7:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:6:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should call start with a ReadableStreamDefaultController\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:22:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:10:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream should be able to call enqueue with an empty transfer list\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:38:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:26:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] Transferred MessageChannel works as expected\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream should check transfer parameter\nassert_throws_js: transfer list is not empty function \"() => { controller.enqueue(buffer, { transfer : [ buffer ] }); }\" did not throw\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:50:7)\n    at setupReadableStreamDefaultController (node:internal/webstreams/readablestream:2440:23)\n    at setupReadableStreamDefaultControllerFromSource (node:internal/webstreams/readablestream:2472:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:278:7)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] Second branch of owning ReadableStream tee should end up into errors with transfer only values\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from after start fulfills\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should transfer enqueued chunks\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[PASS] ReadableStream: should call pull in reaction to read()ing the last chunk, if not draining\n[PASS] ReadableStream tee() should not touch Object.prototype properties\n[PASS] ReadableStream tee() should not call the global ReadableStream\n[PASS] tee() should not call Promise.prototype.then()\n[PASS] pipeTo() should not call Promise.prototype.then()\n[PASS] enqueue() inside size() should work\n[PASS] close() inside size() should not crash\n[PASS] close request inside size() should work\n[PASS] error() inside size() should work\n[PASS] desiredSize inside size() should work\n[PASS] cancel() inside size() should work\n[PASS] ReadableStream async iterator should use the original values of getReader() and ReadableStreamDefaultReader methods\n[PASS] pipeTo() inside size() should behave as expected\n[PASS] ReadableStream: should not call pull() in reaction to read()ing the last chunk, if draining\n[PASS] ReadableStream: should not call pull until the previous pull call's promise fulfills\n[PASS] read() inside of size() should behave as expected\n[PASS] getReader() inside size() should work\n[PASS] tee() inside size() should work\n[PASS] ReadableStream teeing: rs.tee() returns an array of two ReadableStreams\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing\n[PASS] ReadableStreamTee should not use a modified ReadableStream constructor from the global object\n[PASS] ReadableStream teeing: should be able to read one branch to the end without affecting the other\n[PASS] ReadableStream teeing: values should be equal across each branch\n[PASS] ReadableStream teeing: errors in the source should propagate to both branches\n[PASS] ReadableStream teeing: canceling branch1 should not impact branch2\n[PASS] ReadableStream teeing: canceling branch2 should not impact branch1\n[PASS] ReadableStream teeing: canceling both branches should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] ReadableStream teeing: erroring a teed stream should properly handle canceled branches\n[PASS] ReadableStream teeing: erroring a teed stream should error both branches\n[PASS] ReadableStream teeing: closing the original should immediately close the branches\n[PASS] ReadableStream teeing: erroring the original should immediately error the branches\n[PASS] ReadableStream teeing: canceling branch1 should finish when branch2 reads until end of stream\n[PASS] ReadableStream teeing: canceling branch1 should finish when original stream errors\n[PASS] ReadableStream: should pull after start, and after every read\n[PASS] ReadableStream: should not call pull after start if the stream is now closed\n[PASS] ReadableStream: should call pull after enqueueing from inside pull (with no read requests), if strategy allows\n[PASS] ReadableStream pull should be able to close a stream.\n[PASS] ReadableStream pull should be able to error a stream.\n[PASS] ReadableStream pull should be able to error a stream and throw.\n[PASS] ReadableStream: should call underlying source methods as methods\n[PASS] ReadableStream strategies: the default strategy should continue giving desiredSize of 1 if the chunks are read immediately\n[PASS] ReadableStream teeing: canceling both branches in sequence with delay\n[PASS] Running templatedRSEmpty with ReadableStream (empty)\n[PASS] ReadableStream (empty): instances have the correct methods and properties\n[PASS] ReadableStream (empty): calling getReader with invalid arguments should throw appropriate errors\n[PASS] Running templatedRSEmptyReader with ReadableStream (empty) reader\n[PASS] ReadableStream (empty) reader: instances have the correct methods and properties\n[PASS] ReadableStream (empty) reader: locked should be true\n[PASS] ReadableStream (empty) reader: read() should return distinct promises each time\n[PASS] ReadableStream (empty) reader: getReader() again on the stream should fail\n[PASS] ReadableStream (empty) reader: releasing the lock should cause locked to become false\n[PASS] Running templatedRSClosed with ReadableStream (closed via call in start)\n[PASS] ReadableStream (closed via call in start): locked should be false\n[PASS] ReadableStream (closed via call in start): getReader() should be OK\n[PASS] ReadableStream (closed via call in start): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream (closed via call in start): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed before getting reader)\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed after getting reader)\n[PASS] Running templatedRSClosed with ReadableStream (closed via cancel)\n[PASS] ReadableStream (closed via cancel): locked should be false\n[PASS] ReadableStream (closed via cancel): getReader() should be OK\n[PASS] ReadableStream (closed via cancel): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream (closed via cancel): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed via cancel after getting reader)\n[PASS] Running templatedRSErrored with ReadableStream (errored via call in start)\n[PASS] ReadableStream (errored via call in start): locked should be false\n[PASS] Running templatedRSErroredSyncOnly with ReadableStream (errored via call in start)\n[PASS] ReadableStream (errored via call in start): should not be able to obtain additional readers if we don't release the first lock\n[PASS] Running templatedRSErrored with ReadableStream (errored via returning a rejected promise in start)\n[PASS] ReadableStream (errored via returning a rejected promise in start): locked should be false\n[PASS] Running templatedRSErroredReader with ReadableStream (errored via returning a rejected promise in start) reader\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored before getting reader)\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored after getting reader)\n[PASS] Running templatedRSTwoChunksOpenReader with ReadableStream (two chunks enqueued, still open) reader\n[PASS] ReadableStream (two chunks enqueued, still open) reader: read() should return distinct promises each time\n[PASS] Running templatedRSTwoChunksClosedReader with ReadableStream (two chunks enqueued, then closed) reader\n[PASS] ReadableStream teeing: failing to cancel when canceling both branches in sequence with delay\n[PASS] ReadableStreamTee should not pull more chunks than can fit in the branch queue\n[PASS] ReadableStreamTee should only pull enough to fill the emptiest queue\n[PASS] ReadableStream integration test: adapting a random push source\n[PASS] ReadableStream integration test: adapting a sync pull source\n[PASS] ReadableStreamTee should not pull when original is already errored\n[PASS] ReadableStream integration test: adapting an async pull source\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 1 is reading\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object ReadableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] Transferring [object ReadableStream],[object TransformStream] should fail\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object WritableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] Transferring [object WritableStream],[object TransformStream] should fail\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 2 is reading\n[PASS] ReadableStream (empty) reader: read() should never settle\n[PASS] backpressure allows no transforms with a default identity transform and no reader\n[PASS] backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader\n[PASS] transform() should keep being called as long as there is no backpressure\n[PASS] writes should resolve as soon as transform completes\n[PASS] calling pull() before the first write() with backpressure should work\n[PASS] transform() should be able to read the chunk it just enqueued\n[PASS] blocking transform() should cause backpressure\n[PASS] writer.closed should resolve after readable is canceled during start\n[PASS] ReadableStreamTee stops pulling when original stream errors while both branches are reading\n[PASS] writer.closed should resolve after readable is canceled with backpressure\n[PASS] writer.closed should resolve after readable is canceled with no backpressure\n[PASS] cancelling the readable should cause a pending write to resolve\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe after startup\n[PASS] cancelling the readable side of a TransformStream should abort a full pipe\n[PASS] ReadableStream teeing: enqueue() and close() while both branches are pulling\n[PASS] cancelling the readable side should call transformer.cancel()\n[PASS] cancelling the readable side should reject if transformer.cancel() throws\n[PASS] aborting the writable side should call transformer.abort()\n[PASS] aborting the writable side should reject if transformer.cancel() throws\n[PASS] closing the writable side should reject if a parallel transformer.cancel() throws\n[PASS] errored TransformStream should not enqueue new chunks\n[PASS] readable.cancel() and a parallel writable.close() should reject if a transformer.cancel() calls controller.error()\n[PASS] TransformStream constructor should throw when start does\n[PASS] when strategy.size throws inside start(), the constructor should throw the same error\n[PASS] writable.abort() and readable.cancel() should reject if a transformer.cancel() calls controller.error()\n[PASS] when strategy.size calls controller.error() then throws, the constructor should throw the first error\n[PASS] TransformStream errors thrown in transform put the writable and readable in an errored state\n[PASS] TransformStream errors thrown in flush put the writable and readable in an errored state\n[PASS] TransformStream transformer.start() rejected promise should error the stream\n[PASS] TransformStream flush is called immediately when the writable is closed, if no writes are queued\n[PASS] when controller.error is followed by a rejection, the error reason should come from controller.error\n[PASS] TransformStream flush is called after all queued writes finish, once the writable is closed\n[PASS] cancelling the readable side should error the writable\n[PASS] TransformStream flush gets a chance to enqueue more into the readable\n[PASS] it should be possible to error the readable between close requested and complete\n[PASS] an exception from transform() should error the stream if terminate has been requested but not completed\n[PASS] abort should set the close reason for the writable when it happens before cancel during start, and cancel should reject\n[PASS] TransformStream flush gets a chance to enqueue more into the readable, and can then async close\n[PASS] abort should set the close reason for the writable when it happens before cancel during underlying sink write, but cancel should still succeed\n[PASS] controller.error() should do nothing the second time it is called\n[PASS] controller.error() should close writable immediately after readable.cancel()\n[PASS] controller.error() should do nothing after readable.cancel() resolves\n[PASS] error() during flush should cause writer.close() to reject\n[PASS] controller.error() should do nothing after writable.abort() has completed\n[PASS] controller.error() should do nothing after a transformer method has thrown an exception\n[PASS] closing the writable side should call transformer.flush() and a parallel readable.cancel() should not reject\n[PASS] erroring during write with backpressure should result in the write failing\n[PASS] ReadableStream (empty) reader: two read()s should both never settle\n[PASS] a write() that was waiting for backpressure should reject if the writable is aborted\n[PASS] the readable should be errored with the reason passed to the writable abort() method\n[PASS] ReadableStream (empty) reader: releasing the lock should reject all pending read requests\n[PASS] ReadableStream (empty) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: releasing the lock should cause closed calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: canceling via the reader should cause the reader to act closed\n[PASS] ReadableStream (empty) reader: canceling via the stream should fail\n[PASS] ReadableStream (closed via call in start): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed before getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed before getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed before getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (closed via cancel): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed via cancel after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed via cancel after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed via cancel after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (errored via call in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via call in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via call in start): should be able to obtain a second reader, with the correct closed promise\n[PASS] ReadableStream (errored via call in start): cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via call in start): reader cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via returning a rejected promise in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via returning a rejected promise in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: closed should reject with the error\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: read() should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored before getting reader): read() should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored after getting reader): read() should reject with the error\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (sequential)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (nested)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: cancel() after a read() should still give that single read result\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (sequential)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (nested)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: draining the stream via read() should cause the reader closed promise to fulfill, but locked stays true\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock after the stream is closed should cause locked to become false\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: reader's closed property always returns the same promise\n[PASS] TransformStream can be constructed with a transform function\n[PASS] TransformStream can be constructed with no transform function\n[PASS] TransformStream writable starts in the writable state\n[PASS] enqueue() should throw after controller.terminate()\n[PASS] controller.terminate() should do nothing the second time it is called\n[PASS] specifying a defined readableType should throw\n[PASS] specifying a defined writableType should throw\n[PASS] Subclassing TransformStream should work\n[PASS] Identity TransformStream: can read from readable what is put into writable\n[PASS] Uppercaser sync TransformStream: can read from readable transformed version of what is put into writable\n[PASS] Uppercaser-doubler sync TransformStream: can read both chunks put into the readable\n[PASS] testing \"\" (length 1)\n[PASS] testing \"\" (length 0)\n[PASS] testing \"{{in1}}\" (length 1)\n[PASS] testing \"z{{in1}}\" (length 1)\n[PASS] testing \"{{in1}}q\" (length 1)\n[PASS] testing \"{{in1}}{{in1}\" (length 1)\n[PASS] testing \"{{in1}}{{in1},}\" (length 2)\n[PASS] testing \"{{in1,}}\" (length 2)\n[PASS] testing \"{{,in1}}\" (length 2)\n[PASS] testing \"{,{in1}}\" (length 2)\n[PASS] testing \"{{,in1}\" (length 2)\n[PASS] testing \"{\" (length 1)\n[PASS] testing \"{,\" (length 2)\n[PASS] testing \"{,{,i,n,1,},}\" (length 7)\n[PASS] testing \"{{in1}}{{in2}}{{in1}}\" (length 1)\n[PASS] Uppercaser async TransformStream: can read from readable transformed version of what is put into writable\n[PASS] testing \"{{wrong}}\" (length 1)\n[PASS] testing \"{{wron,g}}\" (length 2)\n[PASS] testing \"{{quine}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}}\" (length 1)\n[PASS] TransformStream constructor should not call setters for highWaterMark or size\n[PASS] TransformStream should use the original value of ReadableStream and WritableStream\n[PASS] Uppercaser-doubler async TransformStream: can read both chunks put into the readable\n[PASS] TransformStream: by default, closing the writable closes the readable (when there are no queued writes)\n[PASS] TransformStream: by default, closing the writable waits for transforms to finish before closing both\n[PASS] TransformStream: by default, closing the writable closes the readable after sync enqueues and async done\n[PASS] TransformStream: by default, closing the writable closes the readable after async enqueues and async done\n[PASS] Transform stream should call transformer methods as methods\n[PASS] methods should not not have .apply() or .call() called\n[PASS] transformer method start should be called with the right number of arguments\n[PASS] transformer method start should be called even when it's located on the prototype chain\n[PASS] transformer method transform should be called with the right number of arguments\n[PASS] transformer method transform should be called even when it's located on the prototype chain\n[PASS] transformer method flush should be called with the right number of arguments\n[PASS] transformer method flush should be called even when it's located on the prototype chain\n[PASS] enqueue() inside size() should work\n[PASS] terminate() inside size() should work\n[PASS] error() inside size() should work\n[PASS] desiredSize inside size() should work\n[PASS] readable cancel() inside size() should work\n[PASS] pipeTo() inside size() should work\n[PASS] writableStrategy highWaterMark should work\n[PASS] read() inside of size() should work\n[PASS] default writable strategy should be equivalent to { highWaterMark: 1 }\n[PASS] writer.write() inside size() should work\n[PASS] a RangeError should be thrown for an invalid highWaterMark\n[PASS] writableStrategy highWaterMark should be converted to a number\n[PASS] readableStrategy highWaterMark should be converted to a number\n[PASS] synchronous writer.write() inside size() should work\n[PASS] readableStrategy highWaterMark should work\n[PASS] writable should have the correct size() function\n[PASS] default readable strategy should be equivalent to { highWaterMark: 0 }\n[PASS] a bad readableStrategy size function should cause writer.write() to reject on an identity transform\n[PASS] a bad readableStrategy size function should error the stream on enqueue even when transformer.transform() catches the exception\n[PASS] writer.close() inside size() should work\n[PASS] writer.abort() inside size() should work\n[PASS] TransformStream start, transform, and flush should be strictly ordered\n[PASS] it should be possible to call transform() synchronously\n[PASS] closing the writable should close the readable when there are no queued chunks, even with backpressure\n[PASS] enqueue() should throw after readable.cancel()\n[PASS] terminate() should abort writable immediately after readable.cancel()\n[PASS] terminate() should do nothing after readable.cancel() resolves\n[PASS] controller.enqueue() should throw after controller.terminate()\n[PASS] controller.terminate() should error pipeTo()\n[PASS] controller.terminate() should prevent remaining chunks from being processed\n[PASS] WritableStreamDefaultController.signal\n[PASS] controller.error() after controller.terminate() with queued chunk should error the readable\n[PASS] controller.error() after controller.terminate() without queued chunk should do nothing\n[PASS] controller.terminate() inside flush() should not prevent writer.close() from succeeding\n[PASS] Aborting a WritableStream before it starts should cause the writer's unsettled ready promise to reject\n[PASS] Aborting a WritableStream should cause the writer's fulfilled ready promise to reset to a rejected one\n[PASS] abort() on a released writer rejects\n[PASS] start() should not be called twice\n[PASS] Aborting a WritableStream immediately prevents future writes\n[PASS] Aborting a WritableStream prevents further writes after any that are in progress\n[PASS] Fulfillment value of writer.abort() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream if sink's abort throws, the promise returned by writer.abort() rejects\n[PASS] WritableStream if sink's abort throws, the promise returned by multiple writer.abort()s is the same and rejects\n[PASS] WritableStream if sink's abort throws, the promise returned by ws.abort() rejects\n[PASS] WritableStream if sink's abort throws, for an abort performed during a write, the promise returned by ws.abort() rejects\n[PASS] Writable stream: throwing strategy.size getter\n[PASS] Aborting a WritableStream passes through the given reason\n[PASS] Aborting a WritableStream puts it in an errored state with the error passed to abort()\n[PASS] reject any non-function value for strategy.size\n[PASS] Aborting a WritableStream causes any outstanding write() promises to be rejected with the reason supplied\n[PASS] Writable stream: throwing strategy.highWaterMark getter\n[PASS] Closing but then immediately aborting a WritableStream causes the stream to error\n[PASS] Writable stream: invalid strategy.highWaterMark\n[PASS] Writable stream: invalid size beats invalid highWaterMark\n[PASS] Writable stream: throwing strategy.size method\n[PASS] Writable stream: invalid strategy.size return value\n[PASS] start: errors in start cause WritableStream constructor to throw\n[PASS] close: throwing getter should cause constructor to throw\n[PASS] write: throwing getter should cause write() and closed to reject\n[PASS] start: non-function start method\n[PASS] write: non-function write method\n[PASS] close: non-function close method\n[PASS] abort: non-function abort method with .apply\n[PASS] abort: throwing getter should cause abort() and closed to reject\n[PASS] Closing a WritableStream and aborting it while it closes causes the stream to ignore the abort attempt\n[PASS] close: throwing method should cause writer close() and ready to reject\n[PASS] close: returning a rejected promise should cause writer close() and ready to reject\n[PASS] write: throwing method should cause write() and closed to reject\n[PASS] Aborting a WritableStream after it is closed is a no-op\n[PASS] WritableStream should NOT call underlying sink's close if no abort is supplied (historical)\n[PASS] returning a thenable from abort() should work\n[PASS] write: returning a promise that becomes rejected after the writer write() should cause writer write() and ready to reject\n[PASS] write: returning a rejected promise (second write) should cause writer write() and ready to reject\n[PASS] abort: throwing method should cause abort() and closed to reject\n[PASS] .closed should not resolve before fulfilled write()\n[PASS] .closed should not resolve before rejected write(); write() error should not overwrite abort() error\n[PASS] writes should be satisfied in order when aborting\n[PASS] writes should be satisfied in order after rejected write when aborting\n[PASS] close() should reject with abort reason why abort() is first error\n[PASS] fulfillment value of writer.close() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] underlying abort() should not be called until underlying write() completes\n[PASS] underlying abort() should not be called if underlying close() has started\n[PASS] Closing a writable stream with in-flight writes below the high water mark delays the close call properly\n[PASS] if underlying close() has started and then rejects, the abort() and close() promises should reject with the underlying close rejection reason\n[PASS] when sink calls error asynchronously while sink close is in-flight, the stream should not become errored\n[PASS] when sink calls error synchronously while closing, the stream should not become errored\n[PASS] when the sink throws during close, and the close is requested while a write is still in-flight, the stream should become errored during the close\n[PASS] releaseLock on a stream with a pending write in which the stream has been errored\n[PASS] releaseLock on a stream with a pending close in which controller.error() was called\n[PASS] when close is called on a WritableStream in writable state, ready should return a fulfilled promise\n[PASS] an abort() that happens during a write() should trigger the underlying abort() even with a close() queued\n[PASS] if a writer is created for a stream with a pending abort, its ready should be rejected with the abort error\n[PASS] writer close() promise should resolve before abort() promise\n[PASS] writer.ready should reject on controller error without waiting for underlying write\n[PASS] WritableStream should be constructible with no arguments\n[PASS] underlyingSink argument should be converted after queuingStrategy argument\n[PASS] WritableStream instances should have standard methods and properties\n[PASS] WritableStreamDefaultController constructor should throw\n[PASS] WritableStreamDefaultController constructor should throw when passed an initialised WritableStream\n[PASS] WritableStreamDefaultWriter should throw unless passed a WritableStream\n[PASS] WritableStreamDefaultWriter constructor should throw when stream argument is locked\n[PASS] controller argument should be passed to start method\n[PASS] controller argument should be passed to write method\n[PASS] controller argument should not be passed to close method\n[PASS] highWaterMark should be reflected to desiredSize\n[PASS] when close is called on a WritableStream in waiting state, ready promise should be fulfilled\n[PASS] WritableStream should be writable and ready should fulfill immediately if the strategy does not apply backpressure\n[PASS] when close is called on a WritableStream in waiting state, ready should be fulfilled immediately even if close takes a long time\n[PASS] returning a thenable from close() should work\n[PASS] releaseLock() should not change the result of sync close()\n[PASS] releaseLock() should not change the result of async close()\n[PASS] close() should set state to CLOSED even if writer has detached\n[PASS] the promise returned by async abort during close should resolve\n[PASS] promises must fulfill/reject in the expected order on closure\n[PASS] promises must fulfill/reject in the expected order on aborted closure\n[PASS] Can construct a writable stream with a valid CountQueuingStrategy\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 0)\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 4)\n[PASS] promises must fulfill/reject in the expected order on aborted and errored closure\n[PASS] writer.abort() while there is an in-flight write, and then finish the write with rejection\n[PASS] close() should not reject until no sink methods are in flight\n[PASS] ready promise should be initialised as fulfilled for a writer on a closed stream\n[PASS] close() on a writable stream should work\n[PASS] close() on a locked stream should reject\n[PASS] close() on an erroring stream should reject\n[PASS] close() on an errored stream should reject\n[PASS] close() on an closed stream should reject\n[PASS] close() on a stream with a pending close should reject\n[PASS] controller.error() on erroring stream should not throw\n[PASS] controller.error() should error the stream\n[PASS] surplus calls to controller.error() should be a no-op\n[PASS] controller.error() on errored stream should not throw\n[PASS] controller.error() on closed stream should not throw\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] desiredSize on a released writer\n[PASS] desiredSize initial value\n[PASS] desiredSize on a writer for an errored stream\n[PASS] ws.getWriter() on a closing WritableStream\n[PASS] ws.getWriter() on an aborted WritableStream\n[PASS] Subclassing WritableStream should work\n[PASS] the locked getter should return true if the stream has a writer\n[PASS] desiredSize on a writer for a closed stream\n[PASS] ws.getWriter() on a closed WritableStream\n[PASS] ws.getWriter() on an errored WritableStream\n[PASS] closed and ready on a released writer\n[PASS] WritableStream should call underlying sink methods as methods\n[PASS] methods should not not have .apply() or .call() called\n[PASS] WritableStream's strategy.size should not be called as a method\n[PASS] redundant releaseLock() is no-op\n[PASS] ready promise should fire before closed on releaseLock\n[PASS] sink method start should be called with the right number of arguments\n[PASS] sink method start should be called even when it's located on the prototype chain\n[PASS] sink method write should be called with the right number of arguments\n[PASS] sink method write should be called even when it's located on the prototype chain\n[PASS] sink method close should be called with the right number of arguments\n[PASS] sink method close should be called even when it's located on the prototype chain\n[PASS] sink method abort should be called with the right number of arguments\n[PASS] sink method abort should be called even when it's located on the prototype chain\n[PASS] writes should be written in the standard order\n[PASS] writer.abort(), controller.error() while there is an in-flight write, and then finish the write\n[PASS] underlying sink's write or close should not be called if start throws\n[PASS] writer.write() promises should resolve in the standard order\n[PASS] controller.error() should work when called from within strategy.size()\n[PASS] close() should work when called from within strategy.size()\n[PASS] abort() should work when called from within strategy.size()\n[PASS] releaseLock() should abort the write() when called within strategy.size()\n[PASS] original reader should error when new reader is created within strategy.size()\n[PASS] underlying sink's write should not be called until start finishes\n[PASS] underlying sink's close should not be called until start finishes\n[PASS] underlying sink's write or close should not be invoked if the promise returned by start is rejected\n[PASS] returning a thenable from start() should work\n[PASS] controller.error() during start should cause writes to fail\n[PASS] WritableStream should complete asynchronous writes before close resolves\n[PASS] controller.error() during async start should cause existing writes to fail\n[PASS] when start() rejects, writer promises should reject in standard order\n[PASS] WritableStream should complete synchronous writes before close resolves\n[PASS] fulfillment value of ws.write() call should be undefined even if the underlying sink returns a non-undefined value\n[PASS] writer.abort(), controller.error() while there is an in-flight close, and then finish the close\n[PASS] WritableStream should transition to waiting until write is acknowledged\n[PASS] when write returns a rejected promise, queued writes and close should be cleared\n[PASS] when sink's write throws an error, the stream should become errored and the promise should reject\n[PASS] writer.write(), ready and closed reject with the error passed to controller.error() made before sink.write rejection\n[PASS] a large queue of writes should be processed completely\n[PASS] WritableStreamDefaultWriter should work when manually constructed\n[PASS] returning a thenable from write() should work\n[PASS] failing DefaultWriter constructor should not release an existing writer\n[PASS] write() on a stream with HWM 0 should not cause the ready Promise to resolve\n[PASS] writing to a released writer should reject the returned promise\n[PASS] controller.error(), writer.abort() while there is an in-flight write, and then finish the write\n[PASS] controller.error(), writer.abort() while there is an in-flight close, and then finish the close\n[PASS] releaseLock() while aborting should reject the original closed promise\n[PASS] releaseLock() during delayed async abort() should reject the writer.closed promise\n[PASS] sink abort() should not be called until sink start() is done\n[PASS] if start attempts to error the controller after abort() has been called, then it should lose\n[PASS] stream abort() promise should still resolve if sink start() rejects\n[PASS] writer abort() during sink start() should replace the writer.ready promise synchronously\n[PASS] promises returned from other writer methods should be rejected when writer abort() happens during sink start()\n[PASS] abort() should succeed despite rejection from write\n[PASS] abort() should be rejected with the rejection returned from close()\n[PASS] a rejecting sink.write() should not prevent sink.abort() from being called\n[PASS] when start errors after stream abort(), underlying sink abort() should be called anyway\n[PASS] when calling abort() twice on the same stream, both should give the same promise that fulfills with undefined\n[PASS] when calling abort() twice on the same stream, but sequentially so so there's no pending abort the second time, both should fulfill with undefined\n[PASS] calling abort() on an errored stream should fulfill with undefined\n[PASS] sink abort() should not be called if stream was erroring due to controller.error() before abort() was called\n[PASS] sink abort() should not be called if stream was erroring due to bad strategy before abort() was called\n[PASS] abort with no arguments should set the stored error to undefined\n[PASS] abort with an undefined argument should set the stored error to undefined\n[PASS] abort with a string argument should set the stored error to that argument\n[PASS] abort on a locked stream should reject\n[PASS] the abort signal is signalled synchronously - write\n[PASS] the abort signal is signalled synchronously - close\n[PASS] the abort signal is not signalled on error\n[PASS] the abort signal is not signalled on write failure\n[PASS] the abort signal is not signalled on close failure\n[PASS] recursive abort() call\n\n{\n  \"idlharness-shadowrealm.window.js\": {\n    \"skip\": \"ShadowRealm support is not enabled\"\n  },\n  \"idlharness.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"piping\\\\general-addition.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"enqueue() must not synchronously call write algorithm\"\n      ]\n    }\n  },\n  \"queuing-strategies-size-function-per-global.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-byte-streams\\\\bad-buffers-and-views.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: enqueuing an already-detached buffer throws\",\n        \"ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\",\n        \"ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\",\n        \"ReadableStream with byte source: reading into an already-detached buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\enqueue-with-detached-buffer.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"enqueue after detaching byobRequest.view.buffer should throw\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\general.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: Throw if close()-ed more than once\",\n        \"ReadableStream with byte source: Throw on enqueue() after close()\",\n        \"ReadableStream with byte source: autoAllocateChunkSize\",\n        \"ReadableStream with byte source: Mix of auto allocate and BYOB\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read()\",\n        \"ReadableStream with byte source: Push source that doesn't understand pull signal\",\n        \"ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\",\n        \"ReadableStream with byte source: enqueue(), read(view) partially, then read()\",\n        \"ReadableStream with byte source: getReader(), enqueue(), close(), then read()\",\n        \"ReadableStream with byte source: enqueue(), close(), getReader(), then read()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\",\n        \"ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\",\n        \"ReadableStream with byte source: read(view), then respond()\",\n        \"ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\",\n        \"ReadableStream with byte source: read(view), then respond() with too big value\",\n        \"ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\",\n        \"ReadableStream with byte source: getReader(), read(view), then cancel()\",\n        \"ReadableStream with byte source: cancel() with partially filled pending pull() request\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\",\n        \"ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\",\n        \"ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\",\n        \"ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\",\n        \"ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\",\n        \"ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\",\n        \"ReadableStream with byte source: read(view), then respond() and close() in pull()\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\",\n        \"ReadableStream with byte source: read() twice, then enqueue() twice\",\n        \"ReadableStream with byte source: Multiple read(view), close() and respond()\",\n        \"ReadableStream with byte source: Multiple read(view), big enqueue()\",\n        \"ReadableStream with byte source: Multiple read(view) and multiple enqueue()\",\n        \"ReadableStream with byte source: read(view), then error()\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\",\n        \"calling respond() twice on the same byobRequest should throw\",\n        \"calling respondWithNewView() twice on the same byobRequest should throw\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\non-transferable-buffers.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\respond-after-enqueue.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"byobRequest.respond() after enqueue() should not crash\",\n        \"byobRequest.respond() with cached byobRequest after enqueue() should not crash\",\n        \"byobRequest.respond() after enqueue() with double read should not crash\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\tee.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\",\n        \"ReadableStream teeing with byte source: chunks should be cloned for each branch\",\n        \"ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\",\n        \"ReadableStream teeing with byte source: errors in the source should propagate to both branches\",\n        \"ReadableStream teeing with byte source: canceling branch1 should not impact branch2\",\n        \"ReadableStream teeing with byte source: canceling branch2 should not impact branch1\",\n        \"ReadableStream teeing with byte source: closing the original should close the branches\",\n        \"ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\",\n        \"ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-streams\\\\cross-realm-crash.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type-message-port.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferred MessageChannel works as expected\",\n        \"Second branch of owning ReadableStream tee should end up into errors with transfer only values\"\n      ]\n    }\n  },\n  \"readable-streams\\\\owning-type-video-frame.any.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"ReadableStream can be constructed with owning type\",\n        \"ReadableStream of type owning should call start with a ReadableStreamDefaultController\",\n        \"ReadableStream should be able to call enqueue with an empty transfer list\",\n        \"ReadableStream should check transfer parameter\",\n        \"ReadableStream of type owning should transfer enqueued chunks\"\n      ]\n    }\n  },\n  \"readable-streams\\\\read-task-handling.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\deserialize-error.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transfer-with-messageport.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transform-stream-members.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferring [object TransformStream],[object ReadableStream] should fail\",\n        \"Transferring [object TransformStream],[object WritableStream] should fail\"\n      ]\n    }\n  },\n  \"transform-streams\\\\invalid-realm.tentative.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  }\n}\n\nRan 65/73 tests, 8 skipped, 54 passed, 4 expected failures, 7 unexpected failures, 0 unexpected passes\nc:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 7 unexpected failures. Consider updating test\\wpt\\status\\streams.json for these files:\nidlharness.any.js\nreadable-byte-streams\\bad-buffers-and-views.any.js\nreadable-byte-streams\\enqueue-with-detached-buffer.any.js\nreadable-byte-streams\\general.any.js\nreadable-byte-streams\\non-transferable-buffers.any.js\nreadable-byte-streams\\respond-after-enqueue.any.js\nreadable-byte-streams\\tee.any.js\n    at process.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":6442.416,"fullname":"wpt/test-streams","closingTestPoint":false}},{"testName":"parallel/test-filehandle-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-filehandle-readablestream","id":255,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-filehandle-readablestream.js:101:27\n\nNode.js v22.0.0-pre"},"time":394.006,"fullname":"parallel/test-filehandle-readablestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","id":846,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:57:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:55:18)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n\nNode.js v22.0.0-pre"},"time":231.039,"fullname":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":852,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-whatwg-readablestream.mjs:51:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n\nNode.js v22.0.0-pre"},"time":321.998,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"wpt/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-blob","id":964,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] Blob-constructor-dom.window.js: Depends on DOM API\n[SKIPPED] Blob-in-worker.worker.js: Depends on Web Workers API\n[SKIPPED] Blob-slice.any.js: Depends on File API\n[PASS] Blob.arrayBuffer()\n[PASS] Blob.arrayBuffer() empty Blob data\n[PASS] Blob interface object\n[PASS] Blob.arrayBuffer() non-ascii input\n[PASS] Blob constructor with no arguments\n[PASS] Blob constructor with no arguments, without 'new'\n[PASS] Blob constructor without brackets\n[PASS] Blob constructor with undefined as first argument\n[PASS] Blob.arrayBuffer() non-unicode input\n[PASS] Blob.arrayBuffer() concurrent reads\n[PASS] Passing non-objects, Dates and RegExps for blobParts should throw a TypeError.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:58:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] A plain object with custom @@iterator should be treated as a sequence for the blobParts argument.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:81:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] A String object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:92:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] A Uint8Array object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:99:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] The length getter should be invoked and any exceptions should be propagated.\n[PASS] ToUint32 should be applied to the length and any exceptions should be propagated.\n[EXPECTED_FAILURE][FAIL] Getters and value conversions should happen in order until an exception is thrown.\nassert_array_equals: lengths differ, expected array [\"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 8, got [\"Symbol.iterator\", \"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 9\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:179:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:142:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] ToString should be called on elements of the blobParts array and any exceptions should be propagated.\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (pop).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:211:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (unshift).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:223:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ToString should be called on elements of the blobParts array.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:251:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ArrayBuffer elements of the blobParts array should be supported.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:275:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:285:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing a Float64Array as element of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:300:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing BigInt typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:314:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two blobs\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:337:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two buffers\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:346:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two bufferviews\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:355:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with mixed types\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:367:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] options properties should be accessed in lexicographic order.\nassert_array_equals: expected property 0 to be \"endings\" but got \"type\" (expected array [\"endings\", \"type\"] got [\"type\", \"endings\"])\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:389:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:377:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] slice start is negative, relativeStart will be max((size + start), 0)\n[PASS] slice start is greater than blob size, relativeStart will be min(start, size)\n[EXPECTED_FAILURE][FAIL] Arguments should be evaluated from left to right.\nassert_unreached: type getter should not be called. Reached unreachable code\n    at get type [as type] (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:398:22)\n    at new Blob (node:internal/blob:150:7)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:395:5\n    at assert_throws_exactly_impl (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2332:18)\n    at assert_throws_exactly (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2319:9)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] slice end is negative, relativeEnd will be max((size + end), 0)\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] slice end is greater than blob size, relativeEnd will be min(end, size)\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Blob.text()\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob.stream()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.text() empty blob data\n[PASS] Blob.text() multi-element array in constructor\n[PASS] Blob.text() non-unicode\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Blob.text() different charset param in type option\n[PASS] Blob.text() different charset param with non-ascii input\n[PASS] Blob.stream() empty Blob\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() non-unicode input\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Passing 123 for options should throw\n[PASS] Passing 123.4 for options should throw\n[PASS] Passing true for options should throw\n[PASS] Passing \"abc\" for options should throw\n[PASS] Blob with type \"\"\n[PASS] Blob.text() invalid utf-8 input\n[PASS] Blob.text() concurrent reads\n[PASS] Blob with type \"a\"\n[PASS] Blob with type \"A\"\n[PASS] Blob with type \"text/html\"\n[PASS] Blob with type \"TEXT/HTML\"\n[PASS] Blob with type \"text/plain;charset=utf-8\"\n[PASS] Blob with type \"å\"\n[PASS] Blob with type \"𐑾\"\n[PASS] Blob with type \" image/gif \"\n[PASS] Blob with type \"\\timage/gif\\t\"\n[PASS] Blob with type \"image/gif;\"\n[PASS] Blob with type \"İmage/gif\"\n[PASS] Blob with type \"ımage/gif\"\n[PASS] Blob with type \"image/gif\\0\"\n[PASS] Blob with type \"unknown/unknown\"\n[PASS] Blob with type \"text/plain\"\n[PASS] Blob with type \"image/png\"\n[PASS] Passing a FrozenArray as the blobParts array should work (FrozenArray<MessagePort>).\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() garbage collection of blob shouldn't break streamconsumption\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Reading Blob.stream() with BYOB reader\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n\n{\n  \"Blob-constructor-dom.window.js\": {\n    \"skip\": \"Depends on DOM API\"\n  },\n  \"Blob-constructor.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"A plain object with @@iterator should be treated as a sequence for the blobParts argument.\",\n        \"A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\",\n        \"A String object should be treated as a sequence for the blobParts argument.\",\n        \"A Uint8Array object should be treated as a sequence for the blobParts argument.\",\n        \"Getters and value conversions should happen in order until an exception is thrown.\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (pop).\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (unshift).\",\n        \"ToString should be called on elements of the blobParts array.\",\n        \"ArrayBuffer elements of the blobParts array should be supported.\",\n        \"Passing typed arrays as elements of the blobParts array should work.\",\n        \"Passing a Float64Array as element of the blobParts array should work.\",\n        \"Passing BigInt typed arrays as elements of the blobParts array should work.\",\n        \"Array with two blobs\",\n        \"Array with two buffers\",\n        \"Array with two bufferviews\",\n        \"Array with mixed types\",\n        \"options properties should be accessed in lexicographic order.\",\n        \"Arguments should be evaluated from left to right.\",\n        \"Passing null (index 0) for options should use the defaults.\",\n        \"Passing null (index 0) for options should use the defaults (with newlines).\",\n        \"Passing undefined (index 1) for options should use the defaults.\",\n        \"Passing undefined (index 1) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults.\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults (with newlines).\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults.\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults (with newlines).\"\n      ]\n    }\n  },\n  \"Blob-in-worker.worker.js\": {\n    \"skip\": \"Depends on Web Workers API\"\n  },\n  \"Blob-slice.any.js\": {\n    \"skip\": \"Depends on File API\"\n  },\n  \"Blob-stream.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob.stream()\",\n        \"Blob.stream() non-unicode input\",\n        \"Blob.stream() garbage collection of blob shouldn't break streamconsumption\",\n        \"Reading Blob.stream() with BYOB reader\"\n      ]\n    }\n  }\n}\n\nRan 5/8 tests, 3 skipped, 3 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\FileAPI\\blob.json for these files:\nBlob-stream.any.js\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":466.982,"fullname":"wpt/test-blob","closingTestPoint":false}},{"testName":"wpt/test-streams","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-streams","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] idlharness-shadowrealm.window.js: ShadowRealm support is not enabled\n[SKIPPED] queuing-strategies-size-function-per-global.window.js: Browser-specific test\n[SKIPPED] readable-streams\\cross-realm-crash.window.js: Browser-specific test\n[SKIPPED] readable-streams\\owning-type-video-frame.any.js: Browser-specific test\n[SKIPPED] readable-streams\\read-task-handling.window.js: Browser-specific test\n[SKIPPED] transferable\\deserialize-error.window.js: Browser-specific test\n[SKIPPED] transferable\\transfer-with-messageport.window.js: Browser-specific test\n[SKIPPED] transform-streams\\invalid-realm.tentative.window.js: Browser-specific test\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; rejected cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] a signal argument 'null' should cause pipeTo() to reject\n[PASS] a signal argument 'AbortSignal' should cause pipeTo() to reject\n[PASS] a signal argument 'true' should cause pipeTo() to reject\n[PASS] a signal argument '-1' should cause pipeTo() to reject\n[PASS] Closing must be propagated backward: starts closed; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] a signal argument '[object AbortSignal]' should cause pipeTo() to reject\n[PASS] Closing must be propagated backward: starts closed; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = a (truthy)\n[PASS] Errors must be propagated backward: starts errored; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 1 (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = Symbol() (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = [object Object] (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] an aborted signal should cause the writable stream to reject with an AbortError\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] (reason: 'null') all the error objects should be the same object\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] (reason: 'undefined') all the error objects should be the same object\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] (reason: 'error1: error1') all the error objects should be the same object\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = undefined (falsy); fulfilled abort promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = undefined (falsy); fulfilled close promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = null (falsy); fulfilled abort promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = null (falsy); fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] preventCancel should prevent canceling the readable\n[PASS] Closing must be propagated forward: starts closed; preventClose = false (falsy); fulfilled close promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false (falsy); fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = 0 (falsy); fulfilled close promise\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = a (truthy)\n[PASS] preventAbort should prevent aborting the readable\n[PASS] Closing must be propagated forward: starts closed; preventClose = -0 (falsy); fulfilled close promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 1 (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = NaN (falsy); fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = Symbol() (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = -0 (falsy); fulfilled abort promise\n[PASS] preventCancel and preventAbort should prevent canceling the readable and aborting the readable\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = [object Object] (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = NaN (falsy); fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write, preventCancel = true; preventAbort = true\n[PASS] Closing must be propagated forward: starts closed; preventClose =  (falsy); fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = true (truthy)\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = a (truthy)\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel = true\n[PASS] Closing must be propagated forward: starts closed; preventClose = 1 (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = Symbol() (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort =  (falsy); fulfilled abort promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = [object Object] (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true, preventCancel = true\n[PASS] (reason: 'null') abort should prevent further reads\n[PASS] (reason: 'undefined') abort should prevent further reads\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = a (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 1 (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = Symbol() (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = [object Object] (truthy)\n[PASS] (reason: 'error1: error1') abort should prevent further reads\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true, preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; fulfilled cancel promise\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks, but then does\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; rejected cancel promise\n[PASS] (reason: 'null') all pending writes should complete on abort\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; rejected close promise\n[PASS] (reason: 'undefined') all pending writes should complete on abort\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = true\n[PASS] (reason: 'error1: error1') all pending writes should complete on abort\n[PASS] Piping from an empty ReadableStream into a WritableStream that does not desire chunks, but then the readable stream becomes non-empty and the writable stream starts desiring chunks\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; fulfilled close promise\n[PASS] a rejection from underlyingSource.cancel() should be returned by pipeTo()\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; rejected close promise\n[PASS] a rejection from underlyingSink.abort() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be preferred to one from underlyingSource.cancel()\n[PASS] abort signal takes priority over closed readable\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose = true\n[PASS] abort signal takes priority over errored readable\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; fulfilled abort promise\n[PASS] Piping from a ReadableStream to a WritableStream that desires more chunks before finishing with previous ones\n[PASS] abort signal takes priority over closed writable\n[PASS] abort signal takes priority over errored writable\n[PASS] abort should do nothing after the readable is closed\n[PASS] abort should do nothing after the readable is errored\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; fulfilled cancel promise\n[PASS] abort should do nothing after the readable is errored, even with pending writes\n[PASS] abort should do nothing after the writable is errored\n[PASS] pipeTo on a teed readable byte stream should only be aborted when both branches are aborted\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; rejected abort promise\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = true\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel omitted (but cancel is never called)\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel = true\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; fulfilled cancel promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; rejected cancel promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; preventClose = true\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = true\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel = true\n[PASS] Piping to a WritableStream that does not consume the writes fast enough exerts backpressure on the ReadableStream\n[PASS] Errors must be propagated backward: erroring via the controller errors once pending write completes\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; fulfilled abort promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write; preventClose = true\n[PASS] Closing must be propagated forward: erroring the writable while flushing pending writes should error pipeTo\n[PASS] idl_test validation\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; rejected abort promise\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\idlharness.any.js:43:14\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\idlharness.js:3522:28\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'idlharness.any.js'\n\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = true\n[EXPECTED_FAILURE][FAIL] enqueue() must not synchronously call write algorithm\nassert_false: write algorithm must not run synchronously expected false got true\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\piping\\general-addition.any.js:14:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'piping\\general-addition.any.js'\n\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Piping must lock both the ReadableStream and WritableStream\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Piping finishing must unlock both the ReadableStream and WritableStream\n[PASS] pipeTo must check the brand of its ReadableStream this value\n[PASS] pipeTo must check the brand of its WritableStream argument\n[PASS] pipeTo must fail if the ReadableStream is locked, and not lock the WritableStream\n[PASS] pipeTo must fail if the WritableStream is locked, and not lock the ReadableStream\n[PASS] Piping from a ReadableStream from which lots of chunks are synchronously readable\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = true\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Piping from a ReadableStream for which a chunk becomes asynchronously readable after the pipeTo\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is true\n[PASS] pipeThrough should not call pipeTo on this\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is false\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; preventAbort = true\n[PASS] pipeThrough should not call pipeTo on the ReadableStream prototype\n[PASS] Piping from an errored readable stream to an erroring writable stream\n[PASS] Piping from an errored readable stream to an errored writable stream\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is true\n[PASS] pipeThrough should brand-check this and not allow 'null'\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is false\n[PASS] Piping from an errored readable stream to an erroring writable stream; preventAbort = true\n[PASS] pipeTo() should reject if an option getter grabs a writer\n[PASS] pipeThrough should brand-check readable and not allow 'null'\n[PASS] pipeThrough should brand-check this and not allow 'undefined'\n[PASS] pipeTo() promise should resolve if null is passed\n[PASS] Piping from an errored readable stream to an errored writable stream; preventAbort = true\n[PASS] pipeThrough should brand-check readable and not allow 'undefined'\n[PASS] pipeThrough should brand-check this and not allow '0'\n[PASS] pipeThrough should brand-check readable and not allow '0'\n[PASS] pipeThrough should brand-check this and not allow 'NaN'\n[PASS] Piping from an errored readable stream to a closing writable stream\n[PASS] pipeThrough should brand-check readable and not allow 'NaN'\n[PASS] pipeThrough should brand-check this and not allow 'true'\n[PASS] pipeThrough should brand-check readable and not allow 'true'\n[PASS] pipeThrough should brand-check this and not allow 'ReadableStream'\n[PASS] pipeThrough should brand-check readable and not allow 'ReadableStream'\n[PASS] pipeThrough should brand-check this and not allow '[object ReadableStream]'\n[PASS] pipeThrough should brand-check readable and not allow '[object ReadableStream]'\n[PASS] pipeThrough should brand-check writable and not allow 'null'\n[PASS] pipeThrough should brand-check writable and not allow 'undefined'\n[PASS] pipeThrough should brand-check writable and not allow '0'\n[PASS] pipeThrough should brand-check writable and not allow 'NaN'\n[PASS] pipeThrough should brand-check writable and not allow 'true'\n[PASS] pipeThrough should brand-check writable and not allow 'WritableStream'\n[PASS] pipeThrough should brand-check writable and not allow '[object WritableStream]'\n[PASS] pipeThrough should rethrow errors from accessing readable or writable\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write\n[PASS] Piping from an errored readable stream to a closed writable stream\n[PASS] invalid values of signal should throw; specifically 'null'\n[PASS] invalid values of signal should throw; specifically '0'\n[PASS] invalid values of signal should throw; specifically 'NaN'\n[PASS] invalid values of signal should throw; specifically 'true'\n[PASS] Piping from a closed readable stream to an erroring writable stream\n[PASS] invalid values of signal should throw; specifically 'AbortSignal'\n[PASS] invalid values of signal should throw; specifically '[object AbortSignal]'\n[PASS] Piping from a closed readable stream to an errored writable stream\n[PASS] pipeThrough should accept a real AbortSignal\n[PASS] pipeThrough should throw if this is locked\n[PASS] pipeThrough should throw if writable is locked\n[PASS] pipeThrough should not care if readable is locked\n[PASS] Piping from a closed readable stream to a closed writable stream\n[PASS] pipeThrough() should throw if an option getter grabs a writer\n[PASS] pipeThrough() should not throw if option is null\n[PASS] pipeThrough() should not throw if signal is undefined\n[PASS] piping should not be observable\n[PASS] pipeThrough() should throw if readable/writable getters throw\n[PASS] tee should not be observable\n[PASS] pipeThrough should stop after getting preventAbort throws\n[PASS] pipeThrough should stop after getting preventCancel throws\n[PASS] pipeThrough should stop after getting preventClose throws\n[PASS] pipeThrough should stop after getting signal throws\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write; preventAbort = true\n[PASS] pipeTo should stop after getting preventAbort throws\n[PASS] pipeTo should stop after getting preventCancel throws\n[PASS] pipeTo should stop after getting preventClose throws\n[PASS] pipeTo should stop after getting signal throws\n[PASS] Piping through a duck-typed pass-through transform stream should work\n[PASS] Piping through a transform errored on the writable end does not cause an unhandled promise rejection\n[PASS] preventCancel should work\n[PASS] preventClose should work\n[PASS] preventAbort should work\n[PASS] Piping through an identity transform stream should close the destination when the source closes\n[PASS] CountQueuingStrategy: Can construct a with a valid high water mark\n[PASS] CountQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] CountQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] CountQueuingStrategy: size is the same function across all instances\n[PASS] CountQueuingStrategy: size should have the right name\n[PASS] CountQueuingStrategy: subclassing should work correctly\n[PASS] CountQueuingStrategy: size should not have a prototype property\n[PASS] ByteLengthQueuingStrategy: Can construct a with a valid high water mark\n[PASS] ByteLengthQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] ByteLengthQueuingStrategy: size is the same function across all instances\n[PASS] ByteLengthQueuingStrategy: size should have the right name\n[PASS] ByteLengthQueuingStrategy: subclassing should work correctly\n[PASS] ByteLengthQueuingStrategy: size should not have a prototype property\n[PASS] CountQueuingStrategy: size should not be a constructor\n[PASS] ByteLengthQueuingStrategy: size should not be a constructor\n[PASS] CountQueuingStrategy: size should have the right length\n[PASS] ByteLengthQueuingStrategy: size should have the right length\n[PASS] CountQueuingStrategy: size behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: size behaves as expected with strange arguments\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueuing an already-detached buffer throws\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:54:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:51:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:50:1\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a null view\n[PASS] ReadableStream with byte source: enqueuing a zero-length buffer throws\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a undefined view\n[PASS] ReadableStream with byte source: enqueuing a zero-length view on a non-zero-length buffer throws\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a real view\n[UNEXPECTED_FAILURE][FAIL] enqueue after detaching byobRequest.view.buffer should throw\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"Error: cannot proceed\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\enqueue-with-detached-buffer.any.js:20:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\enqueue-with-detached-buffer.any.js'\n\n[PASS] getReader({mode: \"byob\"}) throws on non-bytes streams\n[PASS] ReadableStream with byte source can be constructed with no errors\n[PASS] getReader({mode}) must perform ToString()\n[PASS] ReadableStream with byte source: start() throws an exception\n[PASS] ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has a different length (autoAllocateChunkSize)\n[PASS] ReadableStream with byte source: desiredSize when closed\n[PASS] ReadableStream with byte source: desiredSize when errored\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStream with byte source: pull() function is not callable\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:30:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:28:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw if close()-ed more than once\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1492:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1479:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into an already-detached buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:84:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:82:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:100:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:98:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw on enqueue() after close()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1511:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1498:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:113:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:111:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStream with byte source: autoAllocateChunkSize cannot be 0\n[PASS] ReadableStreamBYOBReader can be constructed directly\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream argument\n[PASS] ReadableStreamBYOBReader constructor requires an unlocked ReadableStream\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream with type \"bytes\"\n[PASS] ReadableStream constructor should not accept a strategy with a size defined if type is \"bytes\"\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:136:10)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at async_test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:676:34)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:123:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStream with byte source: Construct and expect start and pull being called\n[PASS] ReadableStream with byte source: No automatic pull call if start doesn't finish\n[PASS] ReadableStream with byte source: Construct with highWaterMark of 0\n[PASS] ReadableStream with byte source: getReader(), then releaseLock()\n[PASS] ReadableStream with byte source: getReader() with mode set to byob, then releaseLock()\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a BYOB reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a BYOB reader automatically\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamDefaultReader must reject pending read()\n[PASS] ReadableStream with byte source: enqueue() with a non-transferable buffer\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamBYOBReader must reject pending read()\n[PASS] ReadableStream with byte source: Automatic pull() after start()\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read()\n[PASS] ReadableStream with byte source: read() with a non-transferable buffer\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: autoAllocateChunkSize\nassert_equals: pull() must have been invoked once expected 1 but got 0\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:355:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Mix of auto allocate and BYOB\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read(view)\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\nassert_unreached: read() should not reject Reached unreachable code\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\non-transferable-buffers.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:505:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:503:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Push source that doesn't understand pull signal\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:565:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:580:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:578:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), read(view) partially, then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:604:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:599:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), enqueue(), close(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:652:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() with cached byobRequest after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), close(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:672:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:670:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() with double read should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:752:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() with too big value\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1000:18)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:996:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1026:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1024:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1056:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1054:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), read(view), then cancel()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: cancel() with partially filled pending pull() request\nassert_equals: 1 pull() should have been made in response to partial fill by enqueue() expected 1 but got 0\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1152:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1172:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1168:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1211:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1205:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1247:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1243:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1277:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1272:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1316:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1312:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1366:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1361:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1438:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1434:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1460:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1456:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() and close() in pull()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read() twice, then enqueue() twice\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1726:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), close() and respond()\nCannot read properties of null (reading 'respond')\nTypeError: Cannot read properties of null (reading 'respond')\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1765:26)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), big enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1801:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view) and multiple enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1835:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: read(view) with passing undefined as view must fail\n[PASS] ReadableStream with byte source: read(view) with passing an empty object as view must fail\n[PASS] ReadableStream with byte source: Even read(view) with passing ArrayBufferView like object as view must fail\n[PASS] ReadableStream with byte source: read() on an errored stream\n[PASS] ReadableStream with byte source: read(), then error()\n[PASS] ReadableStream with byte source: read(view) on an errored stream\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then error()\npromise_rejects_exactly: read() must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: Throwing in pull function must error the stream\n[PASS] ReadableStream with byte source: Throwing in pull in response to read() must be ignored if the stream is errored in it\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"TypeError: foo\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respond() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respondWithNewView() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerRespond (node:internal/webstreams/readablestream:2717:17)\n    at ReadableStreamBYOBRequest.respond (node:internal/webstreams/readablestream:702:5)\n    at Object.pull (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:333:21)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream teeing with byte source: rs.tee() returns an array of two ReadableStreams\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing with byte source\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks should be cloned for each branch\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: errors in the source should propagate to both branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should not impact branch2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch2 should not impact branch1\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream teeing with byte source: canceling both branches should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing with byte source: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing with byte source: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] ReadableStream teeing with byte source: erroring a teed stream should properly handle canceled branches\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: closing the original should close the branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream teeing with byte source: erroring the original should immediately error the branches\n[PASS] Readable stream: throwing strategy.size getter\n[PASS] Async iterator instances should have the correct list of properties\n[PASS] ReadableStream teeing with byte source: erroring the original should error pending reads from default reader\n[PASS] Readable stream: throwing strategy.highWaterMark getter\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:317:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Readable stream: invalid strategy.highWaterMark\n[PASS] values() throws if there's already a lock\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:372:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] return() should unlock the stream synchronously when preventCancel = false\n[PASS] Readable stream: strategy.size errors the stream and then throws\n[PASS] return() should unlock the stream synchronously when preventCancel = true\n[PASS] Readable stream: strategy.size errors the stream and then returns Infinity\n[PASS] Readable stream: throwing strategy.size method\n[PASS] Async-iterating a push source\n[PASS] Readable stream: invalid strategy.size return value\n[PASS] Async-iterating a pull source\n[PASS] ReadableStream teeing with byte source: should not pull any chunks if no branches are reading\n[PASS] Readable stream: invalid strategy.size return value when pulling\n[PASS] Async-iterating a push source with undefined values\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\nError\n    at get_stack (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4546:21)\n    at new AssertionError (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4539:22)\n    at assert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4523:19)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:759:29)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2646:35\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Underlying source start: throwing getter\n[PASS] Async-iterating a pull source with undefined values\n[PASS] Underlying source start: throwing method\n[PASS] Underlying source: throwing pull getter (initial pull)\n[PASS] Underlying source cancel: throwing getter\n[PASS] Async-iterating a pull source manually\n[PASS] Async-iterating an errored stream throws\n[PASS] Async-iterating a closed stream never executes the loop body, but works fine\n[PASS] ReadableStream teeing with byte source: should not pull when original is already errored\n[PASS] Underlying source: throwing pull method (initial pull)\n[PASS] Underlying source pull: throwing getter (second pull does not result in a second get)\n[PASS] Underlying source pull: throwing method (second pull)\n[PASS] Underlying source cancel: throwing method\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:440:26)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Async-iterating an empty but not closed/errored stream never executes the loop body and stalls the async function\n[PASS] Async-iterating a partially consumed stream\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = false\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = true\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = false\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = true\n[PASS] Underlying source: calling enqueue on an empty canceled stream should throw\n[PASS] Underlying source: calling enqueue on a non-empty canceled stream should throw\n[PASS] Underlying source: calling enqueue on a closed stream should throw\n[PASS] Underlying source: calling enqueue on an errored stream should throw\n[PASS] Underlying source: calling close twice on an empty stream should throw the second time\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = false\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = true\n[PASS] Cancellation behavior when manually calling return(); preventCancel = false\n[PASS] Cancellation behavior when manually calling return(); preventCancel = true\n[PASS] Underlying source: calling close twice on a non-empty stream should throw the second time\n[PASS] next() rejects if the stream errors\n[PASS] Underlying source: calling close on an empty canceled stream should throw\n[PASS] return() does not rejects if the stream has not errored yet\n[PASS] Underlying source: calling close on a non-empty canceled stream should throw\n[PASS] Underlying source: calling close after error should throw\n[PASS] Underlying source: calling error twice should not throw\n[PASS] Underlying source: calling error after close should not throw\n[PASS] Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error\n[PASS] Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error\n[PASS] ReadableStream cancellation: cancel(reason) should pass through the given reason to the underlying source\n[PASS] read should not error if it dequeues and pull() throws\n[PASS] return() rejects if the stream has errored\n[PASS] next() that succeeds; next() that reports an error; next()\n[PASS] next() that succeeds; next() that reports an error(); next() [no awaiting]\n[PASS] next() that succeeds; next() that reports an error(); return()\n[PASS] next() that succeeds; next() that reports an error(); return() [no awaiting]\n[PASS] next() that succeeds; return()\n[PASS] next() that succeeds; return() [no awaiting]\n[PASS] return(); next()\n[PASS] return(); next() [no awaiting]\n[PASS] underlyingSource argument should be converted after queuingStrategy argument\n[PASS] return(); return()\n[PASS] return(); return() [no awaiting]\n[PASS] Acquiring a reader after exhaustively async-iterating a stream\n[PASS] Acquiring a reader after return()ing from a stream that errors\n[PASS] Acquiring a reader after partially async-iterating a stream\n[PASS] Acquiring a reader and reading the remaining chunks after partially async-iterating a stream with preventCancel = true\n[PASS] close() while next() is pending\n[PASS] ReadableStream cancellation: integration test on an infinite stream derived from a random push source\n[PASS] ReadableStream cancellation: cancel() on a locked stream should fail and not call the underlying source cancel\n[PASS] ReadableStream cancellation: should fulfill promise when cancel callback went fine\n[PASS] ReadableStream cancellation: returning a value from the underlying source's cancel should not affect the fulfillment value of the promise returned by the stream's cancel\n[PASS] ReadableStream cancellation: should reject promise when cancel callback raises an exception\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (1)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (2)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should reject when that one does\n[PASS] ReadableStream cancellation: cancelling before start finishes should prevent pull() from being called\n[PASS] Can construct a readable stream with a valid CountQueuingStrategy\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 0)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 1)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 4)\n[PASS] ReadableStreamDefaultReader constructor should get a ReadableStream object as argument\n[PASS] ReadableStreamDefaultReader closed should always return the same promise object\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via direct construction)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via direct construction)\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via getReader)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via getReader)\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is closed\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is errored\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] getReader() should call ToString() on mode\n[PASS] Reading from a reader for an empty stream will wait until a chunk is available\n[PASS] cancel() on a reader does not release the reader\n[PASS] closed should be fulfilled after stream is closed (.closed access before acquiring)\n[PASS] closed should be rejected after reader releases its lock (multiple stream locks)\n[PASS] closed is replaced when stream closes and reader releases its lock\n[PASS] closed is replaced when stream errors and reader releases its lock\n[PASS] Multiple readers can access the stream in sequence\n[PASS] Cannot use an already-released reader to unlock a stream again\n[PASS] cancel() on a released reader is a no-op and does not pass through\n[PASS] Getting a second reader after erroring the stream and releasing the reader should succeed\n[PASS] ReadableStreamDefaultReader closed promise should be rejected with undefined if that is the error\n[PASS] ReadableStreamDefaultReader: if start rejects with no parameter, it should error the stream with an undefined error\n[PASS] Erroring a ReadableStream after checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Erroring a ReadableStream before checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Reading twice on a stream that gets closed\n[PASS] Reading twice on a closed stream\n[PASS] ReadableStream.from throws on invalid iterables; specifically null\n[PASS] Reading twice on an errored stream\n[PASS] ReadableStream.from throws on invalid iterables; specifically undefined\n[PASS] ReadableStream.from throws on invalid iterables; specifically 0\n[PASS] Reading twice on a stream that gets errored\n[PASS] ReadableStream.from throws on invalid iterables; specifically NaN\n[PASS] controller.close() should clear the list of pending read requests\n[PASS] ReadableStream.from throws on invalid iterables; specifically true\n[PASS] Second reader can read chunks after first reader was released with pending read requests\n[PASS] ReadableStream.from throws on invalid iterables; specifically {}\n[PASS] ReadableStream.from throws on invalid iterables; specifically Object.create(null)\n[PASS] ReadableStream.from throws on invalid iterables; specifically a function\n[PASS] ReadableStream.from throws on invalid iterables; specifically a symbol\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@iterator method\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@asyncIterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@iterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@asyncIterator method\n[PASS] ReadableStream.from ignores @@iterator if @@asyncIterator exists\n[PASS] ReadableStream.from accepts an array of values\n[PASS] ReadableStream.from accepts an array of promises\n[PASS] ReadableStream.from accepts an array iterator\n[PASS] ReadableStream.from accepts a string\n[PASS] ReadableStream.from accepts a Set\n[PASS] ReadableStream.from accepts a Set iterator\n[PASS] ReadableStream.from accepts a sync generator\n[PASS] ReadableStream.from accepts an async generator\n[PASS] ReadableStream.from accepts a sync iterable of values\n[PASS] ReadableStream.from accepts a sync iterable of promises\n[PASS] ReadableStream can be constructed with no errors\n[PASS] ReadableStream.from accepts an async iterable\n[PASS] ReadableStream can't be constructed with garbage\n[PASS] ReadableStream can't be constructed with an invalid type\n[PASS] ReadableStream constructor should throw for non-function start arguments\n[PASS] ReadableStream.from accepts a ReadableStream\n[PASS] ReadableStream.from accepts a ReadableStream async iterator\n[PASS] ReadableStream constructor will not tolerate initial garbage as cancel argument\n[PASS] ReadableStream.from accepts an empty iterable\n[PASS] ReadableStream constructor will not tolerate initial garbage as pull argument\n[PASS] ReadableStream start should be called with the proper thisArg\n[PASS] ReadableStream.from: stream errors when next() rejects\n[PASS] ReadableStream start controller parameter should be extensible\n[PASS] default ReadableStream getReader() should only accept mode:undefined\n[PASS] ReadableStream: enqueue should throw when the stream is readable but draining\n[PASS] ReadableStream: enqueue should throw when the stream is closed\n[PASS] ReadableStream: desiredSize when closed\n[PASS] ReadableStream.from: stream stalls when next() never settles\n[PASS] ReadableStream: desiredSize when errored\n[PASS] Subclassing ReadableStream should work\n[PASS] ReadableStream strategies: the default strategy should give desiredSize of 1 to start, decreasing by 1 per enqueue\n[PASS] ReadableStream should be able to call start method within prototype chain of its source\n[EXPECTED_FAILURE][FAIL] Transferred MessageChannel works as expected\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[EXPECTED_FAILURE][FAIL] Second branch of owning ReadableStream tee should end up into errors with transfer only values\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[PASS] ReadableStream.from: calls next() after first read()\n[PASS] ReadableStream start should be able to return a promise\n[PASS] ReadableStream.from: cancelling the returned stream calls and awaits return()\n[PASS] ReadableStream.from: return() is not called when iterator completes normally\n[PASS] ReadableStream.from: cancel() rejects when return() fulfills with a non-object\n[PASS] ReadableStream start should be able to return a promise and reject it\n[PASS] ReadableStream should be able to enqueue different objects.\n[PASS] ReadableStream: if pull rejects, it should error the stream\n[EXPECTED_FAILURE][FAIL] ReadableStream can be constructed with owning type\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:7:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:6:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should call start with a ReadableStreamDefaultController\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:22:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:10:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[PASS] ReadableStream.from: reader.read() inside next()\n[PASS] ReadableStream.from: reader.cancel() inside next()\n[EXPECTED_FAILURE][FAIL] ReadableStream should be able to call enqueue with an empty transfer list\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:38:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:26:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[PASS] ReadableStream.from: reader.cancel() inside return()\n[PASS] ReadableStream.from(array), push() to array while reading\n[EXPECTED_FAILURE][FAIL] ReadableStream should check transfer parameter\nassert_throws_js: transfer list is not empty function \"() => { controller.enqueue(buffer, { transfer : [ buffer ] }); }\" did not throw\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:50:7)\n    at setupReadableStreamDefaultController (node:internal/webstreams/readablestream:2440:23)\n    at setupReadableStreamDefaultControllerFromSource (node:internal/webstreams/readablestream:2472:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:278:7)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should transfer enqueued chunks\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[PASS] ReadableStream: should only call pull once upon starting the stream\n[PASS] ReadableStreamController methods should continue working properly when scripts lose their reference to the readable stream\n[PASS] ReadableStream: should call pull when trying to read from a started, empty stream\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from before start fulfills\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from after start fulfills\n[PASS] ReadableStream: should call pull in reaction to read()ing the last chunk, if not draining\n[PASS] ReadableStream closed promise should fulfill even if the stream and reader JS references are lost\n[PASS] ReadableStream: should not call pull() in reaction to read()ing the last chunk, if draining\n[PASS] ReadableStream tee() should not touch Object.prototype properties\n[PASS] ReadableStream tee() should not call the global ReadableStream\n[PASS] tee() should not call Promise.prototype.then()\n[PASS] pipeTo() should not call Promise.prototype.then()\n[PASS] ReadableStream: should not call pull until the previous pull call's promise fulfills\n[PASS] enqueue() inside size() should work\n[PASS] close() inside size() should not crash\n[PASS] close request inside size() should work\n[PASS] error() inside size() should work\n[PASS] desiredSize inside size() should work\n[PASS] cancel() inside size() should work\n[PASS] ReadableStream async iterator should use the original values of getReader() and ReadableStreamDefaultReader methods\n[PASS] ReadableStream teeing: rs.tee() returns an array of two ReadableStreams\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing\n[PASS] ReadableStreamTee should not use a modified ReadableStream constructor from the global object\n[PASS] pipeTo() inside size() should behave as expected\n[PASS] ReadableStream: should pull after start, and after every read\n[PASS] ReadableStream: should not call pull after start if the stream is now closed\n[PASS] ReadableStream: should call pull after enqueueing from inside pull (with no read requests), if strategy allows\n[PASS] ReadableStream pull should be able to close a stream.\n[PASS] ReadableStream pull should be able to error a stream.\n[PASS] ReadableStream pull should be able to error a stream and throw.\n[PASS] ReadableStream teeing: should be able to read one branch to the end without affecting the other\n[PASS] ReadableStream teeing: values should be equal across each branch\n[PASS] read() inside of size() should behave as expected\n[PASS] ReadableStream: should call underlying source methods as methods\n[PASS] getReader() inside size() should work\n[PASS] ReadableStream strategies: the default strategy should continue giving desiredSize of 1 if the chunks are read immediately\n[PASS] ReadableStream teeing: errors in the source should propagate to both branches\n[PASS] tee() inside size() should work\n[PASS] ReadableStream teeing: canceling branch1 should not impact branch2\n[PASS] ReadableStream teeing: canceling branch2 should not impact branch1\n[PASS] Running templatedRSEmpty with ReadableStream (empty)\n[PASS] ReadableStream teeing: canceling both branches should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] ReadableStream (empty): instances have the correct methods and properties\n[PASS] ReadableStream (empty): calling getReader with invalid arguments should throw appropriate errors\n[PASS] Running templatedRSEmptyReader with ReadableStream (empty) reader\n[PASS] ReadableStream closed promise should reject even if stream and reader JS references are lost\n[PASS] ReadableStream teeing: erroring a teed stream should properly handle canceled branches\n[PASS] ReadableStream teeing: erroring a teed stream should error both branches\n[PASS] ReadableStream teeing: closing the original should immediately close the branches\n[PASS] ReadableStream teeing: erroring the original should immediately error the branches\n[PASS] ReadableStream teeing: canceling branch1 should finish when branch2 reads until end of stream\n[PASS] ReadableStream (empty) reader: instances have the correct methods and properties\n[PASS] ReadableStream (empty) reader: locked should be true\n[PASS] ReadableStream teeing: canceling branch1 should finish when original stream errors\n[PASS] ReadableStream (empty) reader: read() should return distinct promises each time\n[PASS] ReadableStream (empty) reader: getReader() again on the stream should fail\n[PASS] ReadableStream (empty) reader: releasing the lock should cause locked to become false\n[PASS] Running templatedRSClosed with ReadableStream (closed via call in start)\n[PASS] ReadableStream teeing: canceling both branches in sequence with delay\n[PASS] ReadableStream (closed via call in start): locked should be false\n[PASS] ReadableStream (closed via call in start): getReader() should be OK\n[PASS] ReadableStream (closed via call in start): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream (closed via call in start): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed before getting reader)\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed after getting reader)\n[PASS] Running templatedRSClosed with ReadableStream (closed via cancel)\n[PASS] ReadableStream (closed via cancel): locked should be false\n[PASS] ReadableStream (closed via cancel): getReader() should be OK\n[PASS] ReadableStream (closed via cancel): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream (closed via cancel): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed via cancel after getting reader)\n[PASS] Running templatedRSErrored with ReadableStream (errored via call in start)\n[PASS] ReadableStream (errored via call in start): locked should be false\n[PASS] ReadableStream teeing: failing to cancel when canceling both branches in sequence with delay\n[PASS] Running templatedRSErroredSyncOnly with ReadableStream (errored via call in start)\n[PASS] ReadableStream integration test: adapting a random push source\n[PASS] ReadableStream (errored via call in start): should not be able to obtain additional readers if we don't release the first lock\n[PASS] Running templatedRSErrored with ReadableStream (errored via returning a rejected promise in start)\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object ReadableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] ReadableStream (errored via returning a rejected promise in start): locked should be false\n[PASS] Running templatedRSErroredReader with ReadableStream (errored via returning a rejected promise in start) reader\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored before getting reader)\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored after getting reader)\n[PASS] Running templatedRSTwoChunksOpenReader with ReadableStream (two chunks enqueued, still open) reader\n[PASS] ReadableStream integration test: adapting a sync pull source\n[PASS] Transferring [object ReadableStream],[object TransformStream] should fail\n[PASS] ReadableStream (two chunks enqueued, still open) reader: read() should return distinct promises each time\n[PASS] Running templatedRSTwoChunksClosedReader with ReadableStream (two chunks enqueued, then closed) reader\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object WritableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] Transferring [object WritableStream],[object TransformStream] should fail\n[PASS] ReadableStreamTee should not pull more chunks than can fit in the branch queue\n[PASS] ReadableStreamTee should only pull enough to fill the emptiest queue\n[PASS] ReadableStreamTee should not pull when original is already errored\n[PASS] ReadableStream integration test: adapting an async pull source\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 1 is reading\n[PASS] Garbage-collecting a ReadableStreamDefaultReader should not unlock its stream\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 2 is reading\n[PASS] ReadableStreamTee stops pulling when original stream errors while both branches are reading\n[PASS] ReadableStream teeing: enqueue() and close() while both branches are pulling\n[PASS] backpressure allows no transforms with a default identity transform and no reader\n[PASS] backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader\n[PASS] transform() should keep being called as long as there is no backpressure\n[PASS] writes should resolve as soon as transform completes\n[PASS] calling pull() before the first write() with backpressure should work\n[PASS] transform() should be able to read the chunk it just enqueued\n[PASS] cancelling the readable side should call transformer.cancel()\n[PASS] cancelling the readable side should reject if transformer.cancel() throws\n[PASS] aborting the writable side should call transformer.abort()\n[PASS] aborting the writable side should reject if transformer.cancel() throws\n[PASS] closing the writable side should reject if a parallel transformer.cancel() throws\n[PASS] readable.cancel() and a parallel writable.close() should reject if a transformer.cancel() calls controller.error()\n[PASS] writable.abort() and readable.cancel() should reject if a transformer.cancel() calls controller.error()\n[PASS] blocking transform() should cause backpressure\n[PASS] writer.closed should resolve after readable is canceled during start\n[PASS] writer.closed should resolve after readable is canceled with backpressure\n[PASS] writer.closed should resolve after readable is canceled with no backpressure\n[PASS] cancelling the readable should cause a pending write to resolve\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe after startup\n[PASS] errored TransformStream should not enqueue new chunks\n[PASS] TransformStream constructor should throw when start does\n[PASS] when strategy.size throws inside start(), the constructor should throw the same error\n[PASS] cancelling the readable side of a TransformStream should abort a full pipe\n[PASS] when strategy.size calls controller.error() then throws, the constructor should throw the first error\n[PASS] TransformStream errors thrown in transform put the writable and readable in an errored state\n[PASS] TransformStream errors thrown in flush put the writable and readable in an errored state\n[PASS] TransformStream flush is called immediately when the writable is closed, if no writes are queued\n[PASS] TransformStream flush is called after all queued writes finish, once the writable is closed\n[PASS] TransformStream transformer.start() rejected promise should error the stream\n[PASS] TransformStream flush gets a chance to enqueue more into the readable\n[PASS] TransformStream flush gets a chance to enqueue more into the readable, and can then async close\n[PASS] error() during flush should cause writer.close() to reject\n[PASS] closing the writable side should call transformer.flush() and a parallel readable.cancel() should not reject\n[PASS] when controller.error is followed by a rejection, the error reason should come from controller.error\n[PASS] cancelling the readable side should error the writable\n[PASS] it should be possible to error the readable between close requested and complete\n[PASS] an exception from transform() should error the stream if terminate has been requested but not completed\n[PASS] abort should set the close reason for the writable when it happens before cancel during start, and cancel should reject\n[PASS] abort should set the close reason for the writable when it happens before cancel during underlying sink write, but cancel should still succeed\n[PASS] TransformStream can be constructed with a transform function\n[PASS] TransformStream can be constructed with no transform function\n[PASS] TransformStream writable starts in the writable state\n[PASS] controller.error() should do nothing the second time it is called\n[PASS] controller.error() should close writable immediately after readable.cancel()\n[PASS] controller.error() should do nothing after readable.cancel() resolves\n[PASS] enqueue() should throw after controller.terminate()\n[PASS] controller.error() should do nothing after writable.abort() has completed\n[PASS] controller.terminate() should do nothing the second time it is called\n[PASS] controller.error() should do nothing after a transformer method has thrown an exception\n[PASS] specifying a defined readableType should throw\n[PASS] specifying a defined writableType should throw\n[PASS] Subclassing TransformStream should work\n[PASS] erroring during write with backpressure should result in the write failing\n[PASS] a write() that was waiting for backpressure should reject if the writable is aborted\n[PASS] the readable should be errored with the reason passed to the writable abort() method\n[PASS] Identity TransformStream: can read from readable what is put into writable\n[PASS] Uppercaser sync TransformStream: can read from readable transformed version of what is put into writable\n[PASS] Uppercaser-doubler sync TransformStream: can read both chunks put into the readable\n[PASS] Uppercaser async TransformStream: can read from readable transformed version of what is put into writable\n[PASS] Uppercaser-doubler async TransformStream: can read both chunks put into the readable\n[PASS] TransformStream: by default, closing the writable closes the readable (when there are no queued writes)\n[PASS] TransformStream: by default, closing the writable waits for transforms to finish before closing both\n[PASS] testing \"\" (length 1)\n[PASS] testing \"\" (length 0)\n[PASS] testing \"{{in1}}\" (length 1)\n[PASS] testing \"z{{in1}}\" (length 1)\n[PASS] TransformStream: by default, closing the writable closes the readable after sync enqueues and async done\n[PASS] testing \"{{in1}}q\" (length 1)\n[PASS] testing \"{{in1}}{{in1}\" (length 1)\n[PASS] testing \"{{in1}}{{in1},}\" (length 2)\n[PASS] testing \"{{in1,}}\" (length 2)\n[PASS] testing \"{{,in1}}\" (length 2)\n[PASS] TransformStream: by default, closing the writable closes the readable after async enqueues and async done\n[PASS] testing \"{,{in1}}\" (length 2)\n[PASS] Transform stream should call transformer methods as methods\n[PASS] testing \"{{,in1}\" (length 2)\n[PASS] testing \"{\" (length 1)\n[PASS] methods should not not have .apply() or .call() called\n[PASS] testing \"{,\" (length 2)\n[PASS] testing \"{,{,i,n,1,},}\" (length 7)\n[PASS] testing \"{{in1}}{{in2}}{{in1}}\" (length 1)\n[PASS] testing \"{{wrong}}\" (length 1)\n[PASS] testing \"{{wron,g}}\" (length 2)\n[PASS] testing \"{{quine}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}}\" (length 1)\n[PASS] TransformStream start, transform, and flush should be strictly ordered\n[PASS] it should be possible to call transform() synchronously\n[PASS] closing the writable should close the readable when there are no queued chunks, even with backpressure\n[PASS] enqueue() should throw after readable.cancel()\n[PASS] terminate() should abort writable immediately after readable.cancel()\n[PASS] terminate() should do nothing after readable.cancel() resolves\n[PASS] start() should not be called twice\n[PASS] TransformStream constructor should not call setters for highWaterMark or size\n[PASS] TransformStream should use the original value of ReadableStream and WritableStream\n[PASS] transformer method start should be called with the right number of arguments\n[PASS] transformer method start should be called even when it's located on the prototype chain\n[PASS] transformer method transform should be called with the right number of arguments\n[PASS] transformer method transform should be called even when it's located on the prototype chain\n[PASS] transformer method flush should be called with the right number of arguments\n[PASS] transformer method flush should be called even when it's located on the prototype chain\n[PASS] enqueue() inside size() should work\n[PASS] terminate() inside size() should work\n[PASS] error() inside size() should work\n[PASS] desiredSize inside size() should work\n[PASS] readable cancel() inside size() should work\n[PASS] pipeTo() inside size() should work\n[PASS] read() inside of size() should work\n[PASS] writableStrategy highWaterMark should work\n[PASS] default writable strategy should be equivalent to { highWaterMark: 1 }\n[PASS] writer.write() inside size() should work\n[PASS] a RangeError should be thrown for an invalid highWaterMark\n[PASS] writableStrategy highWaterMark should be converted to a number\n[PASS] readableStrategy highWaterMark should be converted to a number\n[PASS] synchronous writer.write() inside size() should work\n[PASS] writer.close() inside size() should work\n[PASS] readableStrategy highWaterMark should work\n[PASS] writable should have the correct size() function\n[PASS] writer.abort() inside size() should work\n[PASS] default readable strategy should be equivalent to { highWaterMark: 0 }\n[PASS] controller.enqueue() should throw after controller.terminate()\n[PASS] a bad readableStrategy size function should cause writer.write() to reject on an identity transform\n[PASS] a bad readableStrategy size function should error the stream on enqueue even when transformer.transform() catches the exception\n[PASS] controller.terminate() should error pipeTo()\n[PASS] controller.terminate() should prevent remaining chunks from being processed\n[PASS] controller.error() after controller.terminate() with queued chunk should error the readable\n[PASS] controller.error() after controller.terminate() without queued chunk should do nothing\n[PASS] controller.terminate() inside flush() should not prevent writer.close() from succeeding\n[PASS] WritableStreamDefaultController.signal\n[PASS] Aborting a WritableStream before it starts should cause the writer's unsettled ready promise to reject\n[PASS] Aborting a WritableStream should cause the writer's fulfilled ready promise to reset to a rejected one\n[PASS] Writable stream: throwing strategy.size getter\n[PASS] reject any non-function value for strategy.size\n[PASS] abort() on a released writer rejects\n[PASS] Writable stream: throwing strategy.highWaterMark getter\n[PASS] Writable stream: invalid strategy.highWaterMark\n[PASS] Writable stream: invalid size beats invalid highWaterMark\n[PASS] Aborting a WritableStream immediately prevents future writes\n[PASS] Aborting a WritableStream prevents further writes after any that are in progress\n[PASS] Fulfillment value of writer.abort() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] Writable stream: throwing strategy.size method\n[PASS] WritableStream if sink's abort throws, the promise returned by writer.abort() rejects\n[PASS] WritableStream if sink's abort throws, the promise returned by multiple writer.abort()s is the same and rejects\n[PASS] Writable stream: invalid strategy.size return value\n[PASS] WritableStream if sink's abort throws, the promise returned by ws.abort() rejects\n[PASS] start: errors in start cause WritableStream constructor to throw\n[PASS] close: throwing getter should cause constructor to throw\n[PASS] write: throwing getter should cause write() and closed to reject\n[PASS] start: non-function start method\n[PASS] write: non-function write method\n[PASS] close: non-function close method\n[PASS] abort: non-function abort method with .apply\n[PASS] abort: throwing getter should cause abort() and closed to reject\n[PASS] WritableStream if sink's abort throws, for an abort performed during a write, the promise returned by ws.abort() rejects\n[PASS] Aborting a WritableStream passes through the given reason\n[PASS] Aborting a WritableStream puts it in an errored state with the error passed to abort()\n[PASS] Aborting a WritableStream causes any outstanding write() promises to be rejected with the reason supplied\n[PASS] Closing but then immediately aborting a WritableStream causes the stream to error\n[PASS] Closing a WritableStream and aborting it while it closes causes the stream to ignore the abort attempt\n[PASS] Aborting a WritableStream after it is closed is a no-op\n[PASS] WritableStream should NOT call underlying sink's close if no abort is supplied (historical)\n[PASS] returning a thenable from abort() should work\n[PASS] close: throwing method should cause writer close() and ready to reject\n[PASS] close: returning a rejected promise should cause writer close() and ready to reject\n[PASS] write: throwing method should cause write() and closed to reject\n[PASS] .closed should not resolve before fulfilled write()\n[PASS] .closed should not resolve before rejected write(); write() error should not overwrite abort() error\n[PASS] write: returning a promise that becomes rejected after the writer write() should cause writer write() and ready to reject\n[PASS] write: returning a rejected promise (second write) should cause writer write() and ready to reject\n[PASS] writes should be satisfied in order when aborting\n[PASS] abort: throwing method should cause abort() and closed to reject\n[PASS] writes should be satisfied in order after rejected write when aborting\n[PASS] close() should reject with abort reason why abort() is first error\n[PASS] underlying abort() should not be called until underlying write() completes\n[PASS] underlying abort() should not be called if underlying close() has started\n[PASS] if underlying close() has started and then rejects, the abort() and close() promises should reject with the underlying close rejection reason\n[PASS] an abort() that happens during a write() should trigger the underlying abort() even with a close() queued\n[PASS] if a writer is created for a stream with a pending abort, its ready should be rejected with the abort error\n[PASS] writer close() promise should resolve before abort() promise\n[PASS] writer.ready should reject on controller error without waiting for underlying write\n[PASS] writer.abort() while there is an in-flight write, and then finish the write with rejection\n[PASS] fulfillment value of writer.close() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream should be constructible with no arguments\n[PASS] underlyingSink argument should be converted after queuingStrategy argument\n[PASS] WritableStream instances should have standard methods and properties\n[PASS] WritableStreamDefaultController constructor should throw\n[PASS] WritableStreamDefaultController constructor should throw when passed an initialised WritableStream\n[PASS] WritableStreamDefaultWriter should throw unless passed a WritableStream\n[PASS] WritableStreamDefaultWriter constructor should throw when stream argument is locked\n[PASS] controller argument should be passed to start method\n[PASS] controller argument should be passed to write method\n[PASS] controller argument should not be passed to close method\n[PASS] highWaterMark should be reflected to desiredSize\n[PASS] WritableStream should be writable and ready should fulfill immediately if the strategy does not apply backpressure\n[PASS] when sink calls error asynchronously while sink close is in-flight, the stream should not become errored\n[PASS] writer.abort(), controller.error() while there is an in-flight write, and then finish the write\n[PASS] ReadableStream (empty) reader: read() should never settle\n[PASS] when sink calls error synchronously while closing, the stream should not become errored\n[PASS] when the sink throws during close, and the close is requested while a write is still in-flight, the stream should become errored during the close\n[PASS] releaseLock on a stream with a pending write in which the stream has been errored\n[PASS] releaseLock on a stream with a pending close in which controller.error() was called\n[PASS] when close is called on a WritableStream in writable state, ready should return a fulfilled promise\n[PASS] when close is called on a WritableStream in waiting state, ready promise should be fulfilled\n[PASS] when close is called on a WritableStream in waiting state, ready should be fulfilled immediately even if close takes a long time\n[PASS] returning a thenable from close() should work\n[PASS] releaseLock() should not change the result of sync close()\n[PASS] Can construct a writable stream with a valid CountQueuingStrategy\n[PASS] writer.abort(), controller.error() while there is an in-flight close, and then finish the close\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 0)\n[PASS] releaseLock() should not change the result of async close()\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 4)\n[PASS] close() should set state to CLOSED even if writer has detached\n[PASS] the promise returned by async abort during close should resolve\n[PASS] promises must fulfill/reject in the expected order on closure\n[PASS] promises must fulfill/reject in the expected order on aborted closure\n[PASS] promises must fulfill/reject in the expected order on aborted and errored closure\n[PASS] controller.error() on erroring stream should not throw\n[PASS] close() should not reject until no sink methods are in flight\n[PASS] ready promise should be initialised as fulfilled for a writer on a closed stream\n[PASS] close() on a writable stream should work\n[PASS] close() on a locked stream should reject\n[PASS] close() on an erroring stream should reject\n[PASS] controller.error() should error the stream\n[PASS] close() on an errored stream should reject\n[PASS] surplus calls to controller.error() should be a no-op\n[PASS] close() on an closed stream should reject\n[PASS] controller.error() on errored stream should not throw\n[PASS] close() on a stream with a pending close should reject\n[PASS] controller.error() on closed stream should not throw\n[PASS] controller.error(), writer.abort() while there is an in-flight write, and then finish the write\n[PASS] controller.error(), writer.abort() while there is an in-flight close, and then finish the close\n[PASS] releaseLock() while aborting should reject the original closed promise\n[PASS] releaseLock() during delayed async abort() should reject the writer.closed promise\n[PASS] sink abort() should not be called until sink start() is done\n[PASS] if start attempts to error the controller after abort() has been called, then it should lose\n[PASS] stream abort() promise should still resolve if sink start() rejects\n[PASS] writer abort() during sink start() should replace the writer.ready promise synchronously\n[PASS] promises returned from other writer methods should be rejected when writer abort() happens during sink start()\n[PASS] abort() should succeed despite rejection from write\n[PASS] abort() should be rejected with the rejection returned from close()\n[PASS] a rejecting sink.write() should not prevent sink.abort() from being called\n[PASS] when start errors after stream abort(), underlying sink abort() should be called anyway\n[PASS] when calling abort() twice on the same stream, both should give the same promise that fulfills with undefined\n[PASS] when calling abort() twice on the same stream, but sequentially so so there's no pending abort the second time, both should fulfill with undefined\n[PASS] calling abort() on an errored stream should fulfill with undefined\n[PASS] sink abort() should not be called if stream was erroring due to controller.error() before abort() was called\n[PASS] sink abort() should not be called if stream was erroring due to bad strategy before abort() was called\n[PASS] abort with no arguments should set the stored error to undefined\n[PASS] abort with an undefined argument should set the stored error to undefined\n[PASS] abort with a string argument should set the stored error to that argument\n[PASS] abort on a locked stream should reject\n[PASS] the abort signal is signalled synchronously - write\n[PASS] the abort signal is signalled synchronously - close\n[PASS] the abort signal is not signalled on error\n[PASS] the abort signal is not signalled on write failure\n[PASS] the abort signal is not signalled on close failure\n[PASS] recursive abort() call\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] desiredSize on a released writer\n[PASS] desiredSize initial value\n[PASS] desiredSize on a writer for an errored stream\n[PASS] ws.getWriter() on a closing WritableStream\n[PASS] ws.getWriter() on an aborted WritableStream\n[PASS] Subclassing WritableStream should work\n[PASS] the locked getter should return true if the stream has a writer\n[PASS] desiredSize on a writer for a closed stream\n[PASS] ws.getWriter() on a closed WritableStream\n[PASS] ws.getWriter() on an errored WritableStream\n[PASS] closed and ready on a released writer\n[PASS] sink method start should be called with the right number of arguments\n[PASS] WritableStream should call underlying sink methods as methods\n[PASS] sink method start should be called even when it's located on the prototype chain\n[PASS] methods should not not have .apply() or .call() called\n[PASS] WritableStream's strategy.size should not be called as a method\n[PASS] sink method write should be called with the right number of arguments\n[PASS] redundant releaseLock() is no-op\n[PASS] sink method write should be called even when it's located on the prototype chain\n[PASS] ready promise should fire before closed on releaseLock\n[PASS] sink method close should be called with the right number of arguments\n[PASS] sink method close should be called even when it's located on the prototype chain\n[PASS] Closing a writable stream with in-flight writes below the high water mark delays the close call properly\n[PASS] sink method abort should be called with the right number of arguments\n[PASS] sink method abort should be called even when it's located on the prototype chain\n[PASS] writes should be written in the standard order\n[PASS] writer.write() promises should resolve in the standard order\n[PASS] controller.error() should work when called from within strategy.size()\n[PASS] close() should work when called from within strategy.size()\n[PASS] abort() should work when called from within strategy.size()\n[PASS] releaseLock() should abort the write() when called within strategy.size()\n[PASS] original reader should error when new reader is created within strategy.size()\n[PASS] underlying sink's write or close should not be called if start throws\n[PASS] underlying sink's write should not be called until start finishes\n[PASS] underlying sink's close should not be called until start finishes\n[PASS] underlying sink's write or close should not be invoked if the promise returned by start is rejected\n[PASS] returning a thenable from start() should work\n[PASS] controller.error() during start should cause writes to fail\n[PASS] controller.error() during async start should cause existing writes to fail\n[PASS] when start() rejects, writer promises should reject in standard order\n[PASS] WritableStream should complete asynchronous writes before close resolves\n[PASS] WritableStream should complete synchronous writes before close resolves\n[PASS] fulfillment value of ws.write() call should be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream should transition to waiting until write is acknowledged\n[PASS] when write returns a rejected promise, queued writes and close should be cleared\n[PASS] when sink's write throws an error, the stream should become errored and the promise should reject\n[PASS] writer.write(), ready and closed reject with the error passed to controller.error() made before sink.write rejection\n[PASS] a large queue of writes should be processed completely\n[PASS] WritableStreamDefaultWriter should work when manually constructed\n[PASS] returning a thenable from write() should work\n[PASS] failing DefaultWriter constructor should not release an existing writer\n[PASS] write() on a stream with HWM 0 should not cause the ready Promise to resolve\n[PASS] writing to a released writer should reject the returned promise\n[PASS] ReadableStream (empty) reader: two read()s should both never settle\n[PASS] ReadableStream (empty) reader: releasing the lock should reject all pending read requests\n[PASS] ReadableStream (empty) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: releasing the lock should cause closed calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: canceling via the reader should cause the reader to act closed\n[PASS] ReadableStream (empty) reader: canceling via the stream should fail\n[PASS] ReadableStream (closed via call in start): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed before getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed before getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed before getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (closed via cancel): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed via cancel after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed via cancel after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed via cancel after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (errored via call in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via call in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via call in start): should be able to obtain a second reader, with the correct closed promise\n[PASS] ReadableStream (errored via call in start): cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via call in start): reader cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via returning a rejected promise in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via returning a rejected promise in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: closed should reject with the error\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: read() should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored before getting reader): read() should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored after getting reader): read() should reject with the error\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (sequential)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (nested)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: cancel() after a read() should still give that single read result\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (sequential)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (nested)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: draining the stream via read() should cause the reader closed promise to fulfill, but locked stays true\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock after the stream is closed should cause locked to become false\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: reader's closed property always returns the same promise\n\n{\n  \"idlharness-shadowrealm.window.js\": {\n    \"skip\": \"ShadowRealm support is not enabled\"\n  },\n  \"idlharness.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"piping\\\\general-addition.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"enqueue() must not synchronously call write algorithm\"\n      ]\n    }\n  },\n  \"queuing-strategies-size-function-per-global.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-byte-streams\\\\bad-buffers-and-views.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: enqueuing an already-detached buffer throws\",\n        \"ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\",\n        \"ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\",\n        \"ReadableStream with byte source: reading into an already-detached buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\enqueue-with-detached-buffer.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"enqueue after detaching byobRequest.view.buffer should throw\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\general.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: Throw if close()-ed more than once\",\n        \"ReadableStream with byte source: Throw on enqueue() after close()\",\n        \"ReadableStream with byte source: autoAllocateChunkSize\",\n        \"ReadableStream with byte source: Mix of auto allocate and BYOB\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read()\",\n        \"ReadableStream with byte source: Push source that doesn't understand pull signal\",\n        \"ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\",\n        \"ReadableStream with byte source: enqueue(), read(view) partially, then read()\",\n        \"ReadableStream with byte source: getReader(), enqueue(), close(), then read()\",\n        \"ReadableStream with byte source: enqueue(), close(), getReader(), then read()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\",\n        \"ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\",\n        \"ReadableStream with byte source: read(view), then respond()\",\n        \"ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\",\n        \"ReadableStream with byte source: read(view), then respond() with too big value\",\n        \"ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\",\n        \"ReadableStream with byte source: getReader(), read(view), then cancel()\",\n        \"ReadableStream with byte source: cancel() with partially filled pending pull() request\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\",\n        \"ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\",\n        \"ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\",\n        \"ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\",\n        \"ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\",\n        \"ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\",\n        \"ReadableStream with byte source: read(view), then respond() and close() in pull()\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\",\n        \"ReadableStream with byte source: read() twice, then enqueue() twice\",\n        \"ReadableStream with byte source: Multiple read(view), close() and respond()\",\n        \"ReadableStream with byte source: Multiple read(view), big enqueue()\",\n        \"ReadableStream with byte source: Multiple read(view) and multiple enqueue()\",\n        \"ReadableStream with byte source: read(view), then error()\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\",\n        \"calling respond() twice on the same byobRequest should throw\",\n        \"calling respondWithNewView() twice on the same byobRequest should throw\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\non-transferable-buffers.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\respond-after-enqueue.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"byobRequest.respond() after enqueue() should not crash\",\n        \"byobRequest.respond() with cached byobRequest after enqueue() should not crash\",\n        \"byobRequest.respond() after enqueue() with double read should not crash\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\tee.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\",\n        \"ReadableStream teeing with byte source: chunks should be cloned for each branch\",\n        \"ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\",\n        \"ReadableStream teeing with byte source: errors in the source should propagate to both branches\",\n        \"ReadableStream teeing with byte source: canceling branch1 should not impact branch2\",\n        \"ReadableStream teeing with byte source: canceling branch2 should not impact branch1\",\n        \"ReadableStream teeing with byte source: closing the original should close the branches\",\n        \"ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\",\n        \"ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-streams\\\\cross-realm-crash.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type-message-port.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferred MessageChannel works as expected\",\n        \"Second branch of owning ReadableStream tee should end up into errors with transfer only values\"\n      ]\n    }\n  },\n  \"readable-streams\\\\owning-type-video-frame.any.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"ReadableStream can be constructed with owning type\",\n        \"ReadableStream of type owning should call start with a ReadableStreamDefaultController\",\n        \"ReadableStream should be able to call enqueue with an empty transfer list\",\n        \"ReadableStream should check transfer parameter\",\n        \"ReadableStream of type owning should transfer enqueued chunks\"\n      ]\n    }\n  },\n  \"readable-streams\\\\read-task-handling.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\deserialize-error.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transfer-with-messageport.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transform-stream-members.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferring [object TransformStream],[object ReadableStream] should fail\",\n        \"Transferring [object TransformStream],[object WritableStream] should fail\"\n      ]\n    }\n  },\n  \"transform-streams\\\\invalid-realm.tentative.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  }\n}\n\nRan 65/73 tests, 8 skipped, 54 passed, 4 expected failures, 7 unexpected failures, 0 unexpected passes\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 7 unexpected failures. Consider updating test\\wpt\\status\\streams.json for these files:\nidlharness.any.js\nreadable-byte-streams\\bad-buffers-and-views.any.js\nreadable-byte-streams\\enqueue-with-detached-buffer.any.js\nreadable-byte-streams\\general.any.js\nreadable-byte-streams\\non-transferable-buffers.any.js\nreadable-byte-streams\\respond-after-enqueue.any.js\nreadable-byte-streams\\tee.any.js\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":2574.041,"fullname":"wpt/test-streams","closingTestPoint":false}},{"testName":"parallel/test-blob-file-backed","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2022_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob-file-backed","id":85,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Can't clean tmpdir: C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.78\nFiles blocking: [ 'test-file-backed-blob.txt', 'test-file-backed-blob2.txt' ]\n\nnode:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n\nNode.js v22.0.0-pre"},"time":873.736,"fullname":"parallel/test-blob-file-backed","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2022_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream","id":847,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream.js:245:14)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":163.014,"fullname":"parallel/test-whatwg-readablebytestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-webstreams-transfer","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2022_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-webstreams-transfer","id":860,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:133:18)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:129:20)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n\nNode.js v22.0.0-pre"},"time":321.81,"fullname":"parallel/test-whatwg-webstreams-transfer","closingTestPoint":false}},{"testName":"wpt/test-structured-clone","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2022_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-structured-clone","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[PASS] primitive undefined\n[PASS] primitive null\n[PASS] primitive true\n[PASS] primitive false\n[PASS] primitive string, empty string\n[PASS] primitive string, lone high surrogate\n[PASS] primitive string, lone low surrogate\n[PASS] primitive string, NUL\n[PASS] primitive string, astral character\n[PASS] primitive number, 0.2\n[PASS] primitive number, 0\n[PASS] primitive number, -0\n[PASS] primitive number, NaN\n[PASS] primitive number, Infinity\n[PASS] primitive number, -Infinity\n[PASS] primitive number, 9007199254740992\n[PASS] primitive number, -9007199254740992\n[PASS] primitive number, 9007199254740994\n[PASS] primitive number, -9007199254740994\n[PASS] primitive BigInt, 0n\n[PASS] primitive BigInt, -0n\n[PASS] primitive BigInt, -9007199254740994000n\n[PASS] primitive BigInt, -9007199254740994000900719925474099400090071992547409940009007199254740994000n\n[PASS] Array primitives\n[PASS] Object primitives\n[PASS] Boolean true\n[PASS] Boolean false\n[PASS] Array Boolean objects\n[PASS] Object Boolean objects\n[PASS] String empty string\n[PASS] String lone high surrogate\n[PASS] String lone low surrogate\n[PASS] String NUL\n[PASS] String astral character\n[PASS] Array String objects\n[PASS] Object String objects\n[PASS] Number 0.2\n[PASS] Number 0\n[PASS] Number -0\n[PASS] Number NaN\n[PASS] Number Infinity\n[PASS] Number -Infinity\n[PASS] Number 9007199254740992\n[PASS] Number -9007199254740992\n[PASS] Number 9007199254740994\n[PASS] Number -9007199254740994\n[PASS] BigInt -9007199254740994n\n[PASS] Array Number objects\n[PASS] Object Number objects\n[PASS] Date 0\n[PASS] Date -0\n[PASS] Date -8.64e15\n[PASS] Date 8.64e15\n[PASS] Array Date objects\n[PASS] Object Date objects\n[PASS] RegExp flags and lastIndex\n[PASS] RegExp sticky flag\n[PASS] RegExp unicode flag\n[PASS] RegExp empty\n[PASS] RegExp slash\n[PASS] RegExp new line\n[PASS] Array RegExp object, RegExp flags and lastIndex\n[PASS] Array RegExp object, RegExp sticky flag\n[PASS] Array RegExp object, RegExp unicode flag\n[PASS] Array RegExp object, RegExp empty\n[PASS] Array RegExp object, RegExp slash\n[PASS] Array RegExp object, RegExp new line\n[PASS] Object RegExp object, RegExp flags and lastIndex\n[PASS] Object RegExp object, RegExp sticky flag\n[PASS] Object RegExp object, RegExp unicode flag\n[PASS] Object RegExp object, RegExp empty\n[PASS] Object RegExp object, RegExp slash\n[PASS] Object RegExp object, RegExp new line\n[UNEXPECTED_FAILURE][FAIL] Blob basic\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired high surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired low surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob paired surrogates (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Blob empty\n[UNEXPECTED_FAILURE][FAIL] Blob NUL\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array Blob object, Blob basic\n[PASS] Array Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Array Blob object, Blob empty\n[PASS] Array Blob object, Blob NUL\n[PASS] Array Blob object, two Blobs\n[PASS] Object Blob object, Blob basic\n[PASS] Object Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Object Blob object, Blob empty\n[PASS] Object Blob object, Blob NUL\n[EXPECTED_FAILURE][FAIL] File basic\nassert_true: instanceof File expected true got false\n    at compare_File (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:352:3)\n    at Object.f (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:19:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests-harness.js:37:9)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array sparse\n[PASS] Array with non-index property\n[PASS] Object with index property and length\n[PASS] Array with circular reference\n[PASS] Object with circular reference\n[PASS] Array with identical property values\n[PASS] Object with identical property values\n[PASS] Object with property on prototype\n[PASS] Object with non-enumerable property\n[PASS] Object with non-writable property\n[PASS] Object with non-configurable property\n[PASS] ObjectPrototype must lose its exotic-ness when cloned\n[PASS] ArrayBuffer\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n    at readNext (node:internal/blob:335:18)\n    at Object.pull (node:internal/blob:382:9)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n\n{\n  \"structured-clone.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob basic\",\n        \"Blob unpaired high surrogate (invalid utf-8)\",\n        \"Blob unpaired low surrogate (invalid utf-8)\",\n        \"Blob paired surrogates (invalid utf-8)\",\n        \"Blob NUL\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ],\n      \"expected\": [\n        \"File basic\"\n      ]\n    }\n  }\n}\n\nRan 1/1 tests, 0 skipped, -1 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\html\\webappapis\\structured-clone.json for these files:\nstructured-clone.any.js\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":312.405,"fullname":"wpt/test-structured-clone","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2022_vs2022-x64-6","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":846,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablestream.js:1659:10)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":326.996,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"parallel/test-filehandle-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-filehandle-readablestream","id":254,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-filehandle-readablestream.js:101:27\n\nNode.js v22.0.0-pre"},"time":214.005,"fullname":"parallel/test-filehandle-readablestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","id":848,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:57:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:55:18)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n\nNode.js v22.0.0-pre"},"time":137.004,"fullname":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":849,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at file:///c:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-whatwg-readablestream.mjs:51:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n\nNode.js v22.0.0-pre"},"time":185,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"wpt/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-blob","id":964,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] Blob-constructor-dom.window.js: Depends on DOM API\n[SKIPPED] Blob-in-worker.worker.js: Depends on Web Workers API\n[SKIPPED] Blob-slice.any.js: Depends on File API\n[PASS] Blob.arrayBuffer()\n[PASS] Blob.arrayBuffer() empty Blob data\n[PASS] Blob.arrayBuffer() non-ascii input\n[PASS] Blob interface object\n[PASS] Blob constructor with no arguments\n[PASS] Blob constructor with no arguments, without 'new'\n[PASS] Blob constructor without brackets\n[PASS] Blob constructor with undefined as first argument\n[PASS] Blob.arrayBuffer() non-unicode input\n[PASS] Blob.arrayBuffer() concurrent reads\n[PASS] slice start is negative, relativeStart will be max((size + start), 0)\n[PASS] slice start is greater than blob size, relativeStart will be min(start, size)\n[PASS] slice end is negative, relativeEnd will be max((size + end), 0)\n[PASS] slice end is greater than blob size, relativeEnd will be min(end, size)\n[PASS] Passing non-objects, Dates and RegExps for blobParts should throw a TypeError.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:58:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] A plain object with custom @@iterator should be treated as a sequence for the blobParts argument.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:81:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] A String object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:92:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] A Uint8Array object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:99:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] The length getter should be invoked and any exceptions should be propagated.\n[PASS] ToUint32 should be applied to the length and any exceptions should be propagated.\n[EXPECTED_FAILURE][FAIL] Getters and value conversions should happen in order until an exception is thrown.\nassert_array_equals: lengths differ, expected array [\"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 8, got [\"Symbol.iterator\", \"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 9\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:179:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:142:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] ToString should be called on elements of the blobParts array and any exceptions should be propagated.\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (pop).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:211:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (unshift).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:223:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ToString should be called on elements of the blobParts array.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:251:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ArrayBuffer elements of the blobParts array should be supported.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:275:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:285:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing a Float64Array as element of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:300:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing BigInt typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:314:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two blobs\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:337:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two buffers\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:346:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two bufferviews\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:355:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with mixed types\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:367:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] options properties should be accessed in lexicographic order.\nassert_array_equals: expected property 0 to be \"endings\" but got \"type\" (expected array [\"endings\", \"type\"] got [\"type\", \"endings\"])\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:389:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:377:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Arguments should be evaluated from left to right.\nassert_unreached: type getter should not be called. Reached unreachable code\n    at get type [as type] (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:398:22)\n    at new Blob (node:internal/blob:150:7)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:395:5\n    at assert_throws_exactly_impl (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2332:18)\n    at assert_throws_exactly (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2319:9)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Passing 123 for options should throw\n[PASS] Passing 123.4 for options should throw\n[PASS] Passing true for options should throw\n[PASS] Passing \"abc\" for options should throw\n[PASS] Blob with type \"\"\n[PASS] Blob with type \"a\"\n[PASS] Blob with type \"A\"\n[PASS] Blob with type \"text/html\"\n[PASS] Blob with type \"TEXT/HTML\"\n[PASS] Blob with type \"text/plain;charset=utf-8\"\n[PASS] Blob with type \"å\"\n[PASS] Blob with type \"𐑾\"\n[PASS] Blob with type \" image/gif \"\n[PASS] Blob with type \"\\timage/gif\\t\"\n[PASS] Blob with type \"image/gif;\"\n[PASS] Blob with type \"İmage/gif\"\n[PASS] Blob with type \"ımage/gif\"\n[PASS] Blob with type \"image/gif\\0\"\n[PASS] Blob with type \"unknown/unknown\"\n[PASS] Blob with type \"text/plain\"\n[PASS] Blob with type \"image/png\"\n[PASS] Passing a FrozenArray as the blobParts array should work (FrozenArray<MessagePort>).\n[UNEXPECTED_FAILURE][FAIL] Blob.stream()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.stream() empty Blob\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() non-unicode input\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.text()\n[PASS] Blob.text() empty blob data\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() garbage collection of blob shouldn't break streamconsumption\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.text() multi-element array in constructor\n[PASS] Blob.text() non-unicode\n[UNEXPECTED_FAILURE][FAIL] Reading Blob.stream() with BYOB reader\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.text() different charset param in type option\n[PASS] Blob.text() different charset param with non-ascii input\n[PASS] Blob.text() invalid utf-8 input\n[PASS] Blob.text() concurrent reads\n\n{\n  \"Blob-constructor-dom.window.js\": {\n    \"skip\": \"Depends on DOM API\"\n  },\n  \"Blob-constructor.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"A plain object with @@iterator should be treated as a sequence for the blobParts argument.\",\n        \"A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\",\n        \"A String object should be treated as a sequence for the blobParts argument.\",\n        \"A Uint8Array object should be treated as a sequence for the blobParts argument.\",\n        \"Getters and value conversions should happen in order until an exception is thrown.\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (pop).\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (unshift).\",\n        \"ToString should be called on elements of the blobParts array.\",\n        \"ArrayBuffer elements of the blobParts array should be supported.\",\n        \"Passing typed arrays as elements of the blobParts array should work.\",\n        \"Passing a Float64Array as element of the blobParts array should work.\",\n        \"Passing BigInt typed arrays as elements of the blobParts array should work.\",\n        \"Array with two blobs\",\n        \"Array with two buffers\",\n        \"Array with two bufferviews\",\n        \"Array with mixed types\",\n        \"options properties should be accessed in lexicographic order.\",\n        \"Arguments should be evaluated from left to right.\",\n        \"Passing null (index 0) for options should use the defaults.\",\n        \"Passing null (index 0) for options should use the defaults (with newlines).\",\n        \"Passing undefined (index 1) for options should use the defaults.\",\n        \"Passing undefined (index 1) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults.\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults (with newlines).\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults.\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults (with newlines).\"\n      ]\n    }\n  },\n  \"Blob-in-worker.worker.js\": {\n    \"skip\": \"Depends on Web Workers API\"\n  },\n  \"Blob-slice.any.js\": {\n    \"skip\": \"Depends on File API\"\n  },\n  \"Blob-stream.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob.stream()\",\n        \"Blob.stream() non-unicode input\",\n        \"Blob.stream() garbage collection of blob shouldn't break streamconsumption\",\n        \"Reading Blob.stream() with BYOB reader\"\n      ]\n    }\n  }\n}\n\nRan 5/8 tests, 3 skipped, 3 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nc:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\FileAPI\\blob.json for these files:\nBlob-stream.any.js\n    at process.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":286.214,"fullname":"wpt/test-blob","closingTestPoint":false}},{"testName":"wpt/test-streams","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-streams","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] idlharness-shadowrealm.window.js: ShadowRealm support is not enabled\n[SKIPPED] queuing-strategies-size-function-per-global.window.js: Browser-specific test\n[SKIPPED] readable-streams\\cross-realm-crash.window.js: Browser-specific test\n[SKIPPED] readable-streams\\owning-type-video-frame.any.js: Browser-specific test\n[SKIPPED] readable-streams\\read-task-handling.window.js: Browser-specific test\n[SKIPPED] transferable\\deserialize-error.window.js: Browser-specific test\n[SKIPPED] transferable\\transfer-with-messageport.window.js: Browser-specific test\n[SKIPPED] transform-streams\\invalid-realm.tentative.window.js: Browser-specific test\n[PASS] a signal argument 'null' should cause pipeTo() to reject\n[PASS] a signal argument 'AbortSignal' should cause pipeTo() to reject\n[PASS] a signal argument 'true' should cause pipeTo() to reject\n[PASS] a signal argument '-1' should cause pipeTo() to reject\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; rejected cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] a signal argument '[object AbortSignal]' should cause pipeTo() to reject\n[PASS] Closing must be propagated backward: starts closed; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = a (truthy)\n[PASS] an aborted signal should cause the writable stream to reject with an AbortError\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 1 (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = Symbol() (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = [object Object] (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] (reason: 'null') all the error objects should be the same object\n[PASS] (reason: 'undefined') all the error objects should be the same object\n[PASS] (reason: 'error1: error1') all the error objects should be the same object\n[PASS] preventCancel should prevent canceling the readable\n[PASS] preventAbort should prevent aborting the readable\n[PASS] preventCancel and preventAbort should prevent canceling the readable and aborting the readable\n[PASS] (reason: 'null') abort should prevent further reads\n[PASS] (reason: 'undefined') abort should prevent further reads\n[PASS] (reason: 'error1: error1') abort should prevent further reads\n[PASS] (reason: 'null') all pending writes should complete on abort\n[PASS] (reason: 'undefined') all pending writes should complete on abort\n[PASS] (reason: 'error1: error1') all pending writes should complete on abort\n[PASS] a rejection from underlyingSource.cancel() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be preferred to one from underlyingSource.cancel()\n[PASS] abort signal takes priority over closed readable\n[PASS] abort signal takes priority over errored readable\n[PASS] abort signal takes priority over closed writable\n[PASS] abort signal takes priority over errored writable\n[PASS] abort should do nothing after the readable is closed\n[PASS] abort should do nothing after the readable is errored\n[PASS] abort should do nothing after the readable is errored, even with pending writes\n[PASS] abort should do nothing after the writable is errored\n[PASS] pipeTo on a teed readable byte stream should only be aborted when both branches are aborted\n[PASS] idl_test validation\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\idlharness.any.js:43:14\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\idlharness.js:3522:28\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'idlharness.any.js'\n\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; rejected close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = undefined (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = null (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = false (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = 0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = -0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = NaN (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose =  (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = true (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = a (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = 1 (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = Symbol() (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = [object Object] (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true, preventCancel = true\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: starts errored; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = a (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 1 (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = Symbol() (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = [object Object] (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write, preventCancel = true; preventAbort = true\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel = true\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; fulfilled cancel promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = undefined (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = null (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = -0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = NaN (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort =  (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = a (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 1 (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = Symbol() (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = [object Object] (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true, preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; rejected cancel promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = true\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose = true\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = true\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel = true\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel omitted (but cancel is never called)\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; fulfilled cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose = true\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel = true\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; fulfilled abort promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated backward: erroring via the controller errors once pending write completes\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = true\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; preventClose = true\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = true\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks, but then does\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Piping from an empty ReadableStream into a WritableStream that does not desire chunks, but then the readable stream becomes non-empty and the writable stream starts desiring chunks\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write\n[PASS] Piping from a ReadableStream to a WritableStream that desires more chunks before finishing with previous ones\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; preventAbort = true\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write; preventClose = true\n[PASS] Closing must be propagated forward: erroring the writable while flushing pending writes should error pipeTo\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write\n[EXPECTED_FAILURE][FAIL] enqueue() must not synchronously call write algorithm\nassert_false: write algorithm must not run synchronously expected false got true\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\piping\\general-addition.any.js:14:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'piping\\general-addition.any.js'\n\n[PASS] Piping must lock both the ReadableStream and WritableStream\n[PASS] Piping finishing must unlock both the ReadableStream and WritableStream\n[PASS] pipeTo must check the brand of its ReadableStream this value\n[PASS] pipeTo must check the brand of its WritableStream argument\n[PASS] pipeTo must fail if the ReadableStream is locked, and not lock the WritableStream\n[PASS] pipeTo must fail if the WritableStream is locked, and not lock the ReadableStream\n[PASS] Piping from a ReadableStream from which lots of chunks are synchronously readable\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write; preventAbort = true\n[PASS] Piping from a ReadableStream for which a chunk becomes asynchronously readable after the pipeTo\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is true\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is false\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is true\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is false\n[PASS] pipeTo() should reject if an option getter grabs a writer\n[PASS] pipeTo() promise should resolve if null is passed\n[PASS] Piping from an errored readable stream to an erroring writable stream\n[PASS] Piping from an errored readable stream to an errored writable stream\n[PASS] Piping from an errored readable stream to an erroring writable stream; preventAbort = true\n[PASS] Piping from an errored readable stream to an errored writable stream; preventAbort = true\n[PASS] Piping from an errored readable stream to a closing writable stream\n[PASS] pipeThrough should not call pipeTo on this\n[PASS] pipeThrough should not call pipeTo on the ReadableStream prototype\n[PASS] pipeThrough should brand-check this and not allow 'null'\n[PASS] pipeThrough should brand-check readable and not allow 'null'\n[PASS] pipeThrough should brand-check this and not allow 'undefined'\n[PASS] pipeThrough should brand-check readable and not allow 'undefined'\n[PASS] pipeThrough should brand-check this and not allow '0'\n[PASS] pipeThrough should brand-check readable and not allow '0'\n[PASS] pipeThrough should brand-check this and not allow 'NaN'\n[PASS] pipeThrough should brand-check readable and not allow 'NaN'\n[PASS] pipeThrough should brand-check this and not allow 'true'\n[PASS] pipeThrough should brand-check readable and not allow 'true'\n[PASS] pipeThrough should brand-check this and not allow 'ReadableStream'\n[PASS] pipeThrough should brand-check readable and not allow 'ReadableStream'\n[PASS] pipeThrough should brand-check this and not allow '[object ReadableStream]'\n[PASS] pipeThrough should brand-check readable and not allow '[object ReadableStream]'\n[PASS] pipeThrough should brand-check writable and not allow 'null'\n[PASS] pipeThrough should brand-check writable and not allow 'undefined'\n[PASS] pipeThrough should brand-check writable and not allow '0'\n[PASS] pipeThrough should brand-check writable and not allow 'NaN'\n[PASS] pipeThrough should brand-check writable and not allow 'true'\n[PASS] pipeThrough should brand-check writable and not allow 'WritableStream'\n[PASS] pipeThrough should brand-check writable and not allow '[object WritableStream]'\n[PASS] pipeThrough should rethrow errors from accessing readable or writable\n[PASS] invalid values of signal should throw; specifically 'null'\n[PASS] invalid values of signal should throw; specifically '0'\n[PASS] invalid values of signal should throw; specifically 'NaN'\n[PASS] invalid values of signal should throw; specifically 'true'\n[PASS] invalid values of signal should throw; specifically 'AbortSignal'\n[PASS] invalid values of signal should throw; specifically '[object AbortSignal]'\n[PASS] pipeThrough should accept a real AbortSignal\n[PASS] pipeThrough should throw if this is locked\n[PASS] pipeThrough should throw if writable is locked\n[PASS] pipeThrough should not care if readable is locked\n[PASS] pipeThrough() should throw if an option getter grabs a writer\n[PASS] pipeThrough() should not throw if option is null\n[PASS] pipeThrough() should not throw if signal is undefined\n[PASS] pipeThrough() should throw if readable/writable getters throw\n[PASS] Piping through a duck-typed pass-through transform stream should work\n[PASS] Piping through a transform errored on the writable end does not cause an unhandled promise rejection\n[PASS] Piping from an errored readable stream to a closed writable stream\n[PASS] Piping from a closed readable stream to an erroring writable stream\n[PASS] Piping from a closed readable stream to an errored writable stream\n[PASS] Piping from a closed readable stream to a closed writable stream\n[PASS] preventCancel should work\n[PASS] piping should not be observable\n[PASS] tee should not be observable\n[PASS] preventClose should work\n[PASS] Piping to a WritableStream that does not consume the writes fast enough exerts backpressure on the ReadableStream\n[PASS] pipeThrough should stop after getting preventAbort throws\n[PASS] pipeThrough should stop after getting preventCancel throws\n[PASS] pipeThrough should stop after getting preventClose throws\n[PASS] pipeThrough should stop after getting signal throws\n[PASS] pipeTo should stop after getting preventAbort throws\n[PASS] pipeTo should stop after getting preventCancel throws\n[PASS] pipeTo should stop after getting preventClose throws\n[PASS] pipeTo should stop after getting signal throws\n[PASS] preventAbort should work\n[PASS] Piping through an identity transform stream should close the destination when the source closes\n[PASS] CountQueuingStrategy: Can construct a with a valid high water mark\n[PASS] CountQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] CountQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] CountQueuingStrategy: size is the same function across all instances\n[PASS] CountQueuingStrategy: size should have the right name\n[PASS] CountQueuingStrategy: subclassing should work correctly\n[PASS] CountQueuingStrategy: size should not have a prototype property\n[PASS] ByteLengthQueuingStrategy: Can construct a with a valid high water mark\n[PASS] ByteLengthQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] ByteLengthQueuingStrategy: size is the same function across all instances\n[PASS] ByteLengthQueuingStrategy: size should have the right name\n[PASS] ByteLengthQueuingStrategy: subclassing should work correctly\n[PASS] ByteLengthQueuingStrategy: size should not have a prototype property\n[PASS] CountQueuingStrategy: size should not be a constructor\n[PASS] ByteLengthQueuingStrategy: size should not be a constructor\n[PASS] CountQueuingStrategy: size should have the right length\n[PASS] ByteLengthQueuingStrategy: size should have the right length\n[PASS] CountQueuingStrategy: size behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: size behaves as expected with strange arguments\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueuing an already-detached buffer throws\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:54:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:51:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:50:1\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStream with byte source: enqueuing a zero-length buffer throws\n[PASS] ReadableStream with byte source: enqueuing a zero-length view on a non-zero-length buffer throws\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a real view\n[PASS] ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has a different length (autoAllocateChunkSize)\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:30:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:28:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into an already-detached buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:84:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:82:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:100:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:98:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:113:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:111:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:136:10)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at async_test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:676:34)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:123:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] enqueue after detaching byobRequest.view.buffer should throw\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"Error: cannot proceed\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\enqueue-with-detached-buffer.any.js:20:3)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\enqueue-with-detached-buffer.any.js'\n\n[PASS] getReader({mode: \"byob\"}) throws on non-bytes streams\n[PASS] ReadableStream with byte source can be constructed with no errors\n[PASS] ReadableStream with byte source: enqueue() with a non-transferable buffer\n[PASS] getReader({mode}) must perform ToString()\n[PASS] ReadableStream with byte source: read() with a non-transferable buffer\n[PASS] ReadableStream with byte source: start() throws an exception\n[PASS] ReadableStream with byte source: desiredSize when closed\n[PASS] ReadableStream with byte source: desiredSize when errored\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\nassert_unreached: read() should not reject Reached unreachable code\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\non-transferable-buffers.any.js'\n\n[PASS] ReadableStream with byte source: pull() function is not callable\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw if close()-ed more than once\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1492:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1479:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw on enqueue() after close()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1511:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1498:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: autoAllocateChunkSize cannot be 0\n[PASS] ReadableStreamBYOBReader can be constructed directly\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream argument\n[PASS] ReadableStreamBYOBReader constructor requires an unlocked ReadableStream\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream with type \"bytes\"\n[PASS] ReadableStream constructor should not accept a strategy with a size defined if type is \"bytes\"\n[PASS] ReadableStream with byte source: Construct and expect start and pull being called\n[PASS] ReadableStream with byte source: No automatic pull call if start doesn't finish\n[PASS] ReadableStream with byte source: Construct with highWaterMark of 0\n[PASS] ReadableStream with byte source: getReader(), then releaseLock()\n[PASS] ReadableStream with byte source: getReader() with mode set to byob, then releaseLock()\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a BYOB reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a BYOB reader automatically\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamDefaultReader must reject pending read()\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamBYOBReader must reject pending read()\n[PASS] ReadableStream with byte source: Automatic pull() after start()\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read()\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() with cached byobRequest after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: autoAllocateChunkSize\nassert_equals: pull() must have been invoked once expected 1 but got 0\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:355:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() with double read should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Mix of auto allocate and BYOB\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read(view)\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:505:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:503:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Push source that doesn't understand pull signal\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:565:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:580:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:578:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), read(view) partially, then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:604:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:599:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), enqueue(), close(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:652:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), close(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:672:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:670:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:752:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() with too big value\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1000:18)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:996:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1026:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1024:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1056:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1054:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), read(view), then cancel()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: cancel() with partially filled pending pull() request\nassert_equals: 1 pull() should have been made in response to partial fill by enqueue() expected 1 but got 0\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1152:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1172:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1168:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1211:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1205:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1247:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1243:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1277:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1272:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1316:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1312:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1366:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1361:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1438:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1434:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1460:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1456:18)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() and close() in pull()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read() twice, then enqueue() twice\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1726:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), close() and respond()\nCannot read properties of null (reading 'respond')\nTypeError: Cannot read properties of null (reading 'respond')\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1765:26)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), big enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1801:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view) and multiple enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1835:14)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: read(view) with passing undefined as view must fail\n[PASS] ReadableStream with byte source: read(view) with passing an empty object as view must fail\n[PASS] ReadableStream with byte source: Even read(view) with passing ArrayBufferView like object as view must fail\n[PASS] ReadableStream with byte source: read() on an errored stream\n[PASS] ReadableStream with byte source: read(), then error()\n[PASS] ReadableStream with byte source: read(view) on an errored stream\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then error()\npromise_rejects_exactly: read() must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: Throwing in pull function must error the stream\n[PASS] ReadableStream with byte source: Throwing in pull in response to read() must be ignored if the stream is errored in it\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"TypeError: foo\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respond() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respondWithNewView() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerRespond (node:internal/webstreams/readablestream:2717:17)\n    at ReadableStreamBYOBRequest.respond (node:internal/webstreams/readablestream:702:5)\n    at Object.pull (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:333:21)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream teeing with byte source: rs.tee() returns an array of two ReadableStreams\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing with byte source\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks should be cloned for each branch\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: errors in the source should propagate to both branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should not impact branch2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch2 should not impact branch1\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream teeing with byte source: canceling both branches should aggregate the cancel reasons into an array\n[PASS] Async iterator instances should have the correct list of properties\n[PASS] ReadableStream teeing with byte source: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing with byte source: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] values() throws if there's already a lock\n[PASS] ReadableStream teeing with byte source: erroring a teed stream should properly handle canceled branches\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: closing the original should close the branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream teeing with byte source: erroring the original should immediately error the branches\n[PASS] ReadableStream teeing with byte source: erroring the original should error pending reads from default reader\n[PASS] return() should unlock the stream synchronously when preventCancel = false\n[PASS] return() should unlock the stream synchronously when preventCancel = true\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:317:3)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Async-iterating a push source\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Async-iterating a pull source\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:372:3)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Async-iterating a push source with undefined values\n[PASS] Async-iterating a pull source with undefined values\n[PASS] Async-iterating a pull source manually\n[PASS] Async-iterating an errored stream throws\n[PASS] Async-iterating a closed stream never executes the loop body, but works fine\n[PASS] Readable stream: throwing strategy.size getter\n[PASS] Readable stream: throwing strategy.highWaterMark getter\n[PASS] Readable stream: invalid strategy.highWaterMark\n[PASS] Readable stream: strategy.size errors the stream and then throws\n[PASS] Readable stream: strategy.size errors the stream and then returns Infinity\n[PASS] Readable stream: throwing strategy.size method\n[PASS] Readable stream: invalid strategy.size return value\n[PASS] Readable stream: invalid strategy.size return value when pulling\n[PASS] Async-iterating an empty but not closed/errored stream never executes the loop body and stalls the async function\n[PASS] Async-iterating a partially consumed stream\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = false\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = true\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = false\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = true\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = false\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = true\n[PASS] Cancellation behavior when manually calling return(); preventCancel = false\n[PASS] Cancellation behavior when manually calling return(); preventCancel = true\n[PASS] next() rejects if the stream errors\n[PASS] return() does not rejects if the stream has not errored yet\n[PASS] ReadableStream teeing with byte source: should not pull any chunks if no branches are reading\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\nError\n    at get_stack (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4546:21)\n    at new AssertionError (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4539:22)\n    at assert (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4523:19)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:759:29)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2646:35\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Underlying source start: throwing getter\n[PASS] Underlying source start: throwing method\n[PASS] Underlying source: throwing pull getter (initial pull)\n[PASS] Underlying source cancel: throwing getter\n[PASS] Underlying source: throwing pull method (initial pull)\n[PASS] Underlying source pull: throwing getter (second pull does not result in a second get)\n[PASS] Underlying source pull: throwing method (second pull)\n[PASS] Underlying source cancel: throwing method\n[PASS] Underlying source: calling enqueue on an empty canceled stream should throw\n[PASS] Underlying source: calling enqueue on a non-empty canceled stream should throw\n[PASS] Underlying source: calling enqueue on a closed stream should throw\n[PASS] Underlying source: calling enqueue on an errored stream should throw\n[PASS] Underlying source: calling close twice on an empty stream should throw the second time\n[PASS] Underlying source: calling close twice on a non-empty stream should throw the second time\n[PASS] Underlying source: calling close on an empty canceled stream should throw\n[PASS] Underlying source: calling close on a non-empty canceled stream should throw\n[PASS] Underlying source: calling close after error should throw\n[PASS] Underlying source: calling error twice should not throw\n[PASS] Underlying source: calling error after close should not throw\n[PASS] Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error\n[PASS] Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error\n[PASS] read should not error if it dequeues and pull() throws\n[PASS] ReadableStream teeing with byte source: should not pull when original is already errored\n[PASS] return() rejects if the stream has errored\n[PASS] next() that succeeds; next() that reports an error; next()\n[PASS] next() that succeeds; next() that reports an error(); next() [no awaiting]\n[PASS] next() that succeeds; next() that reports an error(); return()\n[PASS] next() that succeeds; next() that reports an error(); return() [no awaiting]\n[PASS] next() that succeeds; return()\n[PASS] next() that succeeds; return() [no awaiting]\n[PASS] return(); next()\n[PASS] return(); next() [no awaiting]\n[PASS] return(); return()\n[PASS] return(); return() [no awaiting]\n[PASS] Acquiring a reader after exhaustively async-iterating a stream\n[PASS] Acquiring a reader after return()ing from a stream that errors\n[PASS] Acquiring a reader after partially async-iterating a stream\n[PASS] Acquiring a reader and reading the remaining chunks after partially async-iterating a stream with preventCancel = true\n[PASS] close() while next() is pending\n[PASS] ReadableStream cancellation: cancel(reason) should pass through the given reason to the underlying source\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:440:26)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream cancellation: integration test on an infinite stream derived from a random push source\n[PASS] ReadableStream cancellation: cancel() on a locked stream should fail and not call the underlying source cancel\n[PASS] ReadableStream cancellation: should fulfill promise when cancel callback went fine\n[PASS] ReadableStream cancellation: returning a value from the underlying source's cancel should not affect the fulfillment value of the promise returned by the stream's cancel\n[PASS] ReadableStream cancellation: should reject promise when cancel callback raises an exception\n[PASS] underlyingSource argument should be converted after queuingStrategy argument\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (1)\n[PASS] Can construct a readable stream with a valid CountQueuingStrategy\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 0)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 1)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 4)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (2)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should reject when that one does\n[PASS] ReadableStream cancellation: cancelling before start finishes should prevent pull() from being called\n[PASS] ReadableStreamDefaultReader constructor should get a ReadableStream object as argument\n[PASS] ReadableStreamDefaultReader closed should always return the same promise object\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via direct construction)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via direct construction)\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via getReader)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via getReader)\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is closed\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is errored\n[PASS] getReader() should call ToString() on mode\n[PASS] Reading from a reader for an empty stream will wait until a chunk is available\n[PASS] cancel() on a reader does not release the reader\n[PASS] closed should be fulfilled after stream is closed (.closed access before acquiring)\n[PASS] closed should be rejected after reader releases its lock (multiple stream locks)\n[PASS] closed is replaced when stream closes and reader releases its lock\n[PASS] closed is replaced when stream errors and reader releases its lock\n[PASS] Multiple readers can access the stream in sequence\n[PASS] Cannot use an already-released reader to unlock a stream again\n[PASS] cancel() on a released reader is a no-op and does not pass through\n[PASS] Getting a second reader after erroring the stream and releasing the reader should succeed\n[PASS] ReadableStreamDefaultReader closed promise should be rejected with undefined if that is the error\n[PASS] ReadableStreamDefaultReader: if start rejects with no parameter, it should error the stream with an undefined error\n[PASS] Erroring a ReadableStream after checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Erroring a ReadableStream before checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Reading twice on a stream that gets closed\n[PASS] Reading twice on a closed stream\n[PASS] Reading twice on an errored stream\n[PASS] Reading twice on a stream that gets errored\n[PASS] controller.close() should clear the list of pending read requests\n[PASS] Second reader can read chunks after first reader was released with pending read requests\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] ReadableStream.from throws on invalid iterables; specifically null\n[PASS] ReadableStream.from throws on invalid iterables; specifically undefined\n[PASS] ReadableStream.from throws on invalid iterables; specifically 0\n[PASS] ReadableStream.from throws on invalid iterables; specifically NaN\n[PASS] ReadableStream.from throws on invalid iterables; specifically true\n[PASS] ReadableStream.from throws on invalid iterables; specifically {}\n[PASS] ReadableStream.from throws on invalid iterables; specifically Object.create(null)\n[PASS] ReadableStream.from throws on invalid iterables; specifically a function\n[PASS] ReadableStream.from throws on invalid iterables; specifically a symbol\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@iterator method\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@asyncIterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@iterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@asyncIterator method\n[PASS] ReadableStream.from ignores @@iterator if @@asyncIterator exists\n[PASS] ReadableStream.from accepts an array of values\n[PASS] ReadableStream.from accepts an array of promises\n[PASS] ReadableStream.from accepts an array iterator\n[PASS] ReadableStream.from accepts a string\n[PASS] ReadableStream.from accepts a Set\n[PASS] ReadableStream.from accepts a Set iterator\n[PASS] ReadableStream.from accepts a sync generator\n[PASS] ReadableStream.from accepts an async generator\n[PASS] ReadableStream.from accepts a sync iterable of values\n[PASS] ReadableStream.from accepts a sync iterable of promises\n[PASS] ReadableStream.from accepts an async iterable\n[PASS] ReadableStream.from accepts a ReadableStream\n[PASS] ReadableStream.from accepts a ReadableStream async iterator\n[PASS] ReadableStream.from accepts an empty iterable\n[PASS] ReadableStream.from: stream errors when next() rejects\n[PASS] ReadableStream.from: stream stalls when next() never settles\n[PASS] ReadableStream can be constructed with no errors\n[PASS] ReadableStream can't be constructed with garbage\n[PASS] ReadableStream can't be constructed with an invalid type\n[PASS] ReadableStream constructor should throw for non-function start arguments\n[PASS] ReadableStream constructor will not tolerate initial garbage as cancel argument\n[PASS] ReadableStream constructor will not tolerate initial garbage as pull argument\n[PASS] ReadableStream start should be called with the proper thisArg\n[PASS] ReadableStream start controller parameter should be extensible\n[PASS] default ReadableStream getReader() should only accept mode:undefined\n[PASS] ReadableStream: enqueue should throw when the stream is readable but draining\n[PASS] ReadableStream: enqueue should throw when the stream is closed\n[PASS] ReadableStream: desiredSize when closed\n[PASS] ReadableStream: desiredSize when errored\n[PASS] Subclassing ReadableStream should work\n[PASS] ReadableStream strategies: the default strategy should give desiredSize of 1 to start, decreasing by 1 per enqueue\n[PASS] ReadableStream should be able to call start method within prototype chain of its source\n[PASS] ReadableStream start should be able to return a promise\n[PASS] ReadableStream start should be able to return a promise and reject it\n[PASS] ReadableStream.from: calls next() after first read()\n[PASS] ReadableStream should be able to enqueue different objects.\n[PASS] ReadableStream: if pull rejects, it should error the stream\n[PASS] ReadableStreamController methods should continue working properly when scripts lose their reference to the readable stream\n[PASS] ReadableStream.from: cancelling the returned stream calls and awaits return()\n[PASS] ReadableStream.from: return() is not called when iterator completes normally\n[PASS] ReadableStream.from: cancel() rejects when return() fulfills with a non-object\n[PASS] ReadableStream: should only call pull once upon starting the stream\n[PASS] ReadableStream closed promise should fulfill even if the stream and reader JS references are lost\n[PASS] ReadableStream.from: reader.read() inside next()\n[PASS] ReadableStream: should call pull when trying to read from a started, empty stream\n[PASS] ReadableStream.from: reader.cancel() inside next()\n[PASS] ReadableStream.from: reader.cancel() inside return()\n[PASS] ReadableStream.from(array), push() to array while reading\n[PASS] ReadableStream closed promise should reject even if stream and reader JS references are lost\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from before start fulfills\n[PASS] Garbage-collecting a ReadableStreamDefaultReader should not unlock its stream\n[EXPECTED_FAILURE][FAIL] Transferred MessageChannel works as expected\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[EXPECTED_FAILURE][FAIL] Second branch of owning ReadableStream tee should end up into errors with transfer only values\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream can be constructed with owning type\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:7:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:6:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should call start with a ReadableStreamDefaultController\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:22:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:10:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream should be able to call enqueue with an empty transfer list\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:38:3)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:26:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream should check transfer parameter\nassert_throws_js: transfer list is not empty function \"() => { controller.enqueue(buffer, { transfer : [ buffer ] }); }\" did not throw\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:50:7)\n    at setupReadableStreamDefaultController (node:internal/webstreams/readablestream:2440:23)\n    at setupReadableStreamDefaultControllerFromSource (node:internal/webstreams/readablestream:2472:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:278:7)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should transfer enqueued chunks\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from after start fulfills\n[PASS] ReadableStream tee() should not touch Object.prototype properties\n[PASS] ReadableStream tee() should not call the global ReadableStream\n[PASS] tee() should not call Promise.prototype.then()\n[PASS] pipeTo() should not call Promise.prototype.then()\n[PASS] ReadableStream async iterator should use the original values of getReader() and ReadableStreamDefaultReader methods\n[PASS] enqueue() inside size() should work\n[PASS] close() inside size() should not crash\n[PASS] close request inside size() should work\n[PASS] error() inside size() should work\n[PASS] ReadableStream: should call pull in reaction to read()ing the last chunk, if not draining\n[PASS] desiredSize inside size() should work\n[PASS] cancel() inside size() should work\n[PASS] pipeTo() inside size() should behave as expected\n[PASS] ReadableStream teeing: rs.tee() returns an array of two ReadableStreams\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing\n[PASS] ReadableStreamTee should not use a modified ReadableStream constructor from the global object\n[PASS] ReadableStream teeing: should be able to read one branch to the end without affecting the other\n[PASS] ReadableStream teeing: values should be equal across each branch\n[PASS] ReadableStream teeing: errors in the source should propagate to both branches\n[PASS] ReadableStream teeing: canceling branch1 should not impact branch2\n[PASS] ReadableStream teeing: canceling branch2 should not impact branch1\n[PASS] ReadableStream teeing: canceling both branches should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] ReadableStream teeing: erroring a teed stream should properly handle canceled branches\n[PASS] ReadableStream teeing: erroring a teed stream should error both branches\n[PASS] ReadableStream teeing: closing the original should immediately close the branches\n[PASS] ReadableStream teeing: erroring the original should immediately error the branches\n[PASS] ReadableStream teeing: canceling branch1 should finish when branch2 reads until end of stream\n[PASS] ReadableStream teeing: canceling branch1 should finish when original stream errors\n[PASS] ReadableStream: should not call pull() in reaction to read()ing the last chunk, if draining\n[PASS] read() inside of size() should behave as expected\n[PASS] getReader() inside size() should work\n[PASS] tee() inside size() should work\n[PASS] ReadableStream teeing: canceling both branches in sequence with delay\n[PASS] ReadableStream: should not call pull until the previous pull call's promise fulfills\n[PASS] Running templatedRSEmpty with ReadableStream (empty)\n[PASS] ReadableStream (empty): instances have the correct methods and properties\n[PASS] ReadableStream (empty): calling getReader with invalid arguments should throw appropriate errors\n[PASS] Running templatedRSEmptyReader with ReadableStream (empty) reader\n[PASS] ReadableStream (empty) reader: instances have the correct methods and properties\n[PASS] ReadableStream (empty) reader: locked should be true\n[PASS] ReadableStream (empty) reader: read() should return distinct promises each time\n[PASS] ReadableStream (empty) reader: getReader() again on the stream should fail\n[PASS] ReadableStream (empty) reader: releasing the lock should cause locked to become false\n[PASS] Running templatedRSClosed with ReadableStream (closed via call in start)\n[PASS] ReadableStream (closed via call in start): locked should be false\n[PASS] ReadableStream (closed via call in start): getReader() should be OK\n[PASS] ReadableStream (closed via call in start): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream (closed via call in start): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed before getting reader)\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed after getting reader)\n[PASS] Running templatedRSClosed with ReadableStream (closed via cancel)\n[PASS] ReadableStream (closed via cancel): locked should be false\n[PASS] ReadableStream (closed via cancel): getReader() should be OK\n[PASS] ReadableStream (closed via cancel): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream (closed via cancel): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed via cancel after getting reader)\n[PASS] Running templatedRSErrored with ReadableStream (errored via call in start)\n[PASS] ReadableStream (errored via call in start): locked should be false\n[PASS] Running templatedRSErroredSyncOnly with ReadableStream (errored via call in start)\n[PASS] ReadableStream (errored via call in start): should not be able to obtain additional readers if we don't release the first lock\n[PASS] Running templatedRSErrored with ReadableStream (errored via returning a rejected promise in start)\n[PASS] ReadableStream (errored via returning a rejected promise in start): locked should be false\n[PASS] Running templatedRSErroredReader with ReadableStream (errored via returning a rejected promise in start) reader\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored before getting reader)\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored after getting reader)\n[PASS] Running templatedRSTwoChunksOpenReader with ReadableStream (two chunks enqueued, still open) reader\n[PASS] ReadableStream (two chunks enqueued, still open) reader: read() should return distinct promises each time\n[PASS] Running templatedRSTwoChunksClosedReader with ReadableStream (two chunks enqueued, then closed) reader\n[PASS] ReadableStream teeing: failing to cancel when canceling both branches in sequence with delay\n[PASS] ReadableStream: should pull after start, and after every read\n[PASS] ReadableStream: should not call pull after start if the stream is now closed\n[PASS] ReadableStream: should call pull after enqueueing from inside pull (with no read requests), if strategy allows\n[PASS] ReadableStream pull should be able to close a stream.\n[PASS] ReadableStream pull should be able to error a stream.\n[PASS] ReadableStream pull should be able to error a stream and throw.\n[PASS] ReadableStream: should call underlying source methods as methods\n[PASS] ReadableStream strategies: the default strategy should continue giving desiredSize of 1 if the chunks are read immediately\n[PASS] ReadableStreamTee should not pull more chunks than can fit in the branch queue\n[PASS] ReadableStreamTee should only pull enough to fill the emptiest queue\n[PASS] ReadableStreamTee should not pull when original is already errored\n[PASS] ReadableStream integration test: adapting a random push source\n[PASS] ReadableStream integration test: adapting a sync pull source\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 1 is reading\n[PASS] ReadableStream integration test: adapting an async pull source\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object ReadableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] Transferring [object ReadableStream],[object TransformStream] should fail\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object WritableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] Transferring [object WritableStream],[object TransformStream] should fail\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 2 is reading\n[PASS] ReadableStream (empty) reader: read() should never settle\n[PASS] backpressure allows no transforms with a default identity transform and no reader\n[PASS] backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader\n[PASS] transform() should keep being called as long as there is no backpressure\n[PASS] writes should resolve as soon as transform completes\n[PASS] calling pull() before the first write() with backpressure should work\n[PASS] transform() should be able to read the chunk it just enqueued\n[PASS] ReadableStreamTee stops pulling when original stream errors while both branches are reading\n[PASS] blocking transform() should cause backpressure\n[PASS] writer.closed should resolve after readable is canceled during start\n[PASS] writer.closed should resolve after readable is canceled with backpressure\n[PASS] ReadableStream teeing: enqueue() and close() while both branches are pulling\n[PASS] writer.closed should resolve after readable is canceled with no backpressure\n[PASS] cancelling the readable should cause a pending write to resolve\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe after startup\n[PASS] cancelling the readable side of a TransformStream should abort a full pipe\n[PASS] cancelling the readable side should call transformer.cancel()\n[PASS] cancelling the readable side should reject if transformer.cancel() throws\n[PASS] aborting the writable side should call transformer.abort()\n[PASS] aborting the writable side should reject if transformer.cancel() throws\n[PASS] closing the writable side should reject if a parallel transformer.cancel() throws\n[PASS] readable.cancel() and a parallel writable.close() should reject if a transformer.cancel() calls controller.error()\n[PASS] writable.abort() and readable.cancel() should reject if a transformer.cancel() calls controller.error()\n[PASS] errored TransformStream should not enqueue new chunks\n[PASS] TransformStream constructor should throw when start does\n[PASS] when strategy.size throws inside start(), the constructor should throw the same error\n[PASS] when strategy.size calls controller.error() then throws, the constructor should throw the first error\n[PASS] TransformStream errors thrown in transform put the writable and readable in an errored state\n[PASS] TransformStream errors thrown in flush put the writable and readable in an errored state\n[PASS] TransformStream flush is called immediately when the writable is closed, if no writes are queued\n[PASS] TransformStream transformer.start() rejected promise should error the stream\n[PASS] TransformStream flush is called after all queued writes finish, once the writable is closed\n[PASS] TransformStream flush gets a chance to enqueue more into the readable\n[PASS] TransformStream flush gets a chance to enqueue more into the readable, and can then async close\n[PASS] error() during flush should cause writer.close() to reject\n[PASS] closing the writable side should call transformer.flush() and a parallel readable.cancel() should not reject\n[PASS] when controller.error is followed by a rejection, the error reason should come from controller.error\n[PASS] cancelling the readable side should error the writable\n[PASS] it should be possible to error the readable between close requested and complete\n[PASS] an exception from transform() should error the stream if terminate has been requested but not completed\n[PASS] abort should set the close reason for the writable when it happens before cancel during start, and cancel should reject\n[PASS] abort should set the close reason for the writable when it happens before cancel during underlying sink write, but cancel should still succeed\n[PASS] controller.error() should do nothing the second time it is called\n[PASS] controller.error() should close writable immediately after readable.cancel()\n[PASS] controller.error() should do nothing after readable.cancel() resolves\n[PASS] controller.error() should do nothing after writable.abort() has completed\n[PASS] controller.error() should do nothing after a transformer method has thrown an exception\n[PASS] erroring during write with backpressure should result in the write failing\n[PASS] a write() that was waiting for backpressure should reject if the writable is aborted\n[PASS] the readable should be errored with the reason passed to the writable abort() method\n[PASS] TransformStream can be constructed with a transform function\n[PASS] TransformStream can be constructed with no transform function\n[PASS] TransformStream writable starts in the writable state\n[PASS] enqueue() should throw after controller.terminate()\n[PASS] controller.terminate() should do nothing the second time it is called\n[PASS] specifying a defined readableType should throw\n[PASS] specifying a defined writableType should throw\n[PASS] Subclassing TransformStream should work\n[PASS] Identity TransformStream: can read from readable what is put into writable\n[PASS] Uppercaser sync TransformStream: can read from readable transformed version of what is put into writable\n[PASS] Uppercaser-doubler sync TransformStream: can read both chunks put into the readable\n[PASS] ReadableStream (empty) reader: two read()s should both never settle\n[PASS] Uppercaser async TransformStream: can read from readable transformed version of what is put into writable\n[PASS] ReadableStream (empty) reader: releasing the lock should reject all pending read requests\n[PASS] ReadableStream (empty) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: releasing the lock should cause closed calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: canceling via the reader should cause the reader to act closed\n[PASS] ReadableStream (empty) reader: canceling via the stream should fail\n[PASS] ReadableStream (closed via call in start): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed before getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed before getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed before getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (closed via cancel): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed via cancel after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed via cancel after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed via cancel after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (errored via call in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via call in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via call in start): should be able to obtain a second reader, with the correct closed promise\n[PASS] ReadableStream (errored via call in start): cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via call in start): reader cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via returning a rejected promise in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via returning a rejected promise in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: closed should reject with the error\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: read() should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored before getting reader): read() should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored after getting reader): read() should reject with the error\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (sequential)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (nested)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: cancel() after a read() should still give that single read result\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (sequential)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (nested)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: draining the stream via read() should cause the reader closed promise to fulfill, but locked stays true\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock after the stream is closed should cause locked to become false\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: reader's closed property always returns the same promise\n[PASS] Uppercaser-doubler async TransformStream: can read both chunks put into the readable\n[PASS] TransformStream: by default, closing the writable closes the readable (when there are no queued writes)\n[PASS] TransformStream: by default, closing the writable waits for transforms to finish before closing both\n[PASS] testing \"\" (length 1)\n[PASS] testing \"\" (length 0)\n[PASS] testing \"{{in1}}\" (length 1)\n[PASS] testing \"z{{in1}}\" (length 1)\n[PASS] testing \"{{in1}}q\" (length 1)\n[PASS] testing \"{{in1}}{{in1}\" (length 1)\n[PASS] testing \"{{in1}}{{in1},}\" (length 2)\n[PASS] testing \"{{in1,}}\" (length 2)\n[PASS] testing \"{{,in1}}\" (length 2)\n[PASS] testing \"{,{in1}}\" (length 2)\n[PASS] testing \"{{,in1}\" (length 2)\n[PASS] testing \"{\" (length 1)\n[PASS] testing \"{,\" (length 2)\n[PASS] testing \"{,{,i,n,1,},}\" (length 7)\n[PASS] testing \"{{in1}}{{in2}}{{in1}}\" (length 1)\n[PASS] testing \"{{wrong}}\" (length 1)\n[PASS] testing \"{{wron,g}}\" (length 2)\n[PASS] testing \"{{quine}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}}\" (length 1)\n[PASS] TransformStream: by default, closing the writable closes the readable after sync enqueues and async done\n[PASS] TransformStream constructor should not call setters for highWaterMark or size\n[PASS] TransformStream should use the original value of ReadableStream and WritableStream\n[PASS] TransformStream: by default, closing the writable closes the readable after async enqueues and async done\n[PASS] Transform stream should call transformer methods as methods\n[PASS] methods should not not have .apply() or .call() called\n[PASS] transformer method start should be called with the right number of arguments\n[PASS] transformer method start should be called even when it's located on the prototype chain\n[PASS] transformer method transform should be called with the right number of arguments\n[PASS] transformer method transform should be called even when it's located on the prototype chain\n[PASS] transformer method flush should be called with the right number of arguments\n[PASS] transformer method flush should be called even when it's located on the prototype chain\n[PASS] enqueue() inside size() should work\n[PASS] terminate() inside size() should work\n[PASS] error() inside size() should work\n[PASS] desiredSize inside size() should work\n[PASS] readable cancel() inside size() should work\n[PASS] pipeTo() inside size() should work\n[PASS] writableStrategy highWaterMark should work\n[PASS] default writable strategy should be equivalent to { highWaterMark: 1 }\n[PASS] a RangeError should be thrown for an invalid highWaterMark\n[PASS] writableStrategy highWaterMark should be converted to a number\n[PASS] readableStrategy highWaterMark should be converted to a number\n[PASS] readableStrategy highWaterMark should work\n[PASS] writable should have the correct size() function\n[PASS] default readable strategy should be equivalent to { highWaterMark: 0 }\n[PASS] a bad readableStrategy size function should cause writer.write() to reject on an identity transform\n[PASS] a bad readableStrategy size function should error the stream on enqueue even when transformer.transform() catches the exception\n[PASS] read() inside of size() should work\n[PASS] writer.write() inside size() should work\n[PASS] synchronous writer.write() inside size() should work\n[PASS] controller.enqueue() should throw after controller.terminate()\n[PASS] controller.terminate() should error pipeTo()\n[PASS] TransformStream start, transform, and flush should be strictly ordered\n[PASS] writer.close() inside size() should work\n[PASS] controller.terminate() should prevent remaining chunks from being processed\n[PASS] controller.error() after controller.terminate() with queued chunk should error the readable\n[PASS] controller.error() after controller.terminate() without queued chunk should do nothing\n[PASS] controller.terminate() inside flush() should not prevent writer.close() from succeeding\n[PASS] it should be possible to call transform() synchronously\n[PASS] closing the writable should close the readable when there are no queued chunks, even with backpressure\n[PASS] writer.abort() inside size() should work\n[PASS] enqueue() should throw after readable.cancel()\n[PASS] terminate() should abort writable immediately after readable.cancel()\n[PASS] terminate() should do nothing after readable.cancel() resolves\n[PASS] WritableStreamDefaultController.signal\n[PASS] Aborting a WritableStream before it starts should cause the writer's unsettled ready promise to reject\n[PASS] Aborting a WritableStream should cause the writer's fulfilled ready promise to reset to a rejected one\n[PASS] abort() on a released writer rejects\n[PASS] start() should not be called twice\n[PASS] Writable stream: throwing strategy.size getter\n[PASS] Aborting a WritableStream immediately prevents future writes\n[PASS] reject any non-function value for strategy.size\n[PASS] Writable stream: throwing strategy.highWaterMark getter\n[PASS] Writable stream: invalid strategy.highWaterMark\n[PASS] Writable stream: invalid size beats invalid highWaterMark\n[PASS] Writable stream: throwing strategy.size method\n[PASS] Writable stream: invalid strategy.size return value\n[PASS] Aborting a WritableStream prevents further writes after any that are in progress\n[PASS] Fulfillment value of writer.abort() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream if sink's abort throws, the promise returned by writer.abort() rejects\n[PASS] WritableStream if sink's abort throws, the promise returned by multiple writer.abort()s is the same and rejects\n[PASS] WritableStream if sink's abort throws, the promise returned by ws.abort() rejects\n[PASS] WritableStream if sink's abort throws, for an abort performed during a write, the promise returned by ws.abort() rejects\n[PASS] Aborting a WritableStream passes through the given reason\n[PASS] Aborting a WritableStream puts it in an errored state with the error passed to abort()\n[PASS] Aborting a WritableStream causes any outstanding write() promises to be rejected with the reason supplied\n[PASS] Closing but then immediately aborting a WritableStream causes the stream to error\n[PASS] Closing a WritableStream and aborting it while it closes causes the stream to ignore the abort attempt\n[PASS] Aborting a WritableStream after it is closed is a no-op\n[PASS] WritableStream should NOT call underlying sink's close if no abort is supplied (historical)\n[PASS] returning a thenable from abort() should work\n[PASS] start: errors in start cause WritableStream constructor to throw\n[PASS] close: throwing getter should cause constructor to throw\n[PASS] write: throwing getter should cause write() and closed to reject\n[PASS] start: non-function start method\n[PASS] write: non-function write method\n[PASS] close: non-function close method\n[PASS] abort: non-function abort method with .apply\n[PASS] abort: throwing getter should cause abort() and closed to reject\n[PASS] close: throwing method should cause writer close() and ready to reject\n[PASS] close: returning a rejected promise should cause writer close() and ready to reject\n[PASS] write: throwing method should cause write() and closed to reject\n[PASS] write: returning a promise that becomes rejected after the writer write() should cause writer write() and ready to reject\n[PASS] .closed should not resolve before fulfilled write()\n[PASS] write: returning a rejected promise (second write) should cause writer write() and ready to reject\n[PASS] .closed should not resolve before rejected write(); write() error should not overwrite abort() error\n[PASS] abort: throwing method should cause abort() and closed to reject\n[PASS] writes should be satisfied in order when aborting\n[PASS] writes should be satisfied in order after rejected write when aborting\n[PASS] close() should reject with abort reason why abort() is first error\n[PASS] fulfillment value of writer.close() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] underlying abort() should not be called until underlying write() completes\n[PASS] Closing a writable stream with in-flight writes below the high water mark delays the close call properly\n[PASS] underlying abort() should not be called if underlying close() has started\n[PASS] WritableStream should be constructible with no arguments\n[PASS] underlyingSink argument should be converted after queuingStrategy argument\n[PASS] WritableStream instances should have standard methods and properties\n[PASS] WritableStreamDefaultController constructor should throw\n[PASS] WritableStreamDefaultController constructor should throw when passed an initialised WritableStream\n[PASS] WritableStreamDefaultWriter should throw unless passed a WritableStream\n[PASS] WritableStreamDefaultWriter constructor should throw when stream argument is locked\n[PASS] controller argument should be passed to start method\n[PASS] controller argument should be passed to write method\n[PASS] controller argument should not be passed to close method\n[PASS] highWaterMark should be reflected to desiredSize\n[PASS] WritableStream should be writable and ready should fulfill immediately if the strategy does not apply backpressure\n[PASS] when sink calls error asynchronously while sink close is in-flight, the stream should not become errored\n[PASS] when sink calls error synchronously while closing, the stream should not become errored\n[PASS] when the sink throws during close, and the close is requested while a write is still in-flight, the stream should become errored during the close\n[PASS] if underlying close() has started and then rejects, the abort() and close() promises should reject with the underlying close rejection reason\n[PASS] releaseLock on a stream with a pending write in which the stream has been errored\n[PASS] releaseLock on a stream with a pending close in which controller.error() was called\n[PASS] when close is called on a WritableStream in writable state, ready should return a fulfilled promise\n[PASS] Can construct a writable stream with a valid CountQueuingStrategy\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 0)\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 4)\n[PASS] an abort() that happens during a write() should trigger the underlying abort() even with a close() queued\n[PASS] if a writer is created for a stream with a pending abort, its ready should be rejected with the abort error\n[PASS] writer close() promise should resolve before abort() promise\n[PASS] writer.ready should reject on controller error without waiting for underlying write\n[PASS] when close is called on a WritableStream in waiting state, ready promise should be fulfilled\n[PASS] when close is called on a WritableStream in waiting state, ready should be fulfilled immediately even if close takes a long time\n[PASS] returning a thenable from close() should work\n[PASS] releaseLock() should not change the result of sync close()\n[PASS] controller.error() on erroring stream should not throw\n[PASS] controller.error() should error the stream\n[PASS] surplus calls to controller.error() should be a no-op\n[PASS] controller.error() on errored stream should not throw\n[PASS] controller.error() on closed stream should not throw\n[PASS] releaseLock() should not change the result of async close()\n[PASS] close() should set state to CLOSED even if writer has detached\n[PASS] the promise returned by async abort during close should resolve\n[PASS] promises must fulfill/reject in the expected order on closure\n[PASS] promises must fulfill/reject in the expected order on aborted closure\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] promises must fulfill/reject in the expected order on aborted and errored closure\n[PASS] writer.abort() while there is an in-flight write, and then finish the write with rejection\n[PASS] desiredSize on a released writer\n[PASS] desiredSize initial value\n[PASS] desiredSize on a writer for an errored stream\n[PASS] ws.getWriter() on a closing WritableStream\n[PASS] ws.getWriter() on an aborted WritableStream\n[PASS] Subclassing WritableStream should work\n[PASS] the locked getter should return true if the stream has a writer\n[PASS] desiredSize on a writer for a closed stream\n[PASS] ws.getWriter() on a closed WritableStream\n[PASS] ws.getWriter() on an errored WritableStream\n[PASS] closed and ready on a released writer\n[PASS] WritableStream should call underlying sink methods as methods\n[PASS] methods should not not have .apply() or .call() called\n[PASS] WritableStream's strategy.size should not be called as a method\n[PASS] redundant releaseLock() is no-op\n[PASS] ready promise should fire before closed on releaseLock\n[PASS] close() should not reject until no sink methods are in flight\n[PASS] ready promise should be initialised as fulfilled for a writer on a closed stream\n[PASS] close() on a writable stream should work\n[PASS] close() on a locked stream should reject\n[PASS] close() on an erroring stream should reject\n[PASS] close() on an errored stream should reject\n[PASS] close() on an closed stream should reject\n[PASS] close() on a stream with a pending close should reject\n[PASS] sink method start should be called with the right number of arguments\n[PASS] sink method start should be called even when it's located on the prototype chain\n[PASS] sink method write should be called with the right number of arguments\n[PASS] sink method write should be called even when it's located on the prototype chain\n[PASS] sink method close should be called with the right number of arguments\n[PASS] sink method close should be called even when it's located on the prototype chain\n[PASS] sink method abort should be called with the right number of arguments\n[PASS] sink method abort should be called even when it's located on the prototype chain\n[PASS] writes should be written in the standard order\n[PASS] writer.write() promises should resolve in the standard order\n[PASS] controller.error() should work when called from within strategy.size()\n[PASS] close() should work when called from within strategy.size()\n[PASS] abort() should work when called from within strategy.size()\n[PASS] releaseLock() should abort the write() when called within strategy.size()\n[PASS] original reader should error when new reader is created within strategy.size()\n[PASS] underlying sink's write or close should not be called if start throws\n[PASS] underlying sink's write should not be called until start finishes\n[PASS] writer.abort(), controller.error() while there is an in-flight write, and then finish the write\n[PASS] underlying sink's close should not be called until start finishes\n[PASS] underlying sink's write or close should not be invoked if the promise returned by start is rejected\n[PASS] returning a thenable from start() should work\n[PASS] WritableStream should complete asynchronous writes before close resolves\n[PASS] controller.error() during start should cause writes to fail\n[PASS] controller.error() during async start should cause existing writes to fail\n[PASS] WritableStream should complete synchronous writes before close resolves\n[PASS] when start() rejects, writer promises should reject in standard order\n[PASS] fulfillment value of ws.write() call should be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream should transition to waiting until write is acknowledged\n[PASS] when write returns a rejected promise, queued writes and close should be cleared\n[PASS] when sink's write throws an error, the stream should become errored and the promise should reject\n[PASS] writer.write(), ready and closed reject with the error passed to controller.error() made before sink.write rejection\n[PASS] a large queue of writes should be processed completely\n[PASS] WritableStreamDefaultWriter should work when manually constructed\n[PASS] returning a thenable from write() should work\n[PASS] failing DefaultWriter constructor should not release an existing writer\n[PASS] write() on a stream with HWM 0 should not cause the ready Promise to resolve\n[PASS] writing to a released writer should reject the returned promise\n[PASS] writer.abort(), controller.error() while there is an in-flight close, and then finish the close\n[PASS] controller.error(), writer.abort() while there is an in-flight write, and then finish the write\n[PASS] controller.error(), writer.abort() while there is an in-flight close, and then finish the close\n[PASS] releaseLock() while aborting should reject the original closed promise\n[PASS] releaseLock() during delayed async abort() should reject the writer.closed promise\n[PASS] sink abort() should not be called until sink start() is done\n[PASS] if start attempts to error the controller after abort() has been called, then it should lose\n[PASS] stream abort() promise should still resolve if sink start() rejects\n[PASS] writer abort() during sink start() should replace the writer.ready promise synchronously\n[PASS] promises returned from other writer methods should be rejected when writer abort() happens during sink start()\n[PASS] abort() should succeed despite rejection from write\n[PASS] abort() should be rejected with the rejection returned from close()\n[PASS] a rejecting sink.write() should not prevent sink.abort() from being called\n[PASS] when start errors after stream abort(), underlying sink abort() should be called anyway\n[PASS] when calling abort() twice on the same stream, both should give the same promise that fulfills with undefined\n[PASS] when calling abort() twice on the same stream, but sequentially so so there's no pending abort the second time, both should fulfill with undefined\n[PASS] calling abort() on an errored stream should fulfill with undefined\n[PASS] sink abort() should not be called if stream was erroring due to controller.error() before abort() was called\n[PASS] sink abort() should not be called if stream was erroring due to bad strategy before abort() was called\n[PASS] abort with no arguments should set the stored error to undefined\n[PASS] abort with an undefined argument should set the stored error to undefined\n[PASS] abort with a string argument should set the stored error to that argument\n[PASS] abort on a locked stream should reject\n[PASS] the abort signal is signalled synchronously - write\n[PASS] the abort signal is signalled synchronously - close\n[PASS] the abort signal is not signalled on error\n[PASS] the abort signal is not signalled on write failure\n[PASS] the abort signal is not signalled on close failure\n[PASS] recursive abort() call\n\n{\n  \"idlharness-shadowrealm.window.js\": {\n    \"skip\": \"ShadowRealm support is not enabled\"\n  },\n  \"idlharness.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"piping\\\\general-addition.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"enqueue() must not synchronously call write algorithm\"\n      ]\n    }\n  },\n  \"queuing-strategies-size-function-per-global.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-byte-streams\\\\bad-buffers-and-views.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: enqueuing an already-detached buffer throws\",\n        \"ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\",\n        \"ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\",\n        \"ReadableStream with byte source: reading into an already-detached buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\enqueue-with-detached-buffer.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"enqueue after detaching byobRequest.view.buffer should throw\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\general.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: Throw if close()-ed more than once\",\n        \"ReadableStream with byte source: Throw on enqueue() after close()\",\n        \"ReadableStream with byte source: autoAllocateChunkSize\",\n        \"ReadableStream with byte source: Mix of auto allocate and BYOB\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read()\",\n        \"ReadableStream with byte source: Push source that doesn't understand pull signal\",\n        \"ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\",\n        \"ReadableStream with byte source: enqueue(), read(view) partially, then read()\",\n        \"ReadableStream with byte source: getReader(), enqueue(), close(), then read()\",\n        \"ReadableStream with byte source: enqueue(), close(), getReader(), then read()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\",\n        \"ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\",\n        \"ReadableStream with byte source: read(view), then respond()\",\n        \"ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\",\n        \"ReadableStream with byte source: read(view), then respond() with too big value\",\n        \"ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\",\n        \"ReadableStream with byte source: getReader(), read(view), then cancel()\",\n        \"ReadableStream with byte source: cancel() with partially filled pending pull() request\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\",\n        \"ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\",\n        \"ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\",\n        \"ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\",\n        \"ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\",\n        \"ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\",\n        \"ReadableStream with byte source: read(view), then respond() and close() in pull()\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\",\n        \"ReadableStream with byte source: read() twice, then enqueue() twice\",\n        \"ReadableStream with byte source: Multiple read(view), close() and respond()\",\n        \"ReadableStream with byte source: Multiple read(view), big enqueue()\",\n        \"ReadableStream with byte source: Multiple read(view) and multiple enqueue()\",\n        \"ReadableStream with byte source: read(view), then error()\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\",\n        \"calling respond() twice on the same byobRequest should throw\",\n        \"calling respondWithNewView() twice on the same byobRequest should throw\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\non-transferable-buffers.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\respond-after-enqueue.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"byobRequest.respond() after enqueue() should not crash\",\n        \"byobRequest.respond() with cached byobRequest after enqueue() should not crash\",\n        \"byobRequest.respond() after enqueue() with double read should not crash\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\tee.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\",\n        \"ReadableStream teeing with byte source: chunks should be cloned for each branch\",\n        \"ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\",\n        \"ReadableStream teeing with byte source: errors in the source should propagate to both branches\",\n        \"ReadableStream teeing with byte source: canceling branch1 should not impact branch2\",\n        \"ReadableStream teeing with byte source: canceling branch2 should not impact branch1\",\n        \"ReadableStream teeing with byte source: closing the original should close the branches\",\n        \"ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\",\n        \"ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-streams\\\\cross-realm-crash.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type-message-port.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferred MessageChannel works as expected\",\n        \"Second branch of owning ReadableStream tee should end up into errors with transfer only values\"\n      ]\n    }\n  },\n  \"readable-streams\\\\owning-type-video-frame.any.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"ReadableStream can be constructed with owning type\",\n        \"ReadableStream of type owning should call start with a ReadableStreamDefaultController\",\n        \"ReadableStream should be able to call enqueue with an empty transfer list\",\n        \"ReadableStream should check transfer parameter\",\n        \"ReadableStream of type owning should transfer enqueued chunks\"\n      ]\n    }\n  },\n  \"readable-streams\\\\read-task-handling.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\deserialize-error.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transfer-with-messageport.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transform-stream-members.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferring [object TransformStream],[object ReadableStream] should fail\",\n        \"Transferring [object TransformStream],[object WritableStream] should fail\"\n      ]\n    }\n  },\n  \"transform-streams\\\\invalid-realm.tentative.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  }\n}\n\nRan 65/73 tests, 8 skipped, 54 passed, 4 expected failures, 7 unexpected failures, 0 unexpected passes\nc:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 7 unexpected failures. Consider updating test\\wpt\\status\\streams.json for these files:\nidlharness.any.js\nreadable-byte-streams\\bad-buffers-and-views.any.js\nreadable-byte-streams\\enqueue-with-detached-buffer.any.js\nreadable-byte-streams\\non-transferable-buffers.any.js\nreadable-byte-streams\\general.any.js\nreadable-byte-streams\\respond-after-enqueue.any.js\nreadable-byte-streams\\tee.any.js\n    at process.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":5767.165,"fullname":"wpt/test-streams","closingTestPoint":false}},{"testName":"parallel/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob","id":79,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:352:42\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:357:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":182.998,"fullname":"parallel/test-blob","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestreambyob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestreambyob","id":848,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:57:29\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:62:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":131.001,"fullname":"parallel/test-whatwg-readablebytestreambyob","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win11-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win11_vs2022-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":848,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablestream.js:1659:10)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":191.997,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"parallel/test-filehandle-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-filehandle-readablestream","id":254,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-filehandle-readablestream.js:101:27\n\nNode.js v22.0.0-pre"},"time":204.999,"fullname":"parallel/test-filehandle-readablestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","id":848,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:57:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:55:18)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n\nNode.js v22.0.0-pre"},"time":141.998,"fullname":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":849,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-whatwg-readablestream.mjs:51:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n\nNode.js v22.0.0-pre"},"time":161.999,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"wpt/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-blob","id":964,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] Blob-constructor-dom.window.js: Depends on DOM API\n[SKIPPED] Blob-in-worker.worker.js: Depends on Web Workers API\n[SKIPPED] Blob-slice.any.js: Depends on File API\n[PASS] Blob.arrayBuffer()\n[PASS] Blob.arrayBuffer() empty Blob data\n[PASS] Blob.arrayBuffer() non-ascii input\n[PASS] Blob.arrayBuffer() non-unicode input\n[PASS] Blob.arrayBuffer() concurrent reads\n[PASS] Blob interface object\n[PASS] Blob constructor with no arguments\n[PASS] Blob constructor with no arguments, without 'new'\n[PASS] Blob constructor without brackets\n[PASS] Blob constructor with undefined as first argument\n[PASS] Passing non-objects, Dates and RegExps for blobParts should throw a TypeError.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:58:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] A plain object with custom @@iterator should be treated as a sequence for the blobParts argument.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:81:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] A String object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:92:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] A Uint8Array object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:99:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] The length getter should be invoked and any exceptions should be propagated.\n[PASS] ToUint32 should be applied to the length and any exceptions should be propagated.\n[PASS] slice start is negative, relativeStart will be max((size + start), 0)\n[PASS] slice start is greater than blob size, relativeStart will be min(start, size)\n[PASS] slice end is negative, relativeEnd will be max((size + end), 0)\n[PASS] slice end is greater than blob size, relativeEnd will be min(end, size)\n[EXPECTED_FAILURE][FAIL] Getters and value conversions should happen in order until an exception is thrown.\nassert_array_equals: lengths differ, expected array [\"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 8, got [\"Symbol.iterator\", \"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 9\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:179:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:142:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] ToString should be called on elements of the blobParts array and any exceptions should be propagated.\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (pop).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:211:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (unshift).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:223:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ToString should be called on elements of the blobParts array.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:251:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ArrayBuffer elements of the blobParts array should be supported.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:275:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:285:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing a Float64Array as element of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:300:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing BigInt typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:314:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two blobs\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:337:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two buffers\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:346:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two bufferviews\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:355:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with mixed types\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:367:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] options properties should be accessed in lexicographic order.\nassert_array_equals: expected property 0 to be \"endings\" but got \"type\" (expected array [\"endings\", \"type\"] got [\"type\", \"endings\"])\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:389:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:377:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Arguments should be evaluated from left to right.\nassert_unreached: type getter should not be called. Reached unreachable code\n    at get type [as type] (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:398:22)\n    at new Blob (node:internal/blob:150:7)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:395:5\n    at assert_throws_exactly_impl (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2332:18)\n    at assert_throws_exactly (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2319:9)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Passing 123 for options should throw\n[PASS] Passing 123.4 for options should throw\n[PASS] Passing true for options should throw\n[PASS] Passing \"abc\" for options should throw\n[PASS] Blob with type \"\"\n[PASS] Blob with type \"a\"\n[PASS] Blob with type \"A\"\n[PASS] Blob with type \"text/html\"\n[PASS] Blob with type \"TEXT/HTML\"\n[PASS] Blob with type \"text/plain;charset=utf-8\"\n[PASS] Blob with type \"å\"\n[PASS] Blob with type \"𐑾\"\n[PASS] Blob with type \" image/gif \"\n[PASS] Blob with type \"\\timage/gif\\t\"\n[PASS] Blob with type \"image/gif;\"\n[PASS] Blob with type \"İmage/gif\"\n[PASS] Blob with type \"ımage/gif\"\n[PASS] Blob with type \"image/gif\\0\"\n[PASS] Blob with type \"unknown/unknown\"\n[PASS] Blob with type \"text/plain\"\n[PASS] Blob with type \"image/png\"\n[PASS] Passing a FrozenArray as the blobParts array should work (FrozenArray<MessagePort>).\n[UNEXPECTED_FAILURE][FAIL] Blob.stream()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.stream() empty Blob\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() non-unicode input\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.text()\n[PASS] Blob.text() empty blob data\n[PASS] Blob.text() multi-element array in constructor\n[PASS] Blob.text() non-unicode\n[PASS] Blob.text() different charset param in type option\n[PASS] Blob.text() different charset param with non-ascii input\n[PASS] Blob.text() invalid utf-8 input\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() garbage collection of blob shouldn't break streamconsumption\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.text() concurrent reads\n[UNEXPECTED_FAILURE][FAIL] Reading Blob.stream() with BYOB reader\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n\n{\n  \"Blob-constructor-dom.window.js\": {\n    \"skip\": \"Depends on DOM API\"\n  },\n  \"Blob-constructor.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"A plain object with @@iterator should be treated as a sequence for the blobParts argument.\",\n        \"A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\",\n        \"A String object should be treated as a sequence for the blobParts argument.\",\n        \"A Uint8Array object should be treated as a sequence for the blobParts argument.\",\n        \"Getters and value conversions should happen in order until an exception is thrown.\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (pop).\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (unshift).\",\n        \"ToString should be called on elements of the blobParts array.\",\n        \"ArrayBuffer elements of the blobParts array should be supported.\",\n        \"Passing typed arrays as elements of the blobParts array should work.\",\n        \"Passing a Float64Array as element of the blobParts array should work.\",\n        \"Passing BigInt typed arrays as elements of the blobParts array should work.\",\n        \"Array with two blobs\",\n        \"Array with two buffers\",\n        \"Array with two bufferviews\",\n        \"Array with mixed types\",\n        \"options properties should be accessed in lexicographic order.\",\n        \"Arguments should be evaluated from left to right.\",\n        \"Passing null (index 0) for options should use the defaults.\",\n        \"Passing null (index 0) for options should use the defaults (with newlines).\",\n        \"Passing undefined (index 1) for options should use the defaults.\",\n        \"Passing undefined (index 1) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults.\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults (with newlines).\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults.\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults (with newlines).\"\n      ]\n    }\n  },\n  \"Blob-in-worker.worker.js\": {\n    \"skip\": \"Depends on Web Workers API\"\n  },\n  \"Blob-slice.any.js\": {\n    \"skip\": \"Depends on File API\"\n  },\n  \"Blob-stream.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob.stream()\",\n        \"Blob.stream() non-unicode input\",\n        \"Blob.stream() garbage collection of blob shouldn't break streamconsumption\",\n        \"Reading Blob.stream() with BYOB reader\"\n      ]\n    }\n  }\n}\n\nRan 5/8 tests, 3 skipped, 3 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\FileAPI\\blob.json for these files:\nBlob-stream.any.js\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":308.485,"fullname":"wpt/test-blob","closingTestPoint":false}},{"testName":"wpt/test-streams","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-streams","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] idlharness-shadowrealm.window.js: ShadowRealm support is not enabled\n[SKIPPED] queuing-strategies-size-function-per-global.window.js: Browser-specific test\n[SKIPPED] readable-streams\\cross-realm-crash.window.js: Browser-specific test\n[SKIPPED] readable-streams\\owning-type-video-frame.any.js: Browser-specific test\n[SKIPPED] readable-streams\\read-task-handling.window.js: Browser-specific test\n[SKIPPED] transferable\\deserialize-error.window.js: Browser-specific test\n[SKIPPED] transferable\\transfer-with-messageport.window.js: Browser-specific test\n[SKIPPED] transform-streams\\invalid-realm.tentative.window.js: Browser-specific test\n[PASS] a signal argument 'null' should cause pipeTo() to reject\n[PASS] a signal argument 'AbortSignal' should cause pipeTo() to reject\n[PASS] a signal argument 'true' should cause pipeTo() to reject\n[PASS] a signal argument '-1' should cause pipeTo() to reject\n[PASS] a signal argument '[object AbortSignal]' should cause pipeTo() to reject\n[PASS] an aborted signal should cause the writable stream to reject with an AbortError\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; fulfilled cancel promise\n[PASS] (reason: 'null') all the error objects should be the same object\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; rejected cancel promise\n[PASS] (reason: 'undefined') all the error objects should be the same object\n[PASS] Closing must be propagated backward: starts closed; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] (reason: 'error1: error1') all the error objects should be the same object\n[PASS] Closing must be propagated backward: starts closed; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] preventCancel should prevent canceling the readable\n[PASS] Closing must be propagated backward: starts closed; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] preventAbort should prevent aborting the readable\n[PASS] preventCancel and preventAbort should prevent canceling the readable and aborting the readable\n[PASS] Closing must be propagated backward: starts closed; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = a (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 1 (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = Symbol() (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = [object Object] (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] (reason: 'null') abort should prevent further reads\n[PASS] (reason: 'undefined') abort should prevent further reads\n[PASS] (reason: 'error1: error1') abort should prevent further reads\n[PASS] (reason: 'null') all pending writes should complete on abort\n[PASS] (reason: 'undefined') all pending writes should complete on abort\n[PASS] (reason: 'error1: error1') all pending writes should complete on abort\n[PASS] a rejection from underlyingSource.cancel() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be preferred to one from underlyingSource.cancel()\n[PASS] abort signal takes priority over closed readable\n[PASS] abort signal takes priority over errored readable\n[PASS] abort signal takes priority over closed writable\n[PASS] abort signal takes priority over errored writable\n[PASS] abort should do nothing after the readable is closed\n[PASS] abort should do nothing after the readable is errored\n[PASS] abort should do nothing after the readable is errored, even with pending writes\n[PASS] abort should do nothing after the writable is errored\n[PASS] pipeTo on a teed readable byte stream should only be aborted when both branches are aborted\n[PASS] idl_test validation\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\idlharness.any.js:43:14\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\idlharness.js:3522:28\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'idlharness.any.js'\n\n[PASS] Errors must be propagated backward: starts errored; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = undefined (falsy); fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = null (falsy); fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = false (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = 0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = -0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = NaN (falsy); fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = a (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 1 (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose =  (falsy); fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = Symbol() (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = [object Object] (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write, preventCancel = true; preventAbort = true\n[PASS] Closing must be propagated forward: starts closed; preventClose = true (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] Closing must be propagated forward: starts closed; preventClose = a (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = 1 (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = Symbol() (truthy)\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = [object Object] (truthy)\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true, preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; fulfilled cancel promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; rejected close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; rejected cancel promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = true\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = undefined (falsy); fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = null (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = -0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = NaN (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort =  (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = a (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 1 (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = Symbol() (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = [object Object] (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true, preventClose = true\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel omitted (but cancel is never called)\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel = true\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; fulfilled abort promise\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; fulfilled cancel promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; rejected cancel promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; preventClose = true\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel = true\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write\n[PASS] Errors must be propagated backward: erroring via the controller errors once pending write completes\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write; preventClose = true\n[PASS] Closing must be propagated forward: erroring the writable while flushing pending writes should error pipeTo\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = true\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; rejected abort promise\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = true\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks, but then does\n[EXPECTED_FAILURE][FAIL] enqueue() must not synchronously call write algorithm\nassert_false: write algorithm must not run synchronously expected false got true\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\piping\\general-addition.any.js:14:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'piping\\general-addition.any.js'\n\n[PASS] Piping from an empty ReadableStream into a WritableStream that does not desire chunks, but then the readable stream becomes non-empty and the writable stream starts desiring chunks\n[PASS] Piping from a ReadableStream to a WritableStream that desires more chunks before finishing with previous ones\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = true\n[PASS] Piping must lock both the ReadableStream and WritableStream\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Piping finishing must unlock both the ReadableStream and WritableStream\n[PASS] pipeTo must check the brand of its ReadableStream this value\n[PASS] pipeTo must check the brand of its WritableStream argument\n[PASS] pipeTo must fail if the ReadableStream is locked, and not lock the WritableStream\n[PASS] pipeTo must fail if the WritableStream is locked, and not lock the ReadableStream\n[PASS] Piping from a ReadableStream from which lots of chunks are synchronously readable\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; preventAbort = true\n[PASS] Piping to a WritableStream that does not consume the writes fast enough exerts backpressure on the ReadableStream\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write\n[PASS] Piping from a ReadableStream for which a chunk becomes asynchronously readable after the pipeTo\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is true\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is false\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is true\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is false\n[PASS] pipeTo() should reject if an option getter grabs a writer\n[PASS] pipeTo() promise should resolve if null is passed\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write; preventAbort = true\n[PASS] Piping from an errored readable stream to an erroring writable stream\n[PASS] Piping from an errored readable stream to an errored writable stream\n[PASS] Piping from an errored readable stream to an erroring writable stream; preventAbort = true\n[PASS] Piping from an errored readable stream to an errored writable stream; preventAbort = true\n[PASS] Piping from an errored readable stream to a closing writable stream\n[PASS] Piping from an errored readable stream to a closed writable stream\n[PASS] Piping from a closed readable stream to an erroring writable stream\n[PASS] Piping from a closed readable stream to an errored writable stream\n[PASS] Piping from a closed readable stream to a closed writable stream\n[PASS] pipeThrough should not call pipeTo on this\n[PASS] pipeThrough should not call pipeTo on the ReadableStream prototype\n[PASS] pipeThrough should brand-check this and not allow 'null'\n[PASS] pipeThrough should brand-check readable and not allow 'null'\n[PASS] pipeThrough should brand-check this and not allow 'undefined'\n[PASS] pipeThrough should brand-check readable and not allow 'undefined'\n[PASS] pipeThrough should brand-check this and not allow '0'\n[PASS] pipeThrough should brand-check readable and not allow '0'\n[PASS] pipeThrough should brand-check this and not allow 'NaN'\n[PASS] pipeThrough should brand-check readable and not allow 'NaN'\n[PASS] pipeThrough should brand-check this and not allow 'true'\n[PASS] pipeThrough should brand-check readable and not allow 'true'\n[PASS] pipeThrough should brand-check this and not allow 'ReadableStream'\n[PASS] pipeThrough should brand-check readable and not allow 'ReadableStream'\n[PASS] pipeThrough should brand-check this and not allow '[object ReadableStream]'\n[PASS] pipeThrough should brand-check readable and not allow '[object ReadableStream]'\n[PASS] pipeThrough should brand-check writable and not allow 'null'\n[PASS] pipeThrough should brand-check writable and not allow 'undefined'\n[PASS] pipeThrough should brand-check writable and not allow '0'\n[PASS] pipeThrough should brand-check writable and not allow 'NaN'\n[PASS] pipeThrough should brand-check writable and not allow 'true'\n[PASS] pipeThrough should brand-check writable and not allow 'WritableStream'\n[PASS] pipeThrough should brand-check writable and not allow '[object WritableStream]'\n[PASS] pipeThrough should rethrow errors from accessing readable or writable\n[PASS] invalid values of signal should throw; specifically 'null'\n[PASS] invalid values of signal should throw; specifically '0'\n[PASS] invalid values of signal should throw; specifically 'NaN'\n[PASS] invalid values of signal should throw; specifically 'true'\n[PASS] invalid values of signal should throw; specifically 'AbortSignal'\n[PASS] invalid values of signal should throw; specifically '[object AbortSignal]'\n[PASS] pipeThrough should accept a real AbortSignal\n[PASS] pipeThrough should throw if this is locked\n[PASS] pipeThrough should throw if writable is locked\n[PASS] pipeThrough should not care if readable is locked\n[PASS] pipeThrough() should throw if an option getter grabs a writer\n[PASS] pipeThrough() should not throw if option is null\n[PASS] pipeThrough() should not throw if signal is undefined\n[PASS] pipeThrough() should throw if readable/writable getters throw\n[PASS] Piping through a duck-typed pass-through transform stream should work\n[PASS] piping should not be observable\n[PASS] tee should not be observable\n[PASS] Piping through a transform errored on the writable end does not cause an unhandled promise rejection\n[PASS] preventCancel should work\n[PASS] preventClose should work\n[PASS] preventAbort should work\n[PASS] pipeThrough should stop after getting preventAbort throws\n[PASS] pipeThrough should stop after getting preventCancel throws\n[PASS] pipeThrough should stop after getting preventClose throws\n[PASS] pipeThrough should stop after getting signal throws\n[PASS] pipeTo should stop after getting preventAbort throws\n[PASS] pipeTo should stop after getting preventCancel throws\n[PASS] pipeTo should stop after getting preventClose throws\n[PASS] pipeTo should stop after getting signal throws\n[PASS] Piping through an identity transform stream should close the destination when the source closes\n[PASS] CountQueuingStrategy: Can construct a with a valid high water mark\n[PASS] CountQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] CountQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] CountQueuingStrategy: size is the same function across all instances\n[PASS] CountQueuingStrategy: size should have the right name\n[PASS] CountQueuingStrategy: subclassing should work correctly\n[PASS] CountQueuingStrategy: size should not have a prototype property\n[PASS] ByteLengthQueuingStrategy: Can construct a with a valid high water mark\n[PASS] ByteLengthQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] ByteLengthQueuingStrategy: size is the same function across all instances\n[PASS] ByteLengthQueuingStrategy: size should have the right name\n[PASS] ByteLengthQueuingStrategy: subclassing should work correctly\n[PASS] ByteLengthQueuingStrategy: size should not have a prototype property\n[PASS] CountQueuingStrategy: size should not be a constructor\n[PASS] ByteLengthQueuingStrategy: size should not be a constructor\n[PASS] CountQueuingStrategy: size should have the right length\n[PASS] ByteLengthQueuingStrategy: size should have the right length\n[PASS] CountQueuingStrategy: size behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: size behaves as expected with strange arguments\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueuing an already-detached buffer throws\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:54:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:51:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:50:1\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStream with byte source: enqueuing a zero-length buffer throws\n[PASS] ReadableStream with byte source: enqueuing a zero-length view on a non-zero-length buffer throws\n[PASS] ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has a different length (autoAllocateChunkSize)\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:30:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:28:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into an already-detached buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:84:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:82:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:100:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:98:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:113:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:111:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:136:10)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at async_test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:676:34)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:123:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a real view\n[UNEXPECTED_FAILURE][FAIL] enqueue after detaching byobRequest.view.buffer should throw\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"Error: cannot proceed\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\enqueue-with-detached-buffer.any.js:20:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\enqueue-with-detached-buffer.any.js'\n\n[PASS] getReader({mode: \"byob\"}) throws on non-bytes streams\n[PASS] ReadableStream with byte source can be constructed with no errors\n[PASS] getReader({mode}) must perform ToString()\n[PASS] ReadableStream with byte source: start() throws an exception\n[PASS] ReadableStream with byte source: desiredSize when closed\n[PASS] ReadableStream with byte source: desiredSize when errored\n[PASS] ReadableStream with byte source: pull() function is not callable\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw if close()-ed more than once\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1492:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1479:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw on enqueue() after close()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1511:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1498:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: autoAllocateChunkSize cannot be 0\n[PASS] ReadableStreamBYOBReader can be constructed directly\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream argument\n[PASS] ReadableStreamBYOBReader constructor requires an unlocked ReadableStream\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream with type \"bytes\"\n[PASS] ReadableStream with byte source: enqueue() with a non-transferable buffer\n[PASS] ReadableStream constructor should not accept a strategy with a size defined if type is \"bytes\"\n[PASS] ReadableStream with byte source: Construct and expect start and pull being called\n[PASS] ReadableStream with byte source: No automatic pull call if start doesn't finish\n[PASS] ReadableStream with byte source: Construct with highWaterMark of 0\n[PASS] ReadableStream with byte source: read() with a non-transferable buffer\n[PASS] ReadableStream with byte source: getReader(), then releaseLock()\n[PASS] ReadableStream with byte source: getReader() with mode set to byob, then releaseLock()\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a BYOB reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a BYOB reader automatically\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\nassert_unreached: read() should not reject Reached unreachable code\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\non-transferable-buffers.any.js'\n\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamDefaultReader must reject pending read()\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamBYOBReader must reject pending read()\n[PASS] ReadableStream with byte source: Automatic pull() after start()\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read()\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: autoAllocateChunkSize\nassert_equals: pull() must have been invoked once expected 1 but got 0\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:355:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Mix of auto allocate and BYOB\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read(view)\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:505:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:503:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Push source that doesn't understand pull signal\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:565:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:580:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:578:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), read(view) partially, then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:604:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:599:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), enqueue(), close(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:652:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), close(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:672:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:670:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:752:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() with too big value\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1000:18)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:996:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1026:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1024:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1056:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1054:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), read(view), then cancel()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: cancel() with partially filled pending pull() request\nassert_equals: 1 pull() should have been made in response to partial fill by enqueue() expected 1 but got 0\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1152:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1172:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1168:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1211:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1205:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1247:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1243:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1277:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1272:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1316:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1312:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1366:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1361:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1438:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1434:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1460:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1456:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() and close() in pull()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read() twice, then enqueue() twice\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1726:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), close() and respond()\nCannot read properties of null (reading 'respond')\nTypeError: Cannot read properties of null (reading 'respond')\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1765:26)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), big enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1801:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view) and multiple enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1835:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: read(view) with passing undefined as view must fail\n[PASS] ReadableStream with byte source: read(view) with passing an empty object as view must fail\n[PASS] ReadableStream with byte source: Even read(view) with passing ArrayBufferView like object as view must fail\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[PASS] ReadableStream with byte source: read() on an errored stream\n[PASS] ReadableStream with byte source: read(), then error()\n[PASS] ReadableStream with byte source: read(view) on an errored stream\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() with cached byobRequest after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then error()\npromise_rejects_exactly: read() must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: Throwing in pull function must error the stream\n[PASS] ReadableStream with byte source: Throwing in pull in response to read() must be ignored if the stream is errored in it\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() with double read should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"TypeError: foo\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respond() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respondWithNewView() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerRespond (node:internal/webstreams/readablestream:2717:17)\n    at ReadableStreamBYOBRequest.respond (node:internal/webstreams/readablestream:702:5)\n    at Object.pull (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:333:21)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream teeing with byte source: rs.tee() returns an array of two ReadableStreams\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing with byte source\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks should be cloned for each branch\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: errors in the source should propagate to both branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should not impact branch2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch2 should not impact branch1\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream teeing with byte source: canceling both branches should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing with byte source: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing with byte source: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] ReadableStream teeing with byte source: erroring a teed stream should properly handle canceled branches\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: closing the original should close the branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream teeing with byte source: erroring the original should immediately error the branches\n[PASS] ReadableStream teeing with byte source: erroring the original should error pending reads from default reader\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:317:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:372:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Async iterator instances should have the correct list of properties\n[PASS] Readable stream: throwing strategy.size getter\n[PASS] Readable stream: throwing strategy.highWaterMark getter\n[PASS] values() throws if there's already a lock\n[PASS] Readable stream: invalid strategy.highWaterMark\n[PASS] ReadableStream teeing with byte source: should not pull any chunks if no branches are reading\n[PASS] return() should unlock the stream synchronously when preventCancel = false\n[PASS] return() should unlock the stream synchronously when preventCancel = true\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\nError\n    at get_stack (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4546:21)\n    at new AssertionError (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4539:22)\n    at assert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4523:19)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:759:29)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2646:35\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Readable stream: strategy.size errors the stream and then throws\n[PASS] Readable stream: strategy.size errors the stream and then returns Infinity\n[PASS] Readable stream: throwing strategy.size method\n[PASS] Async-iterating a push source\n[PASS] Async-iterating a pull source\n[PASS] Readable stream: invalid strategy.size return value\n[PASS] Async-iterating a push source with undefined values\n[PASS] Async-iterating a pull source with undefined values\n[PASS] Readable stream: invalid strategy.size return value when pulling\n[PASS] Async-iterating a pull source manually\n[PASS] Async-iterating an errored stream throws\n[PASS] Async-iterating a closed stream never executes the loop body, but works fine\n[PASS] ReadableStream teeing with byte source: should not pull when original is already errored\n[PASS] Async-iterating an empty but not closed/errored stream never executes the loop body and stalls the async function\n[PASS] Async-iterating a partially consumed stream\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = false\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = true\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = false\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = true\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = false\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = true\n[PASS] Cancellation behavior when manually calling return(); preventCancel = false\n[PASS] Cancellation behavior when manually calling return(); preventCancel = true\n[PASS] next() rejects if the stream errors\n[PASS] return() does not rejects if the stream has not errored yet\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:440:26)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] return() rejects if the stream has errored\n[PASS] next() that succeeds; next() that reports an error; next()\n[PASS] next() that succeeds; next() that reports an error(); next() [no awaiting]\n[PASS] next() that succeeds; next() that reports an error(); return()\n[PASS] next() that succeeds; next() that reports an error(); return() [no awaiting]\n[PASS] next() that succeeds; return()\n[PASS] next() that succeeds; return() [no awaiting]\n[PASS] return(); next()\n[PASS] return(); next() [no awaiting]\n[PASS] return(); return()\n[PASS] return(); return() [no awaiting]\n[PASS] Acquiring a reader after exhaustively async-iterating a stream\n[PASS] Acquiring a reader after return()ing from a stream that errors\n[PASS] Acquiring a reader after partially async-iterating a stream\n[PASS] Acquiring a reader and reading the remaining chunks after partially async-iterating a stream with preventCancel = true\n[PASS] close() while next() is pending\n[PASS] Underlying source start: throwing getter\n[PASS] Underlying source start: throwing method\n[PASS] Underlying source: throwing pull getter (initial pull)\n[PASS] Underlying source cancel: throwing getter\n[PASS] Underlying source: throwing pull method (initial pull)\n[PASS] Underlying source pull: throwing getter (second pull does not result in a second get)\n[PASS] Underlying source pull: throwing method (second pull)\n[PASS] Underlying source cancel: throwing method\n[PASS] Underlying source: calling enqueue on an empty canceled stream should throw\n[PASS] Underlying source: calling enqueue on a non-empty canceled stream should throw\n[PASS] Underlying source: calling enqueue on a closed stream should throw\n[PASS] Underlying source: calling enqueue on an errored stream should throw\n[PASS] Underlying source: calling close twice on an empty stream should throw the second time\n[PASS] Underlying source: calling close twice on a non-empty stream should throw the second time\n[PASS] Underlying source: calling close on an empty canceled stream should throw\n[PASS] Underlying source: calling close on a non-empty canceled stream should throw\n[PASS] Underlying source: calling close after error should throw\n[PASS] Underlying source: calling error twice should not throw\n[PASS] Underlying source: calling error after close should not throw\n[PASS] Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error\n[PASS] Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error\n[PASS] read should not error if it dequeues and pull() throws\n[PASS] ReadableStream cancellation: cancel(reason) should pass through the given reason to the underlying source\n[PASS] ReadableStream cancellation: integration test on an infinite stream derived from a random push source\n[PASS] underlyingSource argument should be converted after queuingStrategy argument\n[PASS] ReadableStream cancellation: cancel() on a locked stream should fail and not call the underlying source cancel\n[PASS] ReadableStream cancellation: should fulfill promise when cancel callback went fine\n[PASS] ReadableStream cancellation: returning a value from the underlying source's cancel should not affect the fulfillment value of the promise returned by the stream's cancel\n[PASS] ReadableStream cancellation: should reject promise when cancel callback raises an exception\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (1)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (2)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should reject when that one does\n[PASS] ReadableStream cancellation: cancelling before start finishes should prevent pull() from being called\n[PASS] Can construct a readable stream with a valid CountQueuingStrategy\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 0)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 1)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 4)\n[PASS] ReadableStreamDefaultReader constructor should get a ReadableStream object as argument\n[PASS] ReadableStreamDefaultReader closed should always return the same promise object\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via direct construction)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via direct construction)\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via getReader)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via getReader)\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is closed\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is errored\n[PASS] getReader() should call ToString() on mode\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] Reading from a reader for an empty stream will wait until a chunk is available\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] cancel() on a reader does not release the reader\n[PASS] closed should be fulfilled after stream is closed (.closed access before acquiring)\n[PASS] closed should be rejected after reader releases its lock (multiple stream locks)\n[PASS] closed is replaced when stream closes and reader releases its lock\n[PASS] closed is replaced when stream errors and reader releases its lock\n[PASS] Multiple readers can access the stream in sequence\n[PASS] Cannot use an already-released reader to unlock a stream again\n[PASS] cancel() on a released reader is a no-op and does not pass through\n[PASS] Getting a second reader after erroring the stream and releasing the reader should succeed\n[PASS] ReadableStreamDefaultReader closed promise should be rejected with undefined if that is the error\n[PASS] ReadableStreamDefaultReader: if start rejects with no parameter, it should error the stream with an undefined error\n[PASS] Erroring a ReadableStream after checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Erroring a ReadableStream before checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Reading twice on a stream that gets closed\n[PASS] Reading twice on a closed stream\n[PASS] Reading twice on an errored stream\n[PASS] Reading twice on a stream that gets errored\n[PASS] controller.close() should clear the list of pending read requests\n[PASS] Second reader can read chunks after first reader was released with pending read requests\n[PASS] ReadableStream.from throws on invalid iterables; specifically null\n[PASS] ReadableStream.from throws on invalid iterables; specifically undefined\n[PASS] ReadableStream.from throws on invalid iterables; specifically 0\n[PASS] ReadableStream.from throws on invalid iterables; specifically NaN\n[PASS] ReadableStream.from throws on invalid iterables; specifically true\n[PASS] ReadableStream.from throws on invalid iterables; specifically {}\n[PASS] ReadableStream.from throws on invalid iterables; specifically Object.create(null)\n[PASS] ReadableStream.from throws on invalid iterables; specifically a function\n[PASS] ReadableStream.from throws on invalid iterables; specifically a symbol\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@iterator method\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@asyncIterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@iterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@asyncIterator method\n[PASS] ReadableStream.from ignores @@iterator if @@asyncIterator exists\n[PASS] ReadableStream.from accepts an array of values\n[PASS] ReadableStream.from accepts an array of promises\n[PASS] ReadableStream.from accepts an array iterator\n[PASS] ReadableStream.from accepts a string\n[PASS] ReadableStream.from accepts a Set\n[PASS] ReadableStream.from accepts a Set iterator\n[PASS] ReadableStream.from accepts a sync generator\n[PASS] ReadableStream.from accepts an async generator\n[PASS] ReadableStream.from accepts a sync iterable of values\n[PASS] ReadableStream.from accepts a sync iterable of promises\n[PASS] ReadableStream.from accepts an async iterable\n[PASS] ReadableStream.from accepts a ReadableStream\n[PASS] ReadableStream.from accepts a ReadableStream async iterator\n[PASS] ReadableStream.from accepts an empty iterable\n[PASS] ReadableStream.from: stream errors when next() rejects\n[PASS] ReadableStream.from: stream stalls when next() never settles\n[PASS] ReadableStream.from: calls next() after first read()\n[PASS] ReadableStream.from: cancelling the returned stream calls and awaits return()\n[PASS] ReadableStream.from: return() is not called when iterator completes normally\n[PASS] ReadableStream.from: cancel() rejects when return() fulfills with a non-object\n[PASS] ReadableStream can be constructed with no errors\n[PASS] ReadableStream can't be constructed with garbage\n[PASS] ReadableStream.from: reader.read() inside next()\n[PASS] ReadableStream.from: reader.cancel() inside next()\n[PASS] ReadableStream can't be constructed with an invalid type\n[PASS] ReadableStream.from: reader.cancel() inside return()\n[PASS] ReadableStream constructor should throw for non-function start arguments\n[PASS] ReadableStream.from(array), push() to array while reading\n[PASS] ReadableStream constructor will not tolerate initial garbage as cancel argument\n[PASS] ReadableStream constructor will not tolerate initial garbage as pull argument\n[PASS] ReadableStream start should be called with the proper thisArg\n[PASS] ReadableStream start controller parameter should be extensible\n[PASS] default ReadableStream getReader() should only accept mode:undefined\n[PASS] ReadableStream: enqueue should throw when the stream is readable but draining\n[PASS] ReadableStream: enqueue should throw when the stream is closed\n[PASS] ReadableStream: desiredSize when closed\n[PASS] ReadableStream: desiredSize when errored\n[PASS] Subclassing ReadableStream should work\n[PASS] ReadableStream strategies: the default strategy should give desiredSize of 1 to start, decreasing by 1 per enqueue\n[PASS] ReadableStream should be able to call start method within prototype chain of its source\n[PASS] ReadableStream start should be able to return a promise\n[PASS] ReadableStream start should be able to return a promise and reject it\n[PASS] ReadableStream should be able to enqueue different objects.\n[PASS] ReadableStream: if pull rejects, it should error the stream\n[PASS] ReadableStream: should only call pull once upon starting the stream\n[PASS] ReadableStream: should call pull when trying to read from a started, empty stream\n[PASS] ReadableStreamController methods should continue working properly when scripts lose their reference to the readable stream\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from before start fulfills\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from after start fulfills\n[PASS] ReadableStream: should call pull in reaction to read()ing the last chunk, if not draining\n[PASS] ReadableStream closed promise should fulfill even if the stream and reader JS references are lost\n[EXPECTED_FAILURE][FAIL] Transferred MessageChannel works as expected\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[EXPECTED_FAILURE][FAIL] Second branch of owning ReadableStream tee should end up into errors with transfer only values\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[PASS] ReadableStream: should not call pull() in reaction to read()ing the last chunk, if draining\n[PASS] ReadableStream: should not call pull until the previous pull call's promise fulfills\n[PASS] ReadableStream: should pull after start, and after every read\n[PASS] ReadableStream: should not call pull after start if the stream is now closed\n[PASS] ReadableStream: should call pull after enqueueing from inside pull (with no read requests), if strategy allows\n[PASS] ReadableStream pull should be able to close a stream.\n[PASS] ReadableStream pull should be able to error a stream.\n[PASS] ReadableStream pull should be able to error a stream and throw.\n[PASS] ReadableStream: should call underlying source methods as methods\n[PASS] ReadableStream strategies: the default strategy should continue giving desiredSize of 1 if the chunks are read immediately\n[PASS] ReadableStream closed promise should reject even if stream and reader JS references are lost\n[PASS] ReadableStream integration test: adapting a random push source\n[PASS] ReadableStream integration test: adapting a sync pull source\n[EXPECTED_FAILURE][FAIL] ReadableStream can be constructed with owning type\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:7:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:6:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should call start with a ReadableStreamDefaultController\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:22:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:10:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream should be able to call enqueue with an empty transfer list\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:38:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:26:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream should check transfer parameter\nassert_throws_js: transfer list is not empty function \"() => { controller.enqueue(buffer, { transfer : [ buffer ] }); }\" did not throw\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:50:7)\n    at setupReadableStreamDefaultController (node:internal/webstreams/readablestream:2440:23)\n    at setupReadableStreamDefaultControllerFromSource (node:internal/webstreams/readablestream:2472:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:278:7)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should transfer enqueued chunks\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[PASS] ReadableStream integration test: adapting an async pull source\n[PASS] Garbage-collecting a ReadableStreamDefaultReader should not unlock its stream\n[PASS] ReadableStream tee() should not touch Object.prototype properties\n[PASS] ReadableStream tee() should not call the global ReadableStream\n[PASS] tee() should not call Promise.prototype.then()\n[PASS] pipeTo() should not call Promise.prototype.then()\n[PASS] ReadableStream async iterator should use the original values of getReader() and ReadableStreamDefaultReader methods\n[PASS] enqueue() inside size() should work\n[PASS] close() inside size() should not crash\n[PASS] close request inside size() should work\n[PASS] error() inside size() should work\n[PASS] desiredSize inside size() should work\n[PASS] cancel() inside size() should work\n[PASS] pipeTo() inside size() should behave as expected\n[PASS] read() inside of size() should behave as expected\n[PASS] getReader() inside size() should work\n[PASS] tee() inside size() should work\n[PASS] ReadableStream teeing: rs.tee() returns an array of two ReadableStreams\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing\n[PASS] ReadableStreamTee should not use a modified ReadableStream constructor from the global object\n[PASS] ReadableStream teeing: should be able to read one branch to the end without affecting the other\n[PASS] ReadableStream teeing: values should be equal across each branch\n[PASS] ReadableStream teeing: errors in the source should propagate to both branches\n[PASS] ReadableStream teeing: canceling branch1 should not impact branch2\n[PASS] ReadableStream teeing: canceling branch2 should not impact branch1\n[PASS] ReadableStream teeing: canceling both branches should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] ReadableStream teeing: erroring a teed stream should properly handle canceled branches\n[PASS] ReadableStream teeing: erroring a teed stream should error both branches\n[PASS] ReadableStream teeing: closing the original should immediately close the branches\n[PASS] ReadableStream teeing: erroring the original should immediately error the branches\n[PASS] ReadableStream teeing: canceling branch1 should finish when branch2 reads until end of stream\n[PASS] ReadableStream teeing: canceling branch1 should finish when original stream errors\n[PASS] ReadableStream teeing: canceling both branches in sequence with delay\n[PASS] ReadableStream teeing: failing to cancel when canceling both branches in sequence with delay\n[PASS] ReadableStreamTee should not pull more chunks than can fit in the branch queue\n[PASS] ReadableStreamTee should only pull enough to fill the emptiest queue\n[PASS] Running templatedRSEmpty with ReadableStream (empty)\n[PASS] ReadableStream (empty): instances have the correct methods and properties\n[PASS] ReadableStream (empty): calling getReader with invalid arguments should throw appropriate errors\n[PASS] Running templatedRSEmptyReader with ReadableStream (empty) reader\n[PASS] ReadableStream (empty) reader: instances have the correct methods and properties\n[PASS] ReadableStream (empty) reader: locked should be true\n[PASS] ReadableStreamTee should not pull when original is already errored\n[PASS] ReadableStream (empty) reader: read() should return distinct promises each time\n[PASS] ReadableStream (empty) reader: getReader() again on the stream should fail\n[PASS] ReadableStream (empty) reader: releasing the lock should cause locked to become false\n[PASS] Running templatedRSClosed with ReadableStream (closed via call in start)\n[PASS] ReadableStream (closed via call in start): locked should be false\n[PASS] ReadableStream (closed via call in start): getReader() should be OK\n[PASS] ReadableStream (closed via call in start): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream (closed via call in start): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed before getting reader)\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed after getting reader)\n[PASS] Running templatedRSClosed with ReadableStream (closed via cancel)\n[PASS] ReadableStream (closed via cancel): locked should be false\n[PASS] ReadableStream (closed via cancel): getReader() should be OK\n[PASS] ReadableStream (closed via cancel): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream (closed via cancel): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed via cancel after getting reader)\n[PASS] Running templatedRSErrored with ReadableStream (errored via call in start)\n[PASS] ReadableStream (errored via call in start): locked should be false\n[PASS] Running templatedRSErroredSyncOnly with ReadableStream (errored via call in start)\n[PASS] ReadableStream (errored via call in start): should not be able to obtain additional readers if we don't release the first lock\n[PASS] Running templatedRSErrored with ReadableStream (errored via returning a rejected promise in start)\n[PASS] ReadableStream (errored via returning a rejected promise in start): locked should be false\n[PASS] Running templatedRSErroredReader with ReadableStream (errored via returning a rejected promise in start) reader\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored before getting reader)\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored after getting reader)\n[PASS] Running templatedRSTwoChunksOpenReader with ReadableStream (two chunks enqueued, still open) reader\n[PASS] ReadableStream (two chunks enqueued, still open) reader: read() should return distinct promises each time\n[PASS] Running templatedRSTwoChunksClosedReader with ReadableStream (two chunks enqueued, then closed) reader\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 1 is reading\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object ReadableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] Transferring [object ReadableStream],[object TransformStream] should fail\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object WritableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] Transferring [object WritableStream],[object TransformStream] should fail\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 2 is reading\n[PASS] ReadableStreamTee stops pulling when original stream errors while both branches are reading\n[PASS] ReadableStream teeing: enqueue() and close() while both branches are pulling\n[PASS] backpressure allows no transforms with a default identity transform and no reader\n[PASS] backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader\n[PASS] transform() should keep being called as long as there is no backpressure\n[PASS] writes should resolve as soon as transform completes\n[PASS] calling pull() before the first write() with backpressure should work\n[PASS] transform() should be able to read the chunk it just enqueued\n[PASS] blocking transform() should cause backpressure\n[PASS] writer.closed should resolve after readable is canceled during start\n[PASS] writer.closed should resolve after readable is canceled with backpressure\n[PASS] writer.closed should resolve after readable is canceled with no backpressure\n[PASS] cancelling the readable should cause a pending write to resolve\n[PASS] cancelling the readable side should call transformer.cancel()\n[PASS] cancelling the readable side should reject if transformer.cancel() throws\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe\n[PASS] aborting the writable side should call transformer.abort()\n[PASS] aborting the writable side should reject if transformer.cancel() throws\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe after startup\n[PASS] closing the writable side should reject if a parallel transformer.cancel() throws\n[PASS] readable.cancel() and a parallel writable.close() should reject if a transformer.cancel() calls controller.error()\n[PASS] writable.abort() and readable.cancel() should reject if a transformer.cancel() calls controller.error()\n[PASS] cancelling the readable side of a TransformStream should abort a full pipe\n[PASS] errored TransformStream should not enqueue new chunks\n[PASS] TransformStream constructor should throw when start does\n[PASS] when strategy.size throws inside start(), the constructor should throw the same error\n[PASS] when strategy.size calls controller.error() then throws, the constructor should throw the first error\n[PASS] TransformStream flush is called immediately when the writable is closed, if no writes are queued\n[PASS] TransformStream errors thrown in transform put the writable and readable in an errored state\n[PASS] TransformStream errors thrown in flush put the writable and readable in an errored state\n[PASS] TransformStream flush is called after all queued writes finish, once the writable is closed\n[PASS] TransformStream flush gets a chance to enqueue more into the readable\n[PASS] TransformStream flush gets a chance to enqueue more into the readable, and can then async close\n[PASS] TransformStream transformer.start() rejected promise should error the stream\n[PASS] error() during flush should cause writer.close() to reject\n[PASS] closing the writable side should call transformer.flush() and a parallel readable.cancel() should not reject\n[PASS] when controller.error is followed by a rejection, the error reason should come from controller.error\n[PASS] cancelling the readable side should error the writable\n[PASS] it should be possible to error the readable between close requested and complete\n[PASS] an exception from transform() should error the stream if terminate has been requested but not completed\n[PASS] abort should set the close reason for the writable when it happens before cancel during start, and cancel should reject\n[PASS] abort should set the close reason for the writable when it happens before cancel during underlying sink write, but cancel should still succeed\n[PASS] controller.error() should do nothing the second time it is called\n[PASS] controller.error() should close writable immediately after readable.cancel()\n[PASS] controller.error() should do nothing after readable.cancel() resolves\n[PASS] controller.error() should do nothing after writable.abort() has completed\n[PASS] controller.error() should do nothing after a transformer method has thrown an exception\n[PASS] erroring during write with backpressure should result in the write failing\n[PASS] a write() that was waiting for backpressure should reject if the writable is aborted\n[PASS] the readable should be errored with the reason passed to the writable abort() method\n[PASS] TransformStream can be constructed with a transform function\n[PASS] TransformStream can be constructed with no transform function\n[PASS] TransformStream writable starts in the writable state\n[PASS] enqueue() should throw after controller.terminate()\n[PASS] controller.terminate() should do nothing the second time it is called\n[PASS] specifying a defined readableType should throw\n[PASS] specifying a defined writableType should throw\n[PASS] Subclassing TransformStream should work\n[PASS] Identity TransformStream: can read from readable what is put into writable\n[PASS] Uppercaser sync TransformStream: can read from readable transformed version of what is put into writable\n[PASS] Uppercaser-doubler sync TransformStream: can read both chunks put into the readable\n[PASS] Uppercaser async TransformStream: can read from readable transformed version of what is put into writable\n[PASS] Uppercaser-doubler async TransformStream: can read both chunks put into the readable\n[PASS] TransformStream: by default, closing the writable closes the readable (when there are no queued writes)\n[PASS] TransformStream: by default, closing the writable waits for transforms to finish before closing both\n[PASS] TransformStream: by default, closing the writable closes the readable after sync enqueues and async done\n[PASS] testing \"\" (length 1)\n[PASS] testing \"\" (length 0)\n[PASS] testing \"{{in1}}\" (length 1)\n[PASS] testing \"z{{in1}}\" (length 1)\n[PASS] TransformStream: by default, closing the writable closes the readable after async enqueues and async done\n[PASS] testing \"{{in1}}q\" (length 1)\n[PASS] Transform stream should call transformer methods as methods\n[PASS] testing \"{{in1}}{{in1}\" (length 1)\n[PASS] methods should not not have .apply() or .call() called\n[PASS] testing \"{{in1}}{{in1},}\" (length 2)\n[PASS] testing \"{{in1,}}\" (length 2)\n[PASS] testing \"{{,in1}}\" (length 2)\n[PASS] testing \"{,{in1}}\" (length 2)\n[PASS] testing \"{{,in1}\" (length 2)\n[PASS] testing \"{\" (length 1)\n[PASS] testing \"{,\" (length 2)\n[PASS] testing \"{,{,i,n,1,},}\" (length 7)\n[PASS] testing \"{{in1}}{{in2}}{{in1}}\" (length 1)\n[PASS] testing \"{{wrong}}\" (length 1)\n[PASS] testing \"{{wron,g}}\" (length 2)\n[PASS] testing \"{{quine}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}}\" (length 1)\n[PASS] TransformStream start, transform, and flush should be strictly ordered\n[PASS] it should be possible to call transform() synchronously\n[PASS] closing the writable should close the readable when there are no queued chunks, even with backpressure\n[PASS] enqueue() should throw after readable.cancel()\n[PASS] terminate() should abort writable immediately after readable.cancel()\n[PASS] terminate() should do nothing after readable.cancel() resolves\n[PASS] start() should not be called twice\n[PASS] TransformStream constructor should not call setters for highWaterMark or size\n[PASS] TransformStream should use the original value of ReadableStream and WritableStream\n[PASS] transformer method start should be called with the right number of arguments\n[PASS] transformer method start should be called even when it's located on the prototype chain\n[PASS] transformer method transform should be called with the right number of arguments\n[PASS] transformer method transform should be called even when it's located on the prototype chain\n[PASS] transformer method flush should be called with the right number of arguments\n[PASS] transformer method flush should be called even when it's located on the prototype chain\n[PASS] enqueue() inside size() should work\n[PASS] terminate() inside size() should work\n[PASS] error() inside size() should work\n[PASS] desiredSize inside size() should work\n[PASS] readable cancel() inside size() should work\n[PASS] pipeTo() inside size() should work\n[PASS] read() inside of size() should work\n[PASS] writableStrategy highWaterMark should work\n[PASS] writer.write() inside size() should work\n[PASS] default writable strategy should be equivalent to { highWaterMark: 1 }\n[PASS] a RangeError should be thrown for an invalid highWaterMark\n[PASS] writableStrategy highWaterMark should be converted to a number\n[PASS] readableStrategy highWaterMark should be converted to a number\n[PASS] synchronous writer.write() inside size() should work\n[PASS] writer.close() inside size() should work\n[PASS] readableStrategy highWaterMark should work\n[PASS] writer.abort() inside size() should work\n[PASS] writable should have the correct size() function\n[PASS] default readable strategy should be equivalent to { highWaterMark: 0 }\n[PASS] a bad readableStrategy size function should cause writer.write() to reject on an identity transform\n[PASS] a bad readableStrategy size function should error the stream on enqueue even when transformer.transform() catches the exception\n[PASS] ReadableStream (empty) reader: read() should never settle\n[PASS] controller.enqueue() should throw after controller.terminate()\n[PASS] WritableStreamDefaultController.signal\n[PASS] controller.terminate() should error pipeTo()\n[PASS] Aborting a WritableStream before it starts should cause the writer's unsettled ready promise to reject\n[PASS] controller.terminate() should prevent remaining chunks from being processed\n[PASS] Aborting a WritableStream should cause the writer's fulfilled ready promise to reset to a rejected one\n[PASS] controller.error() after controller.terminate() with queued chunk should error the readable\n[PASS] controller.error() after controller.terminate() without queued chunk should do nothing\n[PASS] controller.terminate() inside flush() should not prevent writer.close() from succeeding\n[PASS] abort() on a released writer rejects\n[PASS] Aborting a WritableStream immediately prevents future writes\n[PASS] Aborting a WritableStream prevents further writes after any that are in progress\n[PASS] Fulfillment value of writer.abort() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream if sink's abort throws, the promise returned by writer.abort() rejects\n[PASS] WritableStream if sink's abort throws, the promise returned by multiple writer.abort()s is the same and rejects\n[PASS] WritableStream if sink's abort throws, the promise returned by ws.abort() rejects\n[PASS] WritableStream if sink's abort throws, for an abort performed during a write, the promise returned by ws.abort() rejects\n[PASS] Aborting a WritableStream passes through the given reason\n[PASS] Aborting a WritableStream puts it in an errored state with the error passed to abort()\n[PASS] Aborting a WritableStream causes any outstanding write() promises to be rejected with the reason supplied\n[PASS] Closing but then immediately aborting a WritableStream causes the stream to error\n[PASS] Closing a WritableStream and aborting it while it closes causes the stream to ignore the abort attempt\n[PASS] Aborting a WritableStream after it is closed is a no-op\n[PASS] WritableStream should NOT call underlying sink's close if no abort is supplied (historical)\n[PASS] returning a thenable from abort() should work\n[PASS] .closed should not resolve before fulfilled write()\n[PASS] .closed should not resolve before rejected write(); write() error should not overwrite abort() error\n[PASS] writes should be satisfied in order when aborting\n[PASS] writes should be satisfied in order after rejected write when aborting\n[PASS] close() should reject with abort reason why abort() is first error\n[PASS] underlying abort() should not be called until underlying write() completes\n[PASS] underlying abort() should not be called if underlying close() has started\n[PASS] if underlying close() has started and then rejects, the abort() and close() promises should reject with the underlying close rejection reason\n[PASS] an abort() that happens during a write() should trigger the underlying abort() even with a close() queued\n[PASS] if a writer is created for a stream with a pending abort, its ready should be rejected with the abort error\n[PASS] writer close() promise should resolve before abort() promise\n[PASS] writer.ready should reject on controller error without waiting for underlying write\n[PASS] Writable stream: throwing strategy.size getter\n[PASS] reject any non-function value for strategy.size\n[PASS] Writable stream: throwing strategy.highWaterMark getter\n[PASS] Writable stream: invalid strategy.highWaterMark\n[PASS] Writable stream: invalid size beats invalid highWaterMark\n[PASS] Writable stream: throwing strategy.size method\n[PASS] Writable stream: invalid strategy.size return value\n[PASS] writer.abort() while there is an in-flight write, and then finish the write with rejection\n[PASS] writer.abort(), controller.error() while there is an in-flight write, and then finish the write\n[PASS] writer.abort(), controller.error() while there is an in-flight close, and then finish the close\n[PASS] start: errors in start cause WritableStream constructor to throw\n[PASS] close: throwing getter should cause constructor to throw\n[PASS] write: throwing getter should cause write() and closed to reject\n[PASS] start: non-function start method\n[PASS] write: non-function write method\n[PASS] close: non-function close method\n[PASS] abort: non-function abort method with .apply\n[PASS] abort: throwing getter should cause abort() and closed to reject\n[PASS] close: throwing method should cause writer close() and ready to reject\n[PASS] close: returning a rejected promise should cause writer close() and ready to reject\n[PASS] write: throwing method should cause write() and closed to reject\n[PASS] write: returning a promise that becomes rejected after the writer write() should cause writer write() and ready to reject\n[PASS] controller.error(), writer.abort() while there is an in-flight write, and then finish the write\n[PASS] write: returning a rejected promise (second write) should cause writer write() and ready to reject\n[PASS] abort: throwing method should cause abort() and closed to reject\n[PASS] controller.error(), writer.abort() while there is an in-flight close, and then finish the close\n[PASS] releaseLock() while aborting should reject the original closed promise\n[PASS] releaseLock() during delayed async abort() should reject the writer.closed promise\n[PASS] sink abort() should not be called until sink start() is done\n[PASS] if start attempts to error the controller after abort() has been called, then it should lose\n[PASS] stream abort() promise should still resolve if sink start() rejects\n[PASS] writer abort() during sink start() should replace the writer.ready promise synchronously\n[PASS] promises returned from other writer methods should be rejected when writer abort() happens during sink start()\n[PASS] abort() should succeed despite rejection from write\n[PASS] abort() should be rejected with the rejection returned from close()\n[PASS] a rejecting sink.write() should not prevent sink.abort() from being called\n[PASS] when start errors after stream abort(), underlying sink abort() should be called anyway\n[PASS] when calling abort() twice on the same stream, both should give the same promise that fulfills with undefined\n[PASS] when calling abort() twice on the same stream, but sequentially so so there's no pending abort the second time, both should fulfill with undefined\n[PASS] calling abort() on an errored stream should fulfill with undefined\n[PASS] sink abort() should not be called if stream was erroring due to controller.error() before abort() was called\n[PASS] sink abort() should not be called if stream was erroring due to bad strategy before abort() was called\n[PASS] abort with no arguments should set the stored error to undefined\n[PASS] abort with an undefined argument should set the stored error to undefined\n[PASS] abort with a string argument should set the stored error to that argument\n[PASS] abort on a locked stream should reject\n[PASS] the abort signal is signalled synchronously - write\n[PASS] the abort signal is signalled synchronously - close\n[PASS] the abort signal is not signalled on error\n[PASS] the abort signal is not signalled on write failure\n[PASS] the abort signal is not signalled on close failure\n[PASS] recursive abort() call\n[PASS] fulfillment value of writer.close() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] when sink calls error asynchronously while sink close is in-flight, the stream should not become errored\n[PASS] when sink calls error synchronously while closing, the stream should not become errored\n[PASS] when the sink throws during close, and the close is requested while a write is still in-flight, the stream should become errored during the close\n[PASS] releaseLock on a stream with a pending write in which the stream has been errored\n[PASS] releaseLock on a stream with a pending close in which controller.error() was called\n[PASS] when close is called on a WritableStream in writable state, ready should return a fulfilled promise\n[PASS] when close is called on a WritableStream in waiting state, ready promise should be fulfilled\n[PASS] when close is called on a WritableStream in waiting state, ready should be fulfilled immediately even if close takes a long time\n[PASS] returning a thenable from close() should work\n[PASS] releaseLock() should not change the result of sync close()\n[PASS] releaseLock() should not change the result of async close()\n[PASS] close() should set state to CLOSED even if writer has detached\n[PASS] the promise returned by async abort during close should resolve\n[PASS] promises must fulfill/reject in the expected order on closure\n[PASS] promises must fulfill/reject in the expected order on aborted closure\n[PASS] promises must fulfill/reject in the expected order on aborted and errored closure\n[PASS] close() should not reject until no sink methods are in flight\n[PASS] ready promise should be initialised as fulfilled for a writer on a closed stream\n[PASS] close() on a writable stream should work\n[PASS] close() on a locked stream should reject\n[PASS] close() on an erroring stream should reject\n[PASS] close() on an errored stream should reject\n[PASS] close() on an closed stream should reject\n[PASS] close() on a stream with a pending close should reject\n[PASS] WritableStream should be constructible with no arguments\n[PASS] underlyingSink argument should be converted after queuingStrategy argument\n[PASS] WritableStream instances should have standard methods and properties\n[PASS] WritableStreamDefaultController constructor should throw\n[PASS] WritableStreamDefaultController constructor should throw when passed an initialised WritableStream\n[PASS] WritableStreamDefaultWriter should throw unless passed a WritableStream\n[PASS] WritableStreamDefaultWriter constructor should throw when stream argument is locked\n[PASS] controller argument should be passed to start method\n[PASS] controller argument should be passed to write method\n[PASS] controller argument should not be passed to close method\n[PASS] highWaterMark should be reflected to desiredSize\n[PASS] WritableStream should be writable and ready should fulfill immediately if the strategy does not apply backpressure\n[PASS] Closing a writable stream with in-flight writes below the high water mark delays the close call properly\n[PASS] Can construct a writable stream with a valid CountQueuingStrategy\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 0)\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 4)\n[PASS] ReadableStream (empty) reader: two read()s should both never settle\n[PASS] ReadableStream (empty) reader: releasing the lock should reject all pending read requests\n[PASS] ReadableStream (empty) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: releasing the lock should cause closed calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: canceling via the reader should cause the reader to act closed\n[PASS] ReadableStream (empty) reader: canceling via the stream should fail\n[PASS] ReadableStream (closed via call in start): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed before getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed before getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed before getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (closed via cancel): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed via cancel after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed via cancel after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed via cancel after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (errored via call in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via call in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via call in start): should be able to obtain a second reader, with the correct closed promise\n[PASS] ReadableStream (errored via call in start): cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via call in start): reader cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via returning a rejected promise in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via returning a rejected promise in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: closed should reject with the error\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: read() should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored before getting reader): read() should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored after getting reader): read() should reject with the error\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (sequential)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (nested)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: cancel() after a read() should still give that single read result\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (sequential)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (nested)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: draining the stream via read() should cause the reader closed promise to fulfill, but locked stays true\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock after the stream is closed should cause locked to become false\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: reader's closed property always returns the same promise\n[PASS] controller.error() on erroring stream should not throw\n[PASS] controller.error() should error the stream\n[PASS] surplus calls to controller.error() should be a no-op\n[PASS] controller.error() on errored stream should not throw\n[PASS] controller.error() on closed stream should not throw\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] desiredSize on a released writer\n[PASS] desiredSize initial value\n[PASS] desiredSize on a writer for an errored stream\n[PASS] ws.getWriter() on a closing WritableStream\n[PASS] ws.getWriter() on an aborted WritableStream\n[PASS] Subclassing WritableStream should work\n[PASS] the locked getter should return true if the stream has a writer\n[PASS] desiredSize on a writer for a closed stream\n[PASS] ws.getWriter() on a closed WritableStream\n[PASS] ws.getWriter() on an errored WritableStream\n[PASS] closed and ready on a released writer\n[PASS] WritableStream should call underlying sink methods as methods\n[PASS] methods should not not have .apply() or .call() called\n[PASS] WritableStream's strategy.size should not be called as a method\n[PASS] redundant releaseLock() is no-op\n[PASS] ready promise should fire before closed on releaseLock\n[PASS] sink method start should be called with the right number of arguments\n[PASS] sink method start should be called even when it's located on the prototype chain\n[PASS] sink method write should be called with the right number of arguments\n[PASS] sink method write should be called even when it's located on the prototype chain\n[PASS] sink method close should be called with the right number of arguments\n[PASS] sink method close should be called even when it's located on the prototype chain\n[PASS] sink method abort should be called with the right number of arguments\n[PASS] sink method abort should be called even when it's located on the prototype chain\n[PASS] writes should be written in the standard order\n[PASS] writer.write() promises should resolve in the standard order\n[PASS] controller.error() should work when called from within strategy.size()\n[PASS] close() should work when called from within strategy.size()\n[PASS] abort() should work when called from within strategy.size()\n[PASS] releaseLock() should abort the write() when called within strategy.size()\n[PASS] original reader should error when new reader is created within strategy.size()\n[PASS] underlying sink's write or close should not be called if start throws\n[PASS] underlying sink's write should not be called until start finishes\n[PASS] underlying sink's close should not be called until start finishes\n[PASS] underlying sink's write or close should not be invoked if the promise returned by start is rejected\n[PASS] returning a thenable from start() should work\n[PASS] controller.error() during start should cause writes to fail\n[PASS] controller.error() during async start should cause existing writes to fail\n[PASS] when start() rejects, writer promises should reject in standard order\n[PASS] WritableStream should complete asynchronous writes before close resolves\n[PASS] WritableStream should complete synchronous writes before close resolves\n[PASS] fulfillment value of ws.write() call should be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream should transition to waiting until write is acknowledged\n[PASS] when write returns a rejected promise, queued writes and close should be cleared\n[PASS] when sink's write throws an error, the stream should become errored and the promise should reject\n[PASS] writer.write(), ready and closed reject with the error passed to controller.error() made before sink.write rejection\n[PASS] a large queue of writes should be processed completely\n[PASS] WritableStreamDefaultWriter should work when manually constructed\n[PASS] returning a thenable from write() should work\n[PASS] failing DefaultWriter constructor should not release an existing writer\n[PASS] write() on a stream with HWM 0 should not cause the ready Promise to resolve\n[PASS] writing to a released writer should reject the returned promise\n\n{\n  \"idlharness-shadowrealm.window.js\": {\n    \"skip\": \"ShadowRealm support is not enabled\"\n  },\n  \"idlharness.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"piping\\\\general-addition.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"enqueue() must not synchronously call write algorithm\"\n      ]\n    }\n  },\n  \"queuing-strategies-size-function-per-global.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-byte-streams\\\\bad-buffers-and-views.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: enqueuing an already-detached buffer throws\",\n        \"ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\",\n        \"ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\",\n        \"ReadableStream with byte source: reading into an already-detached buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\enqueue-with-detached-buffer.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"enqueue after detaching byobRequest.view.buffer should throw\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\general.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: Throw if close()-ed more than once\",\n        \"ReadableStream with byte source: Throw on enqueue() after close()\",\n        \"ReadableStream with byte source: autoAllocateChunkSize\",\n        \"ReadableStream with byte source: Mix of auto allocate and BYOB\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read()\",\n        \"ReadableStream with byte source: Push source that doesn't understand pull signal\",\n        \"ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\",\n        \"ReadableStream with byte source: enqueue(), read(view) partially, then read()\",\n        \"ReadableStream with byte source: getReader(), enqueue(), close(), then read()\",\n        \"ReadableStream with byte source: enqueue(), close(), getReader(), then read()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\",\n        \"ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\",\n        \"ReadableStream with byte source: read(view), then respond()\",\n        \"ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\",\n        \"ReadableStream with byte source: read(view), then respond() with too big value\",\n        \"ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\",\n        \"ReadableStream with byte source: getReader(), read(view), then cancel()\",\n        \"ReadableStream with byte source: cancel() with partially filled pending pull() request\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\",\n        \"ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\",\n        \"ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\",\n        \"ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\",\n        \"ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\",\n        \"ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\",\n        \"ReadableStream with byte source: read(view), then respond() and close() in pull()\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\",\n        \"ReadableStream with byte source: read() twice, then enqueue() twice\",\n        \"ReadableStream with byte source: Multiple read(view), close() and respond()\",\n        \"ReadableStream with byte source: Multiple read(view), big enqueue()\",\n        \"ReadableStream with byte source: Multiple read(view) and multiple enqueue()\",\n        \"ReadableStream with byte source: read(view), then error()\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\",\n        \"calling respond() twice on the same byobRequest should throw\",\n        \"calling respondWithNewView() twice on the same byobRequest should throw\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\non-transferable-buffers.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\respond-after-enqueue.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"byobRequest.respond() after enqueue() should not crash\",\n        \"byobRequest.respond() with cached byobRequest after enqueue() should not crash\",\n        \"byobRequest.respond() after enqueue() with double read should not crash\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\tee.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\",\n        \"ReadableStream teeing with byte source: chunks should be cloned for each branch\",\n        \"ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\",\n        \"ReadableStream teeing with byte source: errors in the source should propagate to both branches\",\n        \"ReadableStream teeing with byte source: canceling branch1 should not impact branch2\",\n        \"ReadableStream teeing with byte source: canceling branch2 should not impact branch1\",\n        \"ReadableStream teeing with byte source: closing the original should close the branches\",\n        \"ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\",\n        \"ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-streams\\\\cross-realm-crash.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type-message-port.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferred MessageChannel works as expected\",\n        \"Second branch of owning ReadableStream tee should end up into errors with transfer only values\"\n      ]\n    }\n  },\n  \"readable-streams\\\\owning-type-video-frame.any.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"ReadableStream can be constructed with owning type\",\n        \"ReadableStream of type owning should call start with a ReadableStreamDefaultController\",\n        \"ReadableStream should be able to call enqueue with an empty transfer list\",\n        \"ReadableStream should check transfer parameter\",\n        \"ReadableStream of type owning should transfer enqueued chunks\"\n      ]\n    }\n  },\n  \"readable-streams\\\\read-task-handling.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\deserialize-error.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transfer-with-messageport.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transform-stream-members.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferring [object TransformStream],[object ReadableStream] should fail\",\n        \"Transferring [object TransformStream],[object WritableStream] should fail\"\n      ]\n    }\n  },\n  \"transform-streams\\\\invalid-realm.tentative.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  }\n}\n\nRan 65/73 tests, 8 skipped, 54 passed, 4 expected failures, 7 unexpected failures, 0 unexpected passes\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 7 unexpected failures. Consider updating test\\wpt\\status\\streams.json for these files:\nidlharness.any.js\nreadable-byte-streams\\bad-buffers-and-views.any.js\nreadable-byte-streams\\enqueue-with-detached-buffer.any.js\nreadable-byte-streams\\general.any.js\nreadable-byte-streams\\non-transferable-buffers.any.js\nreadable-byte-streams\\respond-after-enqueue.any.js\nreadable-byte-streams\\tee.any.js\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":2867.332,"fullname":"wpt/test-streams","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":849,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablestream.js:1659:10)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":186.005,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"parallel/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob","id":79,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:352:42\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:357:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":217.003,"fullname":"parallel/test-blob","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestreambyob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestreambyob","id":848,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:57:29\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:62:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":168.002,"fullname":"parallel/test-whatwg-readablebytestreambyob","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2019-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":848,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablestream.js:1659:10)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":366.003,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"parallel/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2022_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob","id":78,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:352:42\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-blob.js:357:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":190.999,"fullname":"parallel/test-blob","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestreambyob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2022_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestreambyob","id":848,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:57:29\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestreambyob.js:62:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n\nNode.js v22.0.0-pre"},"time":124,"fullname":"parallel/test-whatwg-readablebytestreambyob","closingTestPoint":false}},{"testName":"parallel/test-blob-file-backed","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob-file-backed","id":85,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Can't clean tmpdir: c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.78\nFiles blocking: [ 'test-file-backed-blob.txt', 'test-file-backed-blob2.txt' ]\n\nnode:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n\nNode.js v22.0.0-pre"},"time":931.333,"fullname":"parallel/test-blob-file-backed","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream","id":847,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream.js:245:14)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":171.013,"fullname":"parallel/test-whatwg-readablebytestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-webstreams-transfer","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-webstreams-transfer","id":860,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:133:18)\n    at Object.start (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:129:20)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n\nNode.js v22.0.0-pre"},"time":186.012,"fullname":"parallel/test-whatwg-webstreams-transfer","closingTestPoint":false}},{"testName":"wpt/test-structured-clone","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win10-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win10-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win10_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-structured-clone","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[PASS] primitive undefined\n[PASS] primitive null\n[PASS] primitive true\n[PASS] primitive false\n[PASS] primitive string, empty string\n[PASS] primitive string, lone high surrogate\n[PASS] primitive string, lone low surrogate\n[PASS] primitive string, NUL\n[PASS] primitive string, astral character\n[PASS] primitive number, 0.2\n[PASS] primitive number, 0\n[PASS] primitive number, -0\n[PASS] primitive number, NaN\n[PASS] primitive number, Infinity\n[PASS] primitive number, -Infinity\n[PASS] primitive number, 9007199254740992\n[PASS] primitive number, -9007199254740992\n[PASS] primitive number, 9007199254740994\n[PASS] primitive number, -9007199254740994\n[PASS] primitive BigInt, 0n\n[PASS] primitive BigInt, -0n\n[PASS] primitive BigInt, -9007199254740994000n\n[PASS] primitive BigInt, -9007199254740994000900719925474099400090071992547409940009007199254740994000n\n[PASS] Array primitives\n[PASS] Object primitives\n[PASS] Boolean true\n[PASS] Boolean false\n[PASS] Array Boolean objects\n[PASS] Object Boolean objects\n[PASS] String empty string\n[PASS] String lone high surrogate\n[PASS] String lone low surrogate\n[PASS] String NUL\n[PASS] String astral character\n[PASS] Array String objects\n[PASS] Object String objects\n[PASS] Number 0.2\n[PASS] Number 0\n[PASS] Number -0\n[PASS] Number NaN\n[PASS] Number Infinity\n[PASS] Number -Infinity\n[PASS] Number 9007199254740992\n[PASS] Number -9007199254740992\n[PASS] Number 9007199254740994\n[PASS] Number -9007199254740994\n[PASS] BigInt -9007199254740994n\n[PASS] Array Number objects\n[PASS] Object Number objects\n[PASS] Date 0\n[PASS] Date -0\n[PASS] Date -8.64e15\n[PASS] Date 8.64e15\n[PASS] Array Date objects\n[PASS] Object Date objects\n[PASS] RegExp flags and lastIndex\n[PASS] RegExp sticky flag\n[PASS] RegExp unicode flag\n[PASS] RegExp empty\n[PASS] RegExp slash\n[PASS] RegExp new line\n[PASS] Array RegExp object, RegExp flags and lastIndex\n[PASS] Array RegExp object, RegExp sticky flag\n[PASS] Array RegExp object, RegExp unicode flag\n[PASS] Array RegExp object, RegExp empty\n[PASS] Array RegExp object, RegExp slash\n[PASS] Array RegExp object, RegExp new line\n[PASS] Object RegExp object, RegExp flags and lastIndex\n[PASS] Object RegExp object, RegExp sticky flag\n[PASS] Object RegExp object, RegExp unicode flag\n[PASS] Object RegExp object, RegExp empty\n[PASS] Object RegExp object, RegExp slash\n[PASS] Object RegExp object, RegExp new line\n[UNEXPECTED_FAILURE][FAIL] Blob basic\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired high surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired low surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob paired surrogates (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Blob empty\n[UNEXPECTED_FAILURE][FAIL] Blob NUL\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array Blob object, Blob basic\n[PASS] Array Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Array Blob object, Blob empty\n[PASS] Array Blob object, Blob NUL\n[PASS] Array Blob object, two Blobs\n[PASS] Object Blob object, Blob basic\n[PASS] Object Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Object Blob object, Blob empty\n[PASS] Object Blob object, Blob NUL\n[EXPECTED_FAILURE][FAIL] File basic\nassert_true: instanceof File expected true got false\n    at compare_File (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:352:3)\n    at Object.f (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:19:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests-harness.js:37:9)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array sparse\n[PASS] Array with non-index property\n[PASS] Object with index property and length\n[PASS] Array with circular reference\n[PASS] Object with circular reference\n[PASS] Array with identical property values\n[PASS] Object with identical property values\n[PASS] Object with property on prototype\n[PASS] Object with non-enumerable property\n[PASS] Object with non-writable property\n[PASS] Object with non-configurable property\n[PASS] ObjectPrototype must lose its exotic-ness when cloned\n[PASS] ArrayBuffer\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n    at readNext (node:internal/blob:335:18)\n    at Object.pull (node:internal/blob:382:9)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: c:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n\n{\n  \"structured-clone.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob basic\",\n        \"Blob unpaired high surrogate (invalid utf-8)\",\n        \"Blob unpaired low surrogate (invalid utf-8)\",\n        \"Blob paired surrogates (invalid utf-8)\",\n        \"Blob NUL\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ],\n      \"expected\": [\n        \"File basic\"\n      ]\n    }\n  }\n}\n\nRan 1/1 tests, 0 skipped, -1 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nc:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\html\\webappapis\\structured-clone.json for these files:\nstructured-clone.any.js\n    at process.<anonymous> (c:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":304.892,"fullname":"wpt/test-structured-clone","closingTestPoint":false}},{"testName":"parallel/test-blob-file-backed","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-blob-file-backed","id":86,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Can't clean tmpdir: C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.78\nFiles blocking: [ 'test-file-backed-blob.txt', 'test-file-backed-blob2.txt' ]\n\nnode:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n\nNode.js v22.0.0-pre"},"time":984.061,"fullname":"parallel/test-blob-file-backed","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream","id":847,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream.js:245:14)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":195.009,"fullname":"parallel/test-whatwg-readablebytestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-webstreams-transfer","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-webstreams-transfer","id":860,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:133:18)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-webstreams-transfer.js:129:20)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n\nNode.js v22.0.0-pre"},"time":182.013,"fullname":"parallel/test-whatwg-webstreams-transfer","closingTestPoint":false}},{"testName":"wpt/test-structured-clone","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-4","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-structured-clone","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[PASS] primitive undefined\n[PASS] primitive null\n[PASS] primitive true\n[PASS] primitive false\n[PASS] primitive string, empty string\n[PASS] primitive string, lone high surrogate\n[PASS] primitive string, lone low surrogate\n[PASS] primitive string, NUL\n[PASS] primitive string, astral character\n[PASS] primitive number, 0.2\n[PASS] primitive number, 0\n[PASS] primitive number, -0\n[PASS] primitive number, NaN\n[PASS] primitive number, Infinity\n[PASS] primitive number, -Infinity\n[PASS] primitive number, 9007199254740992\n[PASS] primitive number, -9007199254740992\n[PASS] primitive number, 9007199254740994\n[PASS] primitive number, -9007199254740994\n[PASS] primitive BigInt, 0n\n[PASS] primitive BigInt, -0n\n[PASS] primitive BigInt, -9007199254740994000n\n[PASS] primitive BigInt, -9007199254740994000900719925474099400090071992547409940009007199254740994000n\n[PASS] Array primitives\n[PASS] Object primitives\n[PASS] Boolean true\n[PASS] Boolean false\n[PASS] Array Boolean objects\n[PASS] Object Boolean objects\n[PASS] String empty string\n[PASS] String lone high surrogate\n[PASS] String lone low surrogate\n[PASS] String NUL\n[PASS] String astral character\n[PASS] Array String objects\n[PASS] Object String objects\n[PASS] Number 0.2\n[PASS] Number 0\n[PASS] Number -0\n[PASS] Number NaN\n[PASS] Number Infinity\n[PASS] Number -Infinity\n[PASS] Number 9007199254740992\n[PASS] Number -9007199254740992\n[PASS] Number 9007199254740994\n[PASS] Number -9007199254740994\n[PASS] BigInt -9007199254740994n\n[PASS] Array Number objects\n[PASS] Object Number objects\n[PASS] Date 0\n[PASS] Date -0\n[PASS] Date -8.64e15\n[PASS] Date 8.64e15\n[PASS] Array Date objects\n[PASS] Object Date objects\n[PASS] RegExp flags and lastIndex\n[PASS] RegExp sticky flag\n[PASS] RegExp unicode flag\n[PASS] RegExp empty\n[PASS] RegExp slash\n[PASS] RegExp new line\n[PASS] Array RegExp object, RegExp flags and lastIndex\n[PASS] Array RegExp object, RegExp sticky flag\n[PASS] Array RegExp object, RegExp unicode flag\n[PASS] Array RegExp object, RegExp empty\n[PASS] Array RegExp object, RegExp slash\n[PASS] Array RegExp object, RegExp new line\n[PASS] Object RegExp object, RegExp flags and lastIndex\n[PASS] Object RegExp object, RegExp sticky flag\n[PASS] Object RegExp object, RegExp unicode flag\n[PASS] Object RegExp object, RegExp empty\n[PASS] Object RegExp object, RegExp slash\n[PASS] Object RegExp object, RegExp new line\n[UNEXPECTED_FAILURE][FAIL] Blob basic\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired high surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob unpaired low surrogate (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob paired surrogates (invalid utf-8)\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Blob empty\n[UNEXPECTED_FAILURE][FAIL] Blob NUL\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array Blob object, Blob basic\n[PASS] Array Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Array Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Array Blob object, Blob empty\n[PASS] Array Blob object, Blob NUL\n[PASS] Array Blob object, two Blobs\n[PASS] Object Blob object, Blob basic\n[PASS] Object Blob object, Blob unpaired high surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob unpaired low surrogate (invalid utf-8)\n[PASS] Object Blob object, Blob paired surrogates (invalid utf-8)\n[PASS] Object Blob object, Blob empty\n[PASS] Object Blob object, Blob NUL\n[EXPECTED_FAILURE][FAIL] File basic\nassert_true: instanceof File expected true got false\n    at compare_File (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:352:3)\n    at Object.f (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests.js:19:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\html\\webappapis\\structured-clone\\structured-clone-battery-of-tests-harness.js:37:9)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n[PASS] Array sparse\n[PASS] Array with non-index property\n[PASS] Object with index property and length\n[PASS] Array with circular reference\n[PASS] Object with circular reference\n[PASS] Array with identical property values\n[PASS] Object with identical property values\n[PASS] Object with property on prototype\n[PASS] Object with non-enumerable property\n[PASS] Object with non-writable property\n[PASS] Object with non-configurable property\n[PASS] ObjectPrototype must lose its exotic-ness when cloned\n[PASS] ArrayBuffer\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at BlobReader.<anonymous> (node:internal/blob:364:17)\n    at readNext (node:internal/blob:335:18)\n    at Object.pull (node:internal/blob:382:9)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-structured-clone.js 'structured-clone.any.js'\n\n\n{\n  \"structured-clone.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob basic\",\n        \"Blob unpaired high surrogate (invalid utf-8)\",\n        \"Blob unpaired low surrogate (invalid utf-8)\",\n        \"Blob paired surrogates (invalid utf-8)\",\n        \"Blob NUL\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ],\n      \"expected\": [\n        \"File basic\"\n      ]\n    }\n  }\n}\n\nRan 1/1 tests, 0 skipped, -1 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\html\\webappapis\\structured-clone.json for these files:\nstructured-clone.any.js\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":314.012,"fullname":"wpt/test-structured-clone","closingTestPoint":false}},{"testName":"parallel/test-runner-watch-mode","timestamp":1703706162002,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-runner-watch-mode","id":725,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner watch mode\n    # Subtest: should run tests repeatedly\n    ok 1 - should run tests repeatedly\n      ---\n      duration_ms: 2352.5865\n      ...\n    # Subtest: should run tests with dependency repeatedly\n    ok 2 - should run tests with dependency repeatedly\n      ---\n      duration_ms: 1518.3817\n      ...\n    # Subtest: should run tests with ESM dependency\n    ok 3 - should run tests with ESM dependency\n      ---\n      duration_ms: 1458.1464\n      ...\n    # Subtest: should support running tests without a file\n    ok 4 - should support running tests without a file\n      ---\n      duration_ms: 1467.2354\n      ...\n    1..4\nok 1 - test runner watch mode\n  ---\n  duration_ms: 6799.7834\n  type: 'suite'\n  ...\n1..1\n# tests 4\n# suites 1\n# pass 4\n# fail 0\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 6822.4251\nCan't clean tmpdir: C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.655\nFiles blocking: [ 'dependency.js', 'dependency.mjs', 'test.js' ]\n\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:69\n    throw e;\n    ^\n\nError: EBUSY: resource busy or locked, rmdir 'C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.655'\n    at rmdirSync (node:fs:1217:11)\n    at _rmdirSync (node:internal/fs/rimraf:235:5)\n    at rimrafSync (node:internal/fs/rimraf:193:7)\n    at Object.rmSync (node:fs:1266:10)\n    at rmSync (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:20:8)\n    at onexit (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:54:5)\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:43:14)\n    at process.emit (node:events:531:35) {\n  errno: -4082,\n  code: 'EBUSY',\n  syscall: 'rmdir',\n  path: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.655'\n}\n\nNode.js v22.0.0-pre"},"time":7240.093,"fullname":"parallel/test-runner-watch-mode","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2016-COMPILED_BY-vs2022-x86 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2016-COMPILED_BY-vs2022-x86/25216/","buildNumber":25216,"builtOn":"test-azure_msft-win2016_vs2017-x64-2","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":849,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablestream.js:1659:10)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n    at Module._load (node:internal/modules/cjs/loader:1028:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\n\nNode.js v22.0.0-pre"},"time":180.003,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"parallel/test-filehandle-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-filehandle-readablestream","id":250,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2625\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                        ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-filehandle-readablestream.js:101:27\n\nNode.js v22.0.0-pre"},"time":325.008,"fullname":"parallel/test-filehandle-readablestream","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","id":846,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:57:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-whatwg-readablebytestream-bad-buffers-and-views.js:55:18)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\n\nNode.js v22.0.0-pre"},"time":280.006,"fullname":"parallel/test-whatwg-readablebytestream-bad-buffers-and-views","closingTestPoint":false}},{"testName":"parallel/test-whatwg-readablestream","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"parallel/test-whatwg-readablestream","id":847,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/webstreams/readablestream:2767\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n                            ^\n\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-whatwg-readablestream.mjs:51:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n\nNode.js v22.0.0-pre"},"time":343.998,"fullname":"parallel/test-whatwg-readablestream","closingTestPoint":false}},{"testName":"wpt/test-blob","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-blob","id":964,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] Blob-constructor-dom.window.js: Depends on DOM API\n[SKIPPED] Blob-in-worker.worker.js: Depends on Web Workers API\n[SKIPPED] Blob-slice.any.js: Depends on File API\n[PASS] Blob interface object\n[PASS] slice start is negative, relativeStart will be max((size + start), 0)\n[PASS] Blob constructor with no arguments\n[PASS] slice start is greater than blob size, relativeStart will be min(start, size)\n[PASS] slice end is negative, relativeEnd will be max((size + end), 0)\n[PASS] slice end is greater than blob size, relativeEnd will be min(end, size)\n[PASS] Blob constructor with no arguments, without 'new'\n[PASS] Blob constructor without brackets\n[PASS] Blob constructor with undefined as first argument\n[PASS] Blob.arrayBuffer()\n[PASS] Blob.arrayBuffer() empty Blob data\n[PASS] Blob.arrayBuffer() non-ascii input\n[PASS] Blob.arrayBuffer() non-unicode input\n[PASS] Blob.arrayBuffer() concurrent reads\n[PASS] Passing non-objects, Dates and RegExps for blobParts should throw a TypeError.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:58:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] A plain object with custom @@iterator should be treated as a sequence for the blobParts argument.\n[EXPECTED_FAILURE][FAIL] A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:81:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] A String object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:92:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] A Uint8Array object should be treated as a sequence for the blobParts argument.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:99:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] The length getter should be invoked and any exceptions should be propagated.\n[PASS] ToUint32 should be applied to the length and any exceptions should be propagated.\n[EXPECTED_FAILURE][FAIL] Getters and value conversions should happen in order until an exception is thrown.\nassert_array_equals: lengths differ, expected array [\"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 8, got [\"Symbol.iterator\", \"Symbol.iterator\", \"length getter\", \"length valueOf\", \"0 getter\", \"0 toString\", \"length getter\", \"length valueOf\", \"1 getter\"] length 9\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:179:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:142:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] ToString should be called on elements of the blobParts array and any exceptions should be propagated.\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (pop).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:211:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Changes to the blobParts array should be reflected in the returned Blob (unshift).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:223:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ToString should be called on elements of the blobParts array.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:251:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] ArrayBuffer elements of the blobParts array should be supported.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:275:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:285:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing a Float64Array as element of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:300:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing BigInt typed arrays as elements of the blobParts array should work.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:314:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two blobs\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:337:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Blob.text()\n[EXPECTED_FAILURE][FAIL] Array with two buffers\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:346:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with two bufferviews\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:40:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob_binary (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:33:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:355:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Array with mixed types\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:367:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\n    at Module.load (node:internal/modules/cjs/loader:1212:32)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Blob.text() empty blob data\n[PASS] Blob.text() multi-element array in constructor\n[PASS] Blob.text() non-unicode\n[PASS] Blob.text() different charset param in type option\n[EXPECTED_FAILURE][FAIL] options properties should be accessed in lexicographic order.\nassert_array_equals: expected property 0 to be \"endings\" but got \"type\" (expected array [\"endings\", \"type\"] got [\"type\", \"endings\"])\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:389:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:377:1\n    at Script.runInThisContext (node:vm:121:12)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Arguments should be evaluated from left to right.\nassert_unreached: type getter should not be called. Reached unreachable code\n    at get type [as type] (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:398:22)\n    at new Blob (node:internal/blob:150:7)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:395:5\n    at assert_throws_exactly_impl (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2332:18)\n    at assert_throws_exactly (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2319:9)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Blob.text() different charset param with non-ascii input\n[PASS] Blob.text() invalid utf-8 input\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing null (index 0) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing undefined (index 1) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Blob.text() concurrent reads\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 2) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"[object Object]\" (index 3) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing object \"/regex/\" (index 4) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults.\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:412:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[EXPECTED_FAILURE][FAIL] Passing function \"function() {}\" (index 5) for options should use the defaults (with newlines).\nFileReader is not defined\nReferenceError: FileReader is not defined\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:16:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at self.test_blob (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\support\\Blob.js:9:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:419:3\n    at Array.forEach (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\FileAPI\\blob\\Blob-constructor.any.js:411:3\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-constructor.any.js'\n\n[PASS] Passing 123 for options should throw\n[PASS] Passing 123.4 for options should throw\n[PASS] Passing true for options should throw\n[PASS] Passing \"abc\" for options should throw\n[PASS] Blob with type \"\"\n[PASS] Blob with type \"a\"\n[PASS] Blob with type \"A\"\n[PASS] Blob with type \"text/html\"\n[PASS] Blob with type \"TEXT/HTML\"\n[PASS] Blob with type \"text/plain;charset=utf-8\"\n[PASS] Blob with type \"å\"\n[PASS] Blob with type \"𐑾\"\n[PASS] Blob with type \" image/gif \"\n[PASS] Blob with type \"\\timage/gif\\t\"\n[PASS] Blob with type \"image/gif;\"\n[PASS] Blob with type \"İmage/gif\"\n[PASS] Blob with type \"ımage/gif\"\n[PASS] Blob with type \"image/gif\\0\"\n[PASS] Blob with type \"unknown/unknown\"\n[PASS] Blob with type \"text/plain\"\n[PASS] Blob with type \"image/png\"\n[PASS] Passing a FrozenArray as the blobParts array should work (FrozenArray<MessagePort>).\n[UNEXPECTED_FAILURE][FAIL] Blob.stream()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[PASS] Blob.stream() empty Blob\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() non-unicode input\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Blob.stream() garbage collection of blob shouldn't break streamconsumption\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] Reading Blob.stream() with BYOB reader\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-blob.js 'Blob-stream.any.js'\n\n\n{\n  \"Blob-constructor-dom.window.js\": {\n    \"skip\": \"Depends on DOM API\"\n  },\n  \"Blob-constructor.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"A plain object with @@iterator should be treated as a sequence for the blobParts argument.\",\n        \"A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.\",\n        \"A String object should be treated as a sequence for the blobParts argument.\",\n        \"A Uint8Array object should be treated as a sequence for the blobParts argument.\",\n        \"Getters and value conversions should happen in order until an exception is thrown.\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (pop).\",\n        \"Changes to the blobParts array should be reflected in the returned Blob (unshift).\",\n        \"ToString should be called on elements of the blobParts array.\",\n        \"ArrayBuffer elements of the blobParts array should be supported.\",\n        \"Passing typed arrays as elements of the blobParts array should work.\",\n        \"Passing a Float64Array as element of the blobParts array should work.\",\n        \"Passing BigInt typed arrays as elements of the blobParts array should work.\",\n        \"Array with two blobs\",\n        \"Array with two buffers\",\n        \"Array with two bufferviews\",\n        \"Array with mixed types\",\n        \"options properties should be accessed in lexicographic order.\",\n        \"Arguments should be evaluated from left to right.\",\n        \"Passing null (index 0) for options should use the defaults.\",\n        \"Passing null (index 0) for options should use the defaults (with newlines).\",\n        \"Passing undefined (index 1) for options should use the defaults.\",\n        \"Passing undefined (index 1) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 2) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults.\",\n        \"Passing object \\\"[object Object]\\\" (index 3) for options should use the defaults (with newlines).\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults.\",\n        \"Passing object \\\"/regex/\\\" (index 4) for options should use the defaults (with newlines).\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults.\",\n        \"Passing function \\\"function() {}\\\" (index 5) for options should use the defaults (with newlines).\"\n      ]\n    }\n  },\n  \"Blob-in-worker.worker.js\": {\n    \"skip\": \"Depends on Web Workers API\"\n  },\n  \"Blob-slice.any.js\": {\n    \"skip\": \"Depends on File API\"\n  },\n  \"Blob-stream.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"Blob.stream()\",\n        \"Blob.stream() non-unicode input\",\n        \"Blob.stream() garbage collection of blob shouldn't break streamconsumption\",\n        \"Reading Blob.stream() with BYOB reader\"\n      ]\n    }\n  }\n}\n\nRan 5/8 tests, 3 skipped, 3 passed, 1 expected failures, 1 unexpected failures, 0 unexpected passes\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 1 unexpected failures. Consider updating test\\wpt\\status\\FileAPI\\blob.json for these files:\nBlob-stream.any.js\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":783.024,"fullname":"wpt/test-blob","closingTestPoint":false}},{"testName":"wpt/test-streams","timestamp":1703706162002,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #25216","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/25216/","buildNumber":25216,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"ee4a57a83ba7bf980239424bbe244805d119ee65","callStack":[{"upstreamBuild":60044,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67658,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56563,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51297"}],"tap":{"ok":false,"name":"wpt/test-streams","id":967,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[SKIPPED] idlharness-shadowrealm.window.js: ShadowRealm support is not enabled\n[SKIPPED] queuing-strategies-size-function-per-global.window.js: Browser-specific test\n[SKIPPED] readable-streams\\cross-realm-crash.window.js: Browser-specific test\n[SKIPPED] readable-streams\\owning-type-video-frame.any.js: Browser-specific test\n[SKIPPED] readable-streams\\read-task-handling.window.js: Browser-specific test\n[SKIPPED] transferable\\deserialize-error.window.js: Browser-specific test\n[SKIPPED] transferable\\transfer-with-messageport.window.js: Browser-specific test\n[SKIPPED] transform-streams\\invalid-realm.tentative.window.js: Browser-specific test\n[PASS] a signal argument 'null' should cause pipeTo() to reject\n[PASS] a signal argument 'AbortSignal' should cause pipeTo() to reject\n[PASS] a signal argument 'true' should cause pipeTo() to reject\n[PASS] a signal argument '-1' should cause pipeTo() to reject\n[PASS] a signal argument '[object AbortSignal]' should cause pipeTo() to reject\n[PASS] an aborted signal should cause the writable stream to reject with an AbortError\n[PASS] (reason: 'null') all the error objects should be the same object\n[PASS] (reason: 'undefined') all the error objects should be the same object\n[PASS] (reason: 'error1: error1') all the error objects should be the same object\n[PASS] preventCancel should prevent canceling the readable\n[PASS] preventAbort should prevent aborting the readable\n[PASS] preventCancel and preventAbort should prevent canceling the readable and aborting the readable\n[PASS] (reason: 'null') abort should prevent further reads\n[PASS] (reason: 'undefined') abort should prevent further reads\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel omitted; rejected cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = a (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose omitted; rejected close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = undefined (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = null (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = false (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = 0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = -0 (falsy); fulfilled close promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = NaN (falsy); fulfilled close promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false; rejected abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = undefined (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = null (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = false (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 0 (falsy); fulfilled abort promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = -0 (falsy); fulfilled abort promise\n[PASS] (reason: 'error1: error1') abort should prevent further reads\n[PASS] Closing must be propagated backward: starts closed; preventCancel = 1 (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = Symbol() (truthy)\n[PASS] Closing must be propagated backward: starts closed; preventCancel = [object Object] (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = NaN (falsy); fulfilled abort promise\n[PASS] Closing must be propagated forward: starts closed; preventClose =  (falsy); fulfilled close promise\n[PASS] Errors must be propagated backward: starts errored; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true\n[PASS] Closing must be propagated backward: starts closed; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] (reason: 'null') all pending writes should complete on abort\n[PASS] Errors must be propagated forward: starts errored; preventAbort =  (falsy); fulfilled abort promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = true (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = a (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = 1 (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = Symbol() (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = a (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = 1 (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = Symbol() (truthy)\n[PASS] Errors must be propagated forward: starts errored; preventAbort = [object Object] (truthy)\n[PASS] (reason: 'undefined') all pending writes should complete on abort\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Closing must be propagated forward: starts closed; preventClose = [object Object] (truthy)\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = undefined (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated forward: starts errored; preventAbort = true, preventCancel = true, preventClose = true\n[PASS] Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true, preventCancel = true\n[PASS] (reason: 'error1: error1') all pending writes should complete on abort\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = null (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = false (falsy); fulfilled cancel promise\n[PASS] a rejection from underlyingSource.cancel() should be returned by pipeTo()\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 0 (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = -0 (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = NaN (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel =  (falsy); fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = a (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 1 (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = Symbol() (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = [object Object] (truthy)\n[PASS] Errors must be propagated backward: becomes errored before piping due to write, preventCancel = true; preventAbort = true\n[PASS] a rejection from underlyingSink.abort() should be returned by pipeTo()\n[PASS] a rejection from underlyingSink.abort() should be preferred to one from underlyingSource.cancel()\n[PASS] abort signal takes priority over closed readable\n[PASS] abort signal takes priority over errored readable\n[PASS] abort signal takes priority over closed writable\n[PASS] abort signal takes priority over errored writable\n[PASS] abort should do nothing after the readable is closed\n[PASS] abort should do nothing after the readable is errored\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; fulfilled close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; rejected close promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; preventClose = true\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored before piping due to write; preventCancel = true, preventAbort = true, preventClose = true\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write; preventCancel = true\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; fulfilled cancel promise\n[PASS] Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose = true\n[PASS] abort should do nothing after the readable is errored, even with pending writes\n[PASS] abort should do nothing after the writable is errored\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = false; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored during piping due to write, but async; preventCancel = true\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = false; rejected abort promise\n[PASS] pipeTo on a teed readable byte stream should only be aborted when both branches are aborted\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; fulfilled close promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; preventAbort = true\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; rejected close promise\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[PASS] Piping from a non-empty ReadableStream into a WritableStream that does not desire chunks, but then does\n[PASS] Closing must be propagated forward: becomes closed after one chunk; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored after piping; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel omitted (but cancel is never called)\n[PASS] Errors must be propagated backward: becomes errored after piping due to last write; source is closed; preventCancel = true\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Piping from an empty ReadableStream into a WritableStream that does not desire chunks, but then the readable stream becomes non-empty and the writable stream starts desiring chunks\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Piping from a ReadableStream to a WritableStream that desires more chunks before finishing with previous ones\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; fulfilled cancel promise\n[PASS] Errors must be propagated forward: becomes errored while empty; dest never desires chunks; preventAbort = true\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; preventClose = true\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = false; rejected cancel promise\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; fulfilled abort promise\n[PASS] Errors must be propagated backward: becomes errored after piping; dest never desires chunks; preventCancel = true\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; fulfilled cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel omitted; rejected cancel promise\n[PASS] Errors must be propagated backward: becomes errored before piping via abort; preventCancel = true\n[PASS] Errors must be propagated backward: erroring via the controller errors once pending write completes\n[PASS] Closing must be propagated forward: shutdown must not occur until the final write completes; becomes closed after first write; preventClose = true\n[PASS] Closing must be propagated forward: erroring the writable while flushing pending writes should error pipeTo\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = false; rejected abort promise\n[PASS] idl_test validation\n[PASS] Errors must be propagated forward: becomes errored after one chunk; preventAbort = true\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\idlharness.any.js:43:14\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\idlharness.js:3522:28\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'idlharness.any.js'\n\n[PASS] Piping to a WritableStream that does not consume the writes fast enough exerts backpressure on the ReadableStream\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; fulfilled abort promise\n[EXPECTED_FAILURE][FAIL] enqueue() must not synchronously call write algorithm\nassert_false: write algorithm must not run synchronously expected false got true\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\piping\\general-addition.any.js:14:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'piping\\general-addition.any.js'\n\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = false; rejected abort promise\n[PASS] Piping must lock both the ReadableStream and WritableStream\n[PASS] Piping finishing must unlock both the ReadableStream and WritableStream\n[PASS] pipeTo must check the brand of its ReadableStream this value\n[PASS] Errors must be propagated forward: becomes errored after one chunk; dest never desires chunks; preventAbort = true\n[PASS] pipeTo must check the brand of its WritableStream argument\n[PASS] pipeTo must fail if the ReadableStream is locked, and not lock the WritableStream\n[PASS] pipeTo must fail if the WritableStream is locked, and not lock the ReadableStream\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes\n[PASS] Piping from a ReadableStream from which lots of chunks are synchronously readable\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; preventAbort = true\n[PASS] Piping from a ReadableStream for which a chunk becomes asynchronously readable after the pipeTo\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is true\n[PASS] an undefined rejection from pull should cause pipeTo() to reject when preventAbort is false\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is true\n[PASS] an undefined rejection from write should cause pipeTo() to reject when preventCancel is false\n[PASS] pipeTo() should reject if an option getter grabs a writer\n[PASS] pipeTo() promise should resolve if null is passed\n[PASS] Errors must be propagated forward: shutdown must not occur until the final write completes; becomes errored after first write; preventAbort = true\n[PASS] pipeThrough should not call pipeTo on this\n[PASS] pipeThrough should not call pipeTo on the ReadableStream prototype\n[PASS] pipeThrough should brand-check this and not allow 'null'\n[PASS] pipeThrough should brand-check readable and not allow 'null'\n[PASS] pipeThrough should brand-check this and not allow 'undefined'\n[PASS] pipeThrough should brand-check readable and not allow 'undefined'\n[PASS] pipeThrough should brand-check this and not allow '0'\n[PASS] pipeThrough should brand-check readable and not allow '0'\n[PASS] pipeThrough should brand-check this and not allow 'NaN'\n[PASS] pipeThrough should brand-check readable and not allow 'NaN'\n[PASS] pipeThrough should brand-check this and not allow 'true'\n[PASS] pipeThrough should brand-check readable and not allow 'true'\n[PASS] pipeThrough should brand-check this and not allow 'ReadableStream'\n[PASS] pipeThrough should brand-check readable and not allow 'ReadableStream'\n[PASS] pipeThrough should brand-check this and not allow '[object ReadableStream]'\n[PASS] pipeThrough should brand-check readable and not allow '[object ReadableStream]'\n[PASS] pipeThrough should brand-check writable and not allow 'null'\n[PASS] pipeThrough should brand-check writable and not allow 'undefined'\n[PASS] pipeThrough should brand-check writable and not allow '0'\n[PASS] pipeThrough should brand-check writable and not allow 'NaN'\n[PASS] pipeThrough should brand-check writable and not allow 'true'\n[PASS] pipeThrough should brand-check writable and not allow 'WritableStream'\n[PASS] pipeThrough should brand-check writable and not allow '[object WritableStream]'\n[PASS] pipeThrough should rethrow errors from accessing readable or writable\n[PASS] invalid values of signal should throw; specifically 'null'\n[PASS] invalid values of signal should throw; specifically '0'\n[PASS] invalid values of signal should throw; specifically 'NaN'\n[PASS] invalid values of signal should throw; specifically 'true'\n[PASS] invalid values of signal should throw; specifically 'AbortSignal'\n[PASS] invalid values of signal should throw; specifically '[object AbortSignal]'\n[PASS] pipeThrough should accept a real AbortSignal\n[PASS] pipeThrough should throw if this is locked\n[PASS] pipeThrough should throw if writable is locked\n[PASS] pipeThrough should not care if readable is locked\n[PASS] pipeThrough() should throw if an option getter grabs a writer\n[PASS] pipeThrough() should not throw if option is null\n[PASS] pipeThrough() should not throw if signal is undefined\n[PASS] pipeThrough() should throw if readable/writable getters throw\n[PASS] pipeThrough should stop after getting preventAbort throws\n[PASS] pipeThrough should stop after getting preventCancel throws\n[PASS] pipeThrough should stop after getting preventClose throws\n[PASS] pipeThrough should stop after getting signal throws\n[PASS] Piping from an errored readable stream to an erroring writable stream\n[PASS] pipeTo should stop after getting preventAbort throws\n[PASS] Piping from an errored readable stream to an errored writable stream\n[PASS] pipeTo should stop after getting preventCancel throws\n[PASS] pipeTo should stop after getting preventClose throws\n[PASS] Piping from an errored readable stream to an erroring writable stream; preventAbort = true\n[PASS] pipeTo should stop after getting signal throws\n[PASS] Piping through a duck-typed pass-through transform stream should work\n[PASS] Piping from an errored readable stream to an errored writable stream; preventAbort = true\n[PASS] Piping from an errored readable stream to a closing writable stream\n[PASS] Piping through a transform errored on the writable end does not cause an unhandled promise rejection\n[PASS] preventCancel should work\n[PASS] piping should not be observable\n[PASS] Piping from an errored readable stream to a closed writable stream\n[PASS] Piping from a closed readable stream to an erroring writable stream\n[PASS] Piping from a closed readable stream to an errored writable stream\n[PASS] tee should not be observable\n[PASS] preventClose should work\n[PASS] Piping from a closed readable stream to a closed writable stream\n[PASS] preventAbort should work\n[PASS] Piping through an identity transform stream should close the destination when the source closes\n[PASS] CountQueuingStrategy: Can construct a with a valid high water mark\n[PASS] CountQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] CountQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] CountQueuingStrategy: size is the same function across all instances\n[PASS] CountQueuingStrategy: size should have the right name\n[PASS] CountQueuingStrategy: subclassing should work correctly\n[PASS] CountQueuingStrategy: size should not have a prototype property\n[PASS] ByteLengthQueuingStrategy: Can construct a with a valid high water mark\n[PASS] ByteLengthQueuingStrategy: Constructor behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules\n[PASS] ByteLengthQueuingStrategy: size is the same function across all instances\n[PASS] ByteLengthQueuingStrategy: size should have the right name\n[PASS] ByteLengthQueuingStrategy: subclassing should work correctly\n[PASS] ByteLengthQueuingStrategy: size should not have a prototype property\n[PASS] CountQueuingStrategy: size should not be a constructor\n[PASS] ByteLengthQueuingStrategy: size should not be a constructor\n[PASS] CountQueuingStrategy: size should have the right length\n[PASS] ByteLengthQueuingStrategy: size should have the right length\n[PASS] CountQueuingStrategy: size behaves as expected with strange arguments\n[PASS] ByteLengthQueuingStrategy: size behaves as expected with strange arguments\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueuing an already-detached buffer throws\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:54:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:51:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:50:1\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStream with byte source: enqueuing a zero-length buffer throws\n[PASS] ReadableStream with byte source: enqueuing a zero-length view on a non-zero-length buffer throws\n[PASS] ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has a different length (autoAllocateChunkSize)\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:30:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:28:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into an already-detached buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:84:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:82:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:100:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:98:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:113:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:111:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:136:10)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at async_test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:676:34)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\bad-buffers-and-views.any.js:123:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\bad-buffers-and-views.any.js'\n\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a undefined ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a null ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a fake ReadableByteStreamController and a real view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a undefined view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a null view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a fake view\n[PASS] ReadableStreamBYOBRequest constructor should throw when passed a real ReadableByteStreamController and a real view\n[UNEXPECTED_FAILURE][FAIL] enqueue after detaching byobRequest.view.buffer should throw\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"Error: cannot proceed\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\enqueue-with-detached-buffer.any.js:20:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\enqueue-with-detached-buffer.any.js'\n\n[PASS] ReadableStream with byte source: enqueue() with a non-transferable buffer\n[PASS] ReadableStream with byte source: read() with a non-transferable buffer\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\nassert_unreached: read() should not reject Reached unreachable code\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\non-transferable-buffers.any.js'\n\n[PASS] getReader({mode: \"byob\"}) throws on non-bytes streams\n[PASS] ReadableStream with byte source can be constructed with no errors\n[PASS] getReader({mode}) must perform ToString()\n[PASS] ReadableStream with byte source: start() throws an exception\n[PASS] ReadableStream with byte source: desiredSize when closed\n[PASS] ReadableStream with byte source: desiredSize when errored\n[PASS] ReadableStream with byte source: pull() function is not callable\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw if close()-ed more than once\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1492:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1479:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throw on enqueue() after close()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1511:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1498:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: autoAllocateChunkSize cannot be 0\n[PASS] ReadableStreamBYOBReader can be constructed directly\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream argument\n[PASS] ReadableStreamBYOBReader constructor requires an unlocked ReadableStream\n[PASS] ReadableStreamBYOBReader constructor requires a ReadableStream with type \"bytes\"\n[PASS] ReadableStream constructor should not accept a strategy with a size defined if type is \"bytes\"\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() with cached byobRequest after enqueue() should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] byobRequest.respond() after enqueue() with double read should not crash\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\respond-after-enqueue.any.js'\n\n[PASS] ReadableStream with byte source: Construct and expect start and pull being called\n[PASS] ReadableStream with byte source: No automatic pull call if start doesn't finish\n[PASS] ReadableStream with byte source: Construct with highWaterMark of 0\n[PASS] ReadableStream with byte source: getReader(), then releaseLock()\n[PASS] ReadableStream with byte source: getReader() with mode set to byob, then releaseLock()\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that closing a stream does not release a BYOB reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a reader automatically\n[PASS] ReadableStream with byte source: Test that erroring a stream does not release a BYOB reader automatically\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamDefaultReader must reject pending read()\n[PASS] ReadableStream with byte source: releaseLock() on ReadableStreamBYOBReader must reject pending read()\n[PASS] ReadableStream with byte source: Automatic pull() after start()\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read()\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: autoAllocateChunkSize\nassert_equals: pull() must have been invoked once expected 1 but got 0\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:355:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Mix of auto allocate and BYOB\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: Automatic pull() after start() and read(view)\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:505:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:503:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Push source that doesn't understand pull signal\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:565:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:580:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:578:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), read(view) partially, then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:604:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:599:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), enqueue(), close(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:652:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), close(), getReader(), then read()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:672:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:670:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:752:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() with too big value\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1000:18)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:996:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1026:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1024:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1056:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1054:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: getReader(), read(view), then cancel()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: cancel() with partially filled pending pull() request\nassert_equals: 1 pull() should have been made in response to partial fill by enqueue() expected 1 but got 0\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1152:5\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1172:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1168:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1211:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1205:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1247:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1243:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1277:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1272:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1316:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1312:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1366:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1361:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1438:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1434:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1460:9)\n    at setupReadableByteStreamController (node:internal/webstreams/readablestream:3238:23)\n    at setupReadableByteStreamControllerFromSource (node:internal/webstreams/readablestream:3275:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:271:7)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1456:18)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then respond() and close() in pull()\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream teeing with byte source: rs.tee() returns an array of two ReadableStreams\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing with byte source\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read() twice, then enqueue() twice\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1726:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), close() and respond()\nCannot read properties of null (reading 'respond')\nTypeError: Cannot read properties of null (reading 'respond')\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1765:26)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view), big enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1801:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Multiple read(view) and multiple enqueue()\nArrayBufferPrototypeTransfer is not a function\nTypeError: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerEnqueue (node:internal/webstreams/readablestream:2767:29)\n    at ReadableByteStreamController.enqueue (node:internal/webstreams/readablestream:1163:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:1835:14)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:733:36\n    at new Promise (<anonymous>)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:732:20\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream with byte source: read(view) with passing undefined as view must fail\n[PASS] ReadableStream with byte source: read(view) with passing an empty object as view must fail\n[PASS] ReadableStream with byte source: Even read(view) with passing ArrayBufferView like object as view must fail\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream with byte source: read() on an errored stream\n[PASS] ReadableStream with byte source: read(), then error()\n[PASS] ReadableStream with byte source: read(view) on an errored stream\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: read(view), then error()\npromise_rejects_exactly: read() must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks should be cloned for each branch\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream with byte source: Throwing in pull function must error the stream\n[PASS] ReadableStream with byte source: Throwing in pull in response to read() must be ignored if the stream is errored in it\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"TypeError: foo\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\npromise_rejects_exactly: read(view) must fail function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"error1: error1\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: errors in the source should propagate to both branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respond() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] calling respondWithNewView() twice on the same byobRequest should throw\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should not impact branch2\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch2 should not impact branch1\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream teeing with byte source: canceling both branches should aggregate the cancel reasons into an array\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerRespond (node:internal/webstreams/readablestream:2717:17)\n    at ReadableStreamBYOBRequest.respond (node:internal/webstreams/readablestream:702:5)\n    at Object.pull (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\general.any.js:333:21)\n    at invokePromiseCallback (node:internal/webstreams/util:169:10)\n    at Object.<anonymous> (node:internal/webstreams/util:174:23)\n    at readableByteStreamControllerCallPullIfNeeded (node:internal/webstreams/readablestream:3097:24)\n    at node:internal/webstreams/readablestream:3246:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\general.any.js'\n\n[PASS] ReadableStream teeing with byte source: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing with byte source: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] ReadableStream teeing with byte source: erroring a teed stream should properly handle canceled branches\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: closing the original should close the branches\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] ReadableStream teeing with byte source: erroring the original should immediately error the branches\n[PASS] ReadableStream teeing with byte source: erroring the original should error pending reads from default reader\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:317:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Async iterator instances should have the correct list of properties\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\npromise_rejects_exactly: function \"function() { throw e }\" threw object \"TypeError: ArrayBufferPrototypeTransfer is not a function\" but we expected it to throw object \"[object Object]\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Promise.all (index 0)\n    at async Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:372:3)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] values() throws if there's already a lock\n[PASS] return() should unlock the stream synchronously when preventCancel = false\n[PASS] return() should unlock the stream synchronously when preventCancel = true\n[PASS] ReadableStream teeing with byte source: should not pull any chunks if no branches are reading\n[PASS] Async-iterating a push source\n[UNEXPECTED_FAILURE][FAIL] ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\npromise_test: Unhandled rejection with value: object \"TypeError: ArrayBufferPrototypeTransfer is not a function\"\nError\n    at get_stack (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4546:21)\n    at new AssertionError (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4539:22)\n    at assert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:4523:19)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:759:29)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2646:35\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Async-iterating a pull source\n[PASS] Async-iterating a push source with undefined values\n[PASS] Async-iterating a pull source with undefined values\n[PASS] Async-iterating a pull source manually\n[PASS] Async-iterating an errored stream throws\n[PASS] Async-iterating a closed stream never executes the loop body, but works fine\n[PASS] ReadableStream teeing with byte source: should not pull when original is already errored\n[PASS] Readable stream: throwing strategy.size getter\n[PASS] Readable stream: throwing strategy.highWaterMark getter\n[UNEXPECTED_FAILURE][UNCAUGHT] evaluation in WPTRunner.runJsTests()\nArrayBufferPrototypeTransfer is not a function\nTypeError [Error]: ArrayBufferPrototypeTransfer is not a function\n    at readableByteStreamControllerPullInto (node:internal/webstreams/readablestream:2625:25)\n    at readableStreamBYOBReaderRead (node:internal/webstreams/readablestream:2225:3)\n    at ReadableStreamBYOBReader.read (node:internal/webstreams/readablestream:974:5)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-byte-streams\\tee.any.js:440:26)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-byte-streams\\tee.any.js'\n\n[PASS] Async-iterating an empty but not closed/errored stream never executes the loop body and stalls the async function\n[PASS] Async-iterating a partially consumed stream\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = false\n[PASS] Cancellation behavior when throwing inside loop body; preventCancel = true\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = false\n[PASS] Readable stream: invalid strategy.highWaterMark\n[PASS] Cancellation behavior when breaking inside loop body; preventCancel = true\n[PASS] Readable stream: strategy.size errors the stream and then throws\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = false\n[PASS] Cancellation behavior when returning inside loop body; preventCancel = true\n[PASS] Readable stream: strategy.size errors the stream and then returns Infinity\n[PASS] Cancellation behavior when manually calling return(); preventCancel = false\n[PASS] Cancellation behavior when manually calling return(); preventCancel = true\n[PASS] Readable stream: throwing strategy.size method\n[PASS] ReadableStream cancellation: cancel(reason) should pass through the given reason to the underlying source\n[PASS] next() rejects if the stream errors\n[PASS] return() does not rejects if the stream has not errored yet\n[PASS] Readable stream: invalid strategy.size return value\n[PASS] Readable stream: invalid strategy.size return value when pulling\n[PASS] return() rejects if the stream has errored\n[PASS] next() that succeeds; next() that reports an error; next()\n[PASS] next() that succeeds; next() that reports an error(); next() [no awaiting]\n[PASS] next() that succeeds; next() that reports an error(); return()\n[PASS] next() that succeeds; next() that reports an error(); return() [no awaiting]\n[PASS] next() that succeeds; return()\n[PASS] next() that succeeds; return() [no awaiting]\n[PASS] return(); next()\n[PASS] return(); next() [no awaiting]\n[PASS] return(); return()\n[PASS] return(); return() [no awaiting]\n[PASS] Acquiring a reader after exhaustively async-iterating a stream\n[PASS] Acquiring a reader after return()ing from a stream that errors\n[PASS] Acquiring a reader after partially async-iterating a stream\n[PASS] Acquiring a reader and reading the remaining chunks after partially async-iterating a stream with preventCancel = true\n[PASS] Underlying source start: throwing getter\n[PASS] Underlying source start: throwing method\n[PASS] Underlying source: throwing pull getter (initial pull)\n[PASS] Underlying source cancel: throwing getter\n[PASS] close() while next() is pending\n[PASS] ReadableStream cancellation: integration test on an infinite stream derived from a random push source\n[PASS] Underlying source: throwing pull method (initial pull)\n[PASS] Underlying source pull: throwing getter (second pull does not result in a second get)\n[PASS] ReadableStream cancellation: cancel() on a locked stream should fail and not call the underlying source cancel\n[PASS] Underlying source pull: throwing method (second pull)\n[PASS] ReadableStream cancellation: should fulfill promise when cancel callback went fine\n[PASS] Underlying source cancel: throwing method\n[PASS] ReadableStream cancellation: returning a value from the underlying source's cancel should not affect the fulfillment value of the promise returned by the stream's cancel\n[PASS] ReadableStream cancellation: should reject promise when cancel callback raises an exception\n[PASS] Underlying source: calling enqueue on an empty canceled stream should throw\n[PASS] Underlying source: calling enqueue on a non-empty canceled stream should throw\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (1)\n[PASS] Underlying source: calling enqueue on a closed stream should throw\n[PASS] Underlying source: calling enqueue on an errored stream should throw\n[PASS] Underlying source: calling close twice on an empty stream should throw the second time\n[PASS] Underlying source: calling close twice on a non-empty stream should throw the second time\n[PASS] Underlying source: calling close on an empty canceled stream should throw\n[PASS] Underlying source: calling close on a non-empty canceled stream should throw\n[PASS] Underlying source: calling close after error should throw\n[PASS] Underlying source: calling error twice should not throw\n[PASS] Underlying source: calling error after close should not throw\n[PASS] Underlying source: calling error and returning a rejected promise from start should cause the stream to error with the first error\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should fulfill when that one does (2)\n[PASS] ReadableStream cancellation: if the underlying source's cancel method returns a promise, the promise returned by the stream's cancel should reject when that one does\n[PASS] Underlying source: calling error and returning a rejected promise from pull should cause the stream to error with the first error\n[PASS] read should not error if it dequeues and pull() throws\n[PASS] ReadableStream cancellation: cancelling before start finishes should prevent pull() from being called\n[PASS] underlyingSource argument should be converted after queuingStrategy argument\n[PASS] Can construct a readable stream with a valid CountQueuingStrategy\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 0)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 1)\n[PASS] Correctly governs a ReadableStreamController's desiredSize property (HWM = 4)\n[PASS] ReadableStreamDefaultReader constructor should get a ReadableStream object as argument\n[PASS] ReadableStreamDefaultReader closed should always return the same promise object\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via direct construction)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via direct construction)\n[PASS] Constructing a ReadableStreamDefaultReader directly should fail if the stream is already locked (via getReader)\n[PASS] Getting a ReadableStreamDefaultReader via getReader should fail if the stream is already locked (via getReader)\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is closed\n[PASS] Constructing a ReadableStreamDefaultReader directly should be OK if the stream is errored\n[PASS] getReader() should call ToString() on mode\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] Reading from a reader for an empty stream will wait until a chunk is available\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] cancel() on a reader does not release the reader\n[PASS] closed should be fulfilled after stream is closed (.closed access before acquiring)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] closed should be rejected after reader releases its lock (multiple stream locks)\n[PASS] closed is replaced when stream closes and reader releases its lock\n[PASS] closed is replaced when stream errors and reader releases its lock\n[PASS] Multiple readers can access the stream in sequence\n[PASS] Cannot use an already-released reader to unlock a stream again\n[PASS] cancel() on a released reader is a no-op and does not pass through\n[PASS] Getting a second reader after erroring the stream and releasing the reader should succeed\n[PASS] ReadableStreamDefaultReader closed promise should be rejected with undefined if that is the error\n[PASS] ReadableStreamDefaultReader: if start rejects with no parameter, it should error the stream with an undefined error\n[PASS] Erroring a ReadableStream after checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Erroring a ReadableStream before checking closed should reject ReadableStreamDefaultReader closed promise\n[PASS] Reading twice on a stream that gets closed\n[PASS] Reading twice on a closed stream\n[PASS] Reading twice on an errored stream\n[PASS] Reading twice on a stream that gets errored\n[PASS] controller.close() should clear the list of pending read requests\n[PASS] Second reader can read chunks after first reader was released with pending read requests\n[PASS] ReadableStream.from throws on invalid iterables; specifically null\n[PASS] ReadableStream.from throws on invalid iterables; specifically undefined\n[PASS] ReadableStream.from throws on invalid iterables; specifically 0\n[PASS] ReadableStream.from throws on invalid iterables; specifically NaN\n[PASS] ReadableStream.from throws on invalid iterables; specifically true\n[PASS] ReadableStream.from throws on invalid iterables; specifically {}\n[PASS] ReadableStream.from throws on invalid iterables; specifically Object.create(null)\n[PASS] ReadableStream.from throws on invalid iterables; specifically a function\n[PASS] ReadableStream.from throws on invalid iterables; specifically a symbol\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@iterator method\n[PASS] ReadableStream.from throws on invalid iterables; specifically an object with a non-callable @@asyncIterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@iterator method\n[PASS] ReadableStream.from re-throws errors from calling the @@asyncIterator method\n[PASS] ReadableStream.from ignores @@iterator if @@asyncIterator exists\n[PASS] ReadableStream.from accepts an array of values\n[PASS] ReadableStream.from accepts an array of promises\n[PASS] ReadableStream.from accepts an array iterator\n[PASS] ReadableStream.from accepts a string\n[PASS] ReadableStream.from accepts a Set\n[PASS] ReadableStream.from accepts a Set iterator\n[PASS] ReadableStream.from accepts a sync generator\n[PASS] ReadableStream.from accepts an async generator\n[PASS] ReadableStream.from accepts a sync iterable of values\n[PASS] ReadableStream.from accepts a sync iterable of promises\n[PASS] ReadableStream.from accepts an async iterable\n[PASS] ReadableStream.from accepts a ReadableStream\n[PASS] ReadableStream.from accepts a ReadableStream async iterator\n[PASS] ReadableStream.from accepts an empty iterable\n[PASS] ReadableStream.from: stream errors when next() rejects\n[PASS] ReadableStream.from: stream stalls when next() never settles\n[PASS] ReadableStream.from: calls next() after first read()\n[PASS] ReadableStream can be constructed with no errors\n[PASS] ReadableStream can't be constructed with garbage\n[EXPECTED_FAILURE][FAIL] Transferred MessageChannel works as expected\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[PASS] ReadableStream can't be constructed with an invalid type\n[EXPECTED_FAILURE][FAIL] Second branch of owning ReadableStream tee should end up into errors with transfer only values\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type-message-port.any.js'\n\n[PASS] ReadableStream constructor should throw for non-function start arguments\n[PASS] ReadableStream constructor will not tolerate initial garbage as cancel argument\n[PASS] ReadableStream constructor will not tolerate initial garbage as pull argument\n[PASS] ReadableStream start should be called with the proper thisArg\n[PASS] ReadableStream.from: cancelling the returned stream calls and awaits return()\n[PASS] ReadableStream start controller parameter should be extensible\n[PASS] ReadableStream.from: return() is not called when iterator completes normally\n[PASS] ReadableStream.from: cancel() rejects when return() fulfills with a non-object\n[PASS] default ReadableStream getReader() should only accept mode:undefined\n[PASS] ReadableStream: enqueue should throw when the stream is readable but draining\n[PASS] ReadableStream: enqueue should throw when the stream is closed\n[PASS] ReadableStream: desiredSize when closed\n[PASS] ReadableStream: desiredSize when errored\n[PASS] ReadableStream.from: reader.read() inside next()\n[PASS] Subclassing ReadableStream should work\n[PASS] ReadableStream strategies: the default strategy should give desiredSize of 1 to start, decreasing by 1 per enqueue\n[PASS] ReadableStream.from: reader.cancel() inside next()\n[PASS] ReadableStream.from: reader.cancel() inside return()\n[PASS] ReadableStream.from(array), push() to array while reading\n[PASS] ReadableStream should be able to call start method within prototype chain of its source\n[PASS] ReadableStream start should be able to return a promise\n[PASS] ReadableStream start should be able to return a promise and reject it\n[PASS] ReadableStream should be able to enqueue different objects.\n[PASS] ReadableStream: if pull rejects, it should error the stream\n[PASS] ReadableStreamController methods should continue working properly when scripts lose their reference to the readable stream\n[PASS] ReadableStream: should only call pull once upon starting the stream\n[PASS] ReadableStream: should call pull when trying to read from a started, empty stream\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from before start fulfills\n[EXPECTED_FAILURE][FAIL] ReadableStream can be constructed with owning type\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:7:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:6:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should call start with a ReadableStreamDefaultController\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:22:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:10:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream should be able to call enqueue with an empty transfer list\nThe property 'source.type' is invalid. Received 'owning'\nTypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\n    at new ReadableStream (node:internal/webstreams/readablestream:277:15)\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:38:3)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:26:1\n    at Script.runInThisContext (node:vm:121:12)\n    at runInThisContext (node:vm:303:38)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt\\worker.js:69:3)\n    at Module._compile (node:internal/modules/cjs/loader:1378:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream should check transfer parameter\nassert_throws_js: transfer list is not empty function \"() => { controller.enqueue(buffer, { transfer : [ buffer ] }); }\" did not throw\n    at Object.start (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\readable-streams\\owning-type.any.js:50:7)\n    at setupReadableStreamDefaultController (node:internal/webstreams/readablestream:2440:23)\n    at setupReadableStreamDefaultControllerFromSource (node:internal/webstreams/readablestream:2472:3)\n    at new ReadableStream (node:internal/webstreams/readablestream:278:7)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[EXPECTED_FAILURE][FAIL] ReadableStream of type owning should transfer enqueued chunks\npromise_test: Unhandled rejection with value: object \"TypeError [ERR_INVALID_ARG_VALUE]: The property 'source.type' is invalid. Received 'owning'\"\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'readable-streams\\owning-type.any.js'\n\n[PASS] ReadableStream: should only call pull once on a non-empty stream read from after start fulfills\n[PASS] ReadableStream closed promise should fulfill even if the stream and reader JS references are lost\n[PASS] ReadableStream tee() should not touch Object.prototype properties\n[PASS] ReadableStream tee() should not call the global ReadableStream\n[PASS] tee() should not call Promise.prototype.then()\n[PASS] pipeTo() should not call Promise.prototype.then()\n[PASS] enqueue() inside size() should work\n[PASS] close() inside size() should not crash\n[PASS] close request inside size() should work\n[PASS] ReadableStream: should call pull in reaction to read()ing the last chunk, if not draining\n[PASS] error() inside size() should work\n[PASS] desiredSize inside size() should work\n[PASS] cancel() inside size() should work\n[PASS] ReadableStream async iterator should use the original values of getReader() and ReadableStreamDefaultReader methods\n[PASS] pipeTo() inside size() should behave as expected\n[PASS] ReadableStream: should not call pull() in reaction to read()ing the last chunk, if draining\n[PASS] read() inside of size() should behave as expected\n[PASS] getReader() inside size() should work\n[PASS] tee() inside size() should work\n[PASS] ReadableStream: should not call pull until the previous pull call's promise fulfills\n[PASS] ReadableStream closed promise should reject even if stream and reader JS references are lost\n[PASS] ReadableStream: should pull after start, and after every read\n[PASS] ReadableStream: should not call pull after start if the stream is now closed\n[PASS] ReadableStream: should call pull after enqueueing from inside pull (with no read requests), if strategy allows\n[PASS] ReadableStream teeing: rs.tee() returns an array of two ReadableStreams\n[PASS] ReadableStream pull should be able to close a stream.\n[PASS] ReadableStream pull should be able to error a stream.\n[PASS] Running templatedRSTeeCancel with ReadableStream teeing\n[PASS] ReadableStream pull should be able to error a stream and throw.\n[PASS] ReadableStreamTee should not use a modified ReadableStream constructor from the global object\n[PASS] ReadableStream: should call underlying source methods as methods\n[PASS] ReadableStream strategies: the default strategy should continue giving desiredSize of 1 if the chunks are read immediately\n[PASS] Running templatedRSEmpty with ReadableStream (empty)\n[PASS] ReadableStream teeing: should be able to read one branch to the end without affecting the other\n[PASS] ReadableStream (empty): instances have the correct methods and properties\n[PASS] ReadableStream teeing: values should be equal across each branch\n[PASS] ReadableStream (empty): calling getReader with invalid arguments should throw appropriate errors\n[PASS] Running templatedRSEmptyReader with ReadableStream (empty) reader\n[PASS] ReadableStream teeing: errors in the source should propagate to both branches\n[PASS] ReadableStream (empty) reader: instances have the correct methods and properties\n[PASS] ReadableStream (empty) reader: locked should be true\n[PASS] ReadableStream (empty) reader: read() should return distinct promises each time\n[PASS] ReadableStream teeing: canceling branch1 should not impact branch2\n[PASS] ReadableStream (empty) reader: getReader() again on the stream should fail\n[PASS] ReadableStream teeing: canceling branch2 should not impact branch1\n[PASS] ReadableStream teeing: canceling both branches should aggregate the cancel reasons into an array\n[PASS] ReadableStream (empty) reader: releasing the lock should cause locked to become false\n[PASS] ReadableStream teeing: canceling both branches in reverse order should aggregate the cancel reasons into an array\n[PASS] ReadableStream teeing: failing to cancel the original stream should cause cancel() to reject on branches\n[PASS] Running templatedRSClosed with ReadableStream (closed via call in start)\n[PASS] ReadableStream (closed via call in start): locked should be false\n[PASS] ReadableStream teeing: erroring a teed stream should properly handle canceled branches\n[PASS] ReadableStream (closed via call in start): getReader() should be OK\n[PASS] ReadableStream (closed via call in start): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream (closed via call in start): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed before getting reader)\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed after getting reader)\n[PASS] Running templatedRSClosed with ReadableStream (closed via cancel)\n[PASS] ReadableStream teeing: erroring a teed stream should error both branches\n[PASS] ReadableStream (closed via cancel): locked should be false\n[PASS] ReadableStream (closed via cancel): getReader() should be OK\n[PASS] ReadableStream teeing: closing the original should immediately close the branches\n[PASS] ReadableStream (closed via cancel): should be able to acquire multiple readers if they are released in succession\n[PASS] ReadableStream teeing: erroring the original should immediately error the branches\n[PASS] ReadableStream (closed via cancel): should not be able to acquire a second reader if we don't release the first one\n[PASS] Running templatedRSClosedReader with ReadableStream reader (closed via cancel after getting reader)\n[PASS] Running templatedRSErrored with ReadableStream (errored via call in start)\n[PASS] ReadableStream teeing: canceling branch1 should finish when branch2 reads until end of stream\n[PASS] ReadableStream (errored via call in start): locked should be false\n[PASS] Running templatedRSErroredSyncOnly with ReadableStream (errored via call in start)\n[PASS] ReadableStream teeing: canceling branch1 should finish when original stream errors\n[PASS] ReadableStream (errored via call in start): should not be able to obtain additional readers if we don't release the first lock\n[PASS] Running templatedRSErrored with ReadableStream (errored via returning a rejected promise in start)\n[PASS] ReadableStream (errored via returning a rejected promise in start): locked should be false\n[PASS] Running templatedRSErroredReader with ReadableStream (errored via returning a rejected promise in start) reader\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored before getting reader)\n[PASS] Running templatedRSErroredReader with ReadableStream reader (errored after getting reader)\n[PASS] Running templatedRSTwoChunksOpenReader with ReadableStream (two chunks enqueued, still open) reader\n[PASS] ReadableStream (two chunks enqueued, still open) reader: read() should return distinct promises each time\n[PASS] ReadableStream integration test: adapting a random push source\n[PASS] Running templatedRSTwoChunksClosedReader with ReadableStream (two chunks enqueued, then closed) reader\n[PASS] ReadableStream integration test: adapting a sync pull source\n[PASS] ReadableStream teeing: canceling both branches in sequence with delay\n[PASS] ReadableStream teeing: failing to cancel when canceling both branches in sequence with delay\n[PASS] Garbage-collecting a ReadableStreamDefaultReader should not unlock its stream\n[PASS] ReadableStreamTee should not pull more chunks than can fit in the branch queue\n[PASS] ReadableStreamTee should only pull enough to fill the emptiest queue\n[PASS] ReadableStream integration test: adapting an async pull source\n[PASS] ReadableStreamTee should not pull when original is already errored\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object ReadableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] Transferring [object ReadableStream],[object TransformStream] should fail\n[EXPECTED_FAILURE][FAIL] Transferring [object TransformStream],[object WritableStream] should fail\nassert_throws_dom: structuredClone should throw function \"() => structuredClone(combination, { transfer: combination })\" did not throw\n    at Test.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:12:5)\n    at Test.step (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:2599:25)\n    at test (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\resources\\testharness.js:628:30)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\wpt\\streams\\transferable\\transform-stream-members.any.js:11:3\nCommand: C:\\workspace\\node-test-binary-windows-js-suites\\node\\Release\\node.exe  C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\wpt\\test-streams.js 'transferable\\transform-stream-members.any.js'\n\n[PASS] Transferring [object WritableStream],[object TransformStream] should fail\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 1 is reading\n[PASS] ReadableStreamTee stops pulling when original stream errors while branch 2 is reading\n[PASS] cancelling the readable side should call transformer.cancel()\n[PASS] backpressure allows no transforms with a default identity transform and no reader\n[PASS] cancelling the readable side should reject if transformer.cancel() throws\n[PASS] aborting the writable side should call transformer.abort()\n[PASS] aborting the writable side should reject if transformer.cancel() throws\n[PASS] closing the writable side should reject if a parallel transformer.cancel() throws\n[PASS] ReadableStreamTee stops pulling when original stream errors while both branches are reading\n[PASS] backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader\n[PASS] readable.cancel() and a parallel writable.close() should reject if a transformer.cancel() calls controller.error()\n[PASS] transform() should keep being called as long as there is no backpressure\n[PASS] writable.abort() and readable.cancel() should reject if a transformer.cancel() calls controller.error()\n[PASS] ReadableStream teeing: enqueue() and close() while both branches are pulling\n[PASS] writes should resolve as soon as transform completes\n[PASS] calling pull() before the first write() with backpressure should work\n[PASS] transform() should be able to read the chunk it just enqueued\n[PASS] blocking transform() should cause backpressure\n[PASS] writer.closed should resolve after readable is canceled during start\n[PASS] writer.closed should resolve after readable is canceled with backpressure\n[PASS] writer.closed should resolve after readable is canceled with no backpressure\n[PASS] cancelling the readable should cause a pending write to resolve\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe\n[PASS] cancelling the readable side of a TransformStream should abort an empty pipe after startup\n[PASS] cancelling the readable side of a TransformStream should abort a full pipe\n[PASS] errored TransformStream should not enqueue new chunks\n[PASS] TransformStream constructor should throw when start does\n[PASS] when strategy.size throws inside start(), the constructor should throw the same error\n[PASS] when strategy.size calls controller.error() then throws, the constructor should throw the first error\n[PASS] TransformStream flush is called immediately when the writable is closed, if no writes are queued\n[PASS] TransformStream errors thrown in transform put the writable and readable in an errored state\n[PASS] TransformStream flush is called after all queued writes finish, once the writable is closed\n[PASS] TransformStream errors thrown in flush put the writable and readable in an errored state\n[PASS] TransformStream flush gets a chance to enqueue more into the readable\n[PASS] TransformStream flush gets a chance to enqueue more into the readable, and can then async close\n[PASS] TransformStream transformer.start() rejected promise should error the stream\n[PASS] error() during flush should cause writer.close() to reject\n[PASS] closing the writable side should call transformer.flush() and a parallel readable.cancel() should not reject\n[PASS] when controller.error is followed by a rejection, the error reason should come from controller.error\n[PASS] cancelling the readable side should error the writable\n[PASS] it should be possible to error the readable between close requested and complete\n[PASS] an exception from transform() should error the stream if terminate has been requested but not completed\n[PASS] TransformStream can be constructed with a transform function\n[PASS] abort should set the close reason for the writable when it happens before cancel during start, and cancel should reject\n[PASS] TransformStream can be constructed with no transform function\n[PASS] TransformStream writable starts in the writable state\n[PASS] abort should set the close reason for the writable when it happens before cancel during underlying sink write, but cancel should still succeed\n[PASS] enqueue() should throw after controller.terminate()\n[PASS] controller.terminate() should do nothing the second time it is called\n[PASS] controller.error() should do nothing the second time it is called\n[PASS] controller.error() should close writable immediately after readable.cancel()\n[PASS] controller.error() should do nothing after readable.cancel() resolves\n[PASS] specifying a defined readableType should throw\n[PASS] specifying a defined writableType should throw\n[PASS] controller.error() should do nothing after writable.abort() has completed\n[PASS] Subclassing TransformStream should work\n[PASS] controller.error() should do nothing after a transformer method has thrown an exception\n[PASS] erroring during write with backpressure should result in the write failing\n[PASS] a write() that was waiting for backpressure should reject if the writable is aborted\n[PASS] the readable should be errored with the reason passed to the writable abort() method\n[PASS] Identity TransformStream: can read from readable what is put into writable\n[PASS] Uppercaser sync TransformStream: can read from readable transformed version of what is put into writable\n[PASS] Uppercaser-doubler sync TransformStream: can read both chunks put into the readable\n[PASS] Uppercaser async TransformStream: can read from readable transformed version of what is put into writable\n[PASS] Uppercaser-doubler async TransformStream: can read both chunks put into the readable\n[PASS] TransformStream: by default, closing the writable closes the readable (when there are no queued writes)\n[PASS] TransformStream: by default, closing the writable waits for transforms to finish before closing both\n[PASS] TransformStream: by default, closing the writable closes the readable after sync enqueues and async done\n[PASS] TransformStream: by default, closing the writable closes the readable after async enqueues and async done\n[PASS] Transform stream should call transformer methods as methods\n[PASS] methods should not not have .apply() or .call() called\n[PASS] testing \"\" (length 1)\n[PASS] testing \"\" (length 0)\n[PASS] testing \"{{in1}}\" (length 1)\n[PASS] testing \"z{{in1}}\" (length 1)\n[PASS] testing \"{{in1}}q\" (length 1)\n[PASS] testing \"{{in1}}{{in1}\" (length 1)\n[PASS] testing \"{{in1}}{{in1},}\" (length 2)\n[PASS] testing \"{{in1,}}\" (length 2)\n[PASS] testing \"{{,in1}}\" (length 2)\n[PASS] testing \"{,{in1}}\" (length 2)\n[PASS] testing \"{{,in1}\" (length 2)\n[PASS] testing \"{\" (length 1)\n[PASS] testing \"{,\" (length 2)\n[PASS] testing \"{,{,i,n,1,},}\" (length 7)\n[PASS] testing \"{{in1}}{{in2}}{{in1}}\" (length 1)\n[PASS] testing \"{{wrong}}\" (length 1)\n[PASS] testing \"{{wron,g}}\" (length 2)\n[PASS] testing \"{{quine}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}\" (length 1)\n[PASS] testing \"{{bogusPartial}}}\" (length 1)\n[PASS] TransformStream start, transform, and flush should be strictly ordered\n[PASS] TransformStream constructor should not call setters for highWaterMark or size\n[PASS] TransformStream should use the original value of ReadableStream and WritableStream\n[PASS] it should be possible to call transform() synchronously\n[PASS] closing the writable should close the readable when there are no queued chunks, even with backpressure\n[PASS] enqueue() should throw after readable.cancel()\n[PASS] terminate() should abort writable immediately after readable.cancel()\n[PASS] terminate() should do nothing after readable.cancel() resolves\n[PASS] start() should not be called twice\n[PASS] transformer method start should be called with the right number of arguments\n[PASS] transformer method start should be called even when it's located on the prototype chain\n[PASS] transformer method transform should be called with the right number of arguments\n[PASS] transformer method transform should be called even when it's located on the prototype chain\n[PASS] transformer method flush should be called with the right number of arguments\n[PASS] transformer method flush should be called even when it's located on the prototype chain\n[PASS] enqueue() inside size() should work\n[PASS] terminate() inside size() should work\n[PASS] error() inside size() should work\n[PASS] desiredSize inside size() should work\n[PASS] readable cancel() inside size() should work\n[PASS] pipeTo() inside size() should work\n[PASS] read() inside of size() should work\n[PASS] writer.write() inside size() should work\n[PASS] synchronous writer.write() inside size() should work\n[PASS] writer.close() inside size() should work\n[PASS] writer.abort() inside size() should work\n[PASS] writableStrategy highWaterMark should work\n[PASS] default writable strategy should be equivalent to { highWaterMark: 1 }\n[PASS] a RangeError should be thrown for an invalid highWaterMark\n[PASS] writableStrategy highWaterMark should be converted to a number\n[PASS] readableStrategy highWaterMark should be converted to a number\n[PASS] readableStrategy highWaterMark should work\n[PASS] writable should have the correct size() function\n[PASS] controller.enqueue() should throw after controller.terminate()\n[PASS] default readable strategy should be equivalent to { highWaterMark: 0 }\n[PASS] Writable stream: throwing strategy.size getter\n[PASS] reject any non-function value for strategy.size\n[PASS] Writable stream: throwing strategy.highWaterMark getter\n[PASS] a bad readableStrategy size function should cause writer.write() to reject on an identity transform\n[PASS] WritableStreamDefaultController.signal\n[PASS] Writable stream: invalid strategy.highWaterMark\n[PASS] a bad readableStrategy size function should error the stream on enqueue even when transformer.transform() catches the exception\n[PASS] Writable stream: invalid size beats invalid highWaterMark\n[PASS] controller.terminate() should error pipeTo()\n[PASS] controller.terminate() should prevent remaining chunks from being processed\n[PASS] controller.error() after controller.terminate() with queued chunk should error the readable\n[PASS] controller.error() after controller.terminate() without queued chunk should do nothing\n[PASS] Aborting a WritableStream before it starts should cause the writer's unsettled ready promise to reject\n[PASS] Aborting a WritableStream should cause the writer's fulfilled ready promise to reset to a rejected one\n[PASS] Writable stream: throwing strategy.size method\n[PASS] Writable stream: invalid strategy.size return value\n[PASS] controller.terminate() inside flush() should not prevent writer.close() from succeeding\n[PASS] abort() on a released writer rejects\n[PASS] Aborting a WritableStream immediately prevents future writes\n[PASS] Aborting a WritableStream prevents further writes after any that are in progress\n[PASS] Fulfillment value of writer.abort() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream if sink's abort throws, the promise returned by writer.abort() rejects\n[PASS] WritableStream if sink's abort throws, the promise returned by multiple writer.abort()s is the same and rejects\n[PASS] WritableStream if sink's abort throws, the promise returned by ws.abort() rejects\n[PASS] start: errors in start cause WritableStream constructor to throw\n[PASS] close: throwing getter should cause constructor to throw\n[PASS] write: throwing getter should cause write() and closed to reject\n[PASS] start: non-function start method\n[PASS] write: non-function write method\n[PASS] close: non-function close method\n[PASS] abort: non-function abort method with .apply\n[PASS] abort: throwing getter should cause abort() and closed to reject\n[PASS] WritableStream if sink's abort throws, for an abort performed during a write, the promise returned by ws.abort() rejects\n[PASS] Aborting a WritableStream passes through the given reason\n[PASS] Aborting a WritableStream puts it in an errored state with the error passed to abort()\n[PASS] Aborting a WritableStream causes any outstanding write() promises to be rejected with the reason supplied\n[PASS] Closing but then immediately aborting a WritableStream causes the stream to error\n[PASS] Closing a WritableStream and aborting it while it closes causes the stream to ignore the abort attempt\n[PASS] close: throwing method should cause writer close() and ready to reject\n[PASS] Aborting a WritableStream after it is closed is a no-op\n[PASS] WritableStream should NOT call underlying sink's close if no abort is supplied (historical)\n[PASS] close: returning a rejected promise should cause writer close() and ready to reject\n[PASS] returning a thenable from abort() should work\n[PASS] write: throwing method should cause write() and closed to reject\n[PASS] .closed should not resolve before fulfilled write()\n[PASS] .closed should not resolve before rejected write(); write() error should not overwrite abort() error\n[PASS] write: returning a promise that becomes rejected after the writer write() should cause writer write() and ready to reject\n[PASS] writes should be satisfied in order when aborting\n[PASS] write: returning a rejected promise (second write) should cause writer write() and ready to reject\n[PASS] writes should be satisfied in order after rejected write when aborting\n[PASS] abort: throwing method should cause abort() and closed to reject\n[PASS] close() should reject with abort reason why abort() is first error\n[PASS] underlying abort() should not be called until underlying write() completes\n[PASS] underlying abort() should not be called if underlying close() has started\n[PASS] if underlying close() has started and then rejects, the abort() and close() promises should reject with the underlying close rejection reason\n[PASS] an abort() that happens during a write() should trigger the underlying abort() even with a close() queued\n[PASS] if a writer is created for a stream with a pending abort, its ready should be rejected with the abort error\n[PASS] writer close() promise should resolve before abort() promise\n[PASS] writer.ready should reject on controller error without waiting for underlying write\n[PASS] ReadableStream (empty) reader: read() should never settle\n[PASS] writer.abort() while there is an in-flight write, and then finish the write with rejection\n[PASS] writer.abort(), controller.error() while there is an in-flight write, and then finish the write\n[PASS] fulfillment value of writer.close() call must be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream should be constructible with no arguments\n[PASS] underlyingSink argument should be converted after queuingStrategy argument\n[PASS] WritableStream instances should have standard methods and properties\n[PASS] WritableStreamDefaultController constructor should throw\n[PASS] WritableStreamDefaultController constructor should throw when passed an initialised WritableStream\n[PASS] writer.abort(), controller.error() while there is an in-flight close, and then finish the close\n[PASS] WritableStreamDefaultWriter should throw unless passed a WritableStream\n[PASS] WritableStreamDefaultWriter constructor should throw when stream argument is locked\n[PASS] Can construct a writable stream with a valid CountQueuingStrategy\n[PASS] controller argument should be passed to start method\n[PASS] controller argument should be passed to write method\n[PASS] controller argument should not be passed to close method\n[PASS] highWaterMark should be reflected to desiredSize\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 0)\n[PASS] WritableStream should be writable and ready should fulfill immediately if the strategy does not apply backpressure\n[PASS] Correctly governs the value of a WritableStream's state property (HWM = 4)\n[PASS] when sink calls error asynchronously while sink close is in-flight, the stream should not become errored\n[PASS] when sink calls error synchronously while closing, the stream should not become errored\n[PASS] when the sink throws during close, and the close is requested while a write is still in-flight, the stream should become errored during the close\n[PASS] releaseLock on a stream with a pending write in which the stream has been errored\n[PASS] releaseLock on a stream with a pending close in which controller.error() was called\n[PASS] when close is called on a WritableStream in writable state, ready should return a fulfilled promise\n[PASS] controller.error(), writer.abort() while there is an in-flight write, and then finish the write\n[PASS] when close is called on a WritableStream in waiting state, ready promise should be fulfilled\n[PASS] when close is called on a WritableStream in waiting state, ready should be fulfilled immediately even if close takes a long time\n[PASS] controller.error() on erroring stream should not throw\n[PASS] returning a thenable from close() should work\n[PASS] releaseLock() should not change the result of sync close()\n[PASS] controller.error() should error the stream\n[PASS] surplus calls to controller.error() should be a no-op\n[PASS] controller.error() on errored stream should not throw\n[PASS] controller.error() on closed stream should not throw\n[PASS] releaseLock() should not change the result of async close()\n[PASS] close() should set state to CLOSED even if writer has detached\n[PASS] controller.error(), writer.abort() while there is an in-flight close, and then finish the close\n[PASS] releaseLock() while aborting should reject the original closed promise\n[PASS] releaseLock() during delayed async abort() should reject the writer.closed promise\n[PASS] the promise returned by async abort during close should resolve\n[PASS] promises must fulfill/reject in the expected order on closure\n[PASS] promises must fulfill/reject in the expected order on aborted closure\n[PASS] sink abort() should not be called until sink start() is done\n[PASS] if start attempts to error the controller after abort() has been called, then it should lose\n[PASS] stream abort() promise should still resolve if sink start() rejects\n[PASS] writer abort() during sink start() should replace the writer.ready promise synchronously\n[PASS] promises returned from other writer methods should be rejected when writer abort() happens during sink start()\n[PASS] abort() should succeed despite rejection from write\n[PASS] promises must fulfill/reject in the expected order on aborted and errored closure\n[PASS] abort() should be rejected with the rejection returned from close()\n[PASS] a rejecting sink.write() should not prevent sink.abort() from being called\n[PASS] when start errors after stream abort(), underlying sink abort() should be called anyway\n[PASS] when calling abort() twice on the same stream, both should give the same promise that fulfills with undefined\n[PASS] when calling abort() twice on the same stream, but sequentially so so there's no pending abort the second time, both should fulfill with undefined\n[PASS] calling abort() on an errored stream should fulfill with undefined\n[PASS] sink abort() should not be called if stream was erroring due to controller.error() before abort() was called\n[PASS] sink abort() should not be called if stream was erroring due to bad strategy before abort() was called\n[PASS] abort with no arguments should set the stored error to undefined\n[PASS] abort with an undefined argument should set the stored error to undefined\n[PASS] abort with a string argument should set the stored error to that argument\n[PASS] abort on a locked stream should reject\n[PASS] close() should not reject until no sink methods are in flight\n[PASS] ready promise should be initialised as fulfilled for a writer on a closed stream\n[PASS] close() on a writable stream should work\n[PASS] the abort signal is signalled synchronously - write\n[PASS] close() on a locked stream should reject\n[PASS] close() on an erroring stream should reject\n[PASS] the abort signal is signalled synchronously - close\n[PASS] the abort signal is not signalled on error\n[PASS] close() on an errored stream should reject\n[PASS] close() on an closed stream should reject\n[PASS] the abort signal is not signalled on write failure\n[PASS] close() on a stream with a pending close should reject\n[PASS] the abort signal is not signalled on close failure\n[PASS] recursive abort() call\n[PASS] desiredSize on a released writer\n[PASS] desiredSize initial value\n[PASS] desiredSize on a writer for an errored stream\n[PASS] ws.getWriter() on a closing WritableStream\n[PASS] ws.getWriter() on an aborted WritableStream\n[PASS] Subclassing WritableStream should work\n[PASS] the locked getter should return true if the stream has a writer\n[PASS] desiredSize on a writer for a closed stream\n[PASS] ws.getWriter() on a closed WritableStream\n[PASS] ws.getWriter() on an errored WritableStream\n[PASS] closed and ready on a released writer\n[PASS] WritableStream should call underlying sink methods as methods\n[PASS] methods should not not have .apply() or .call() called\n[PASS] WritableStream's strategy.size should not be called as a method\n[PASS] redundant releaseLock() is no-op\n[PASS] ready promise should fire before closed on releaseLock\n[PASS] Closing a writable stream with in-flight writes below the high water mark delays the close call properly\n[PASS] sink method start should be called with the right number of arguments\n[PASS] sink method start should be called even when it's located on the prototype chain\n[PASS] sink method write should be called with the right number of arguments\n[PASS] sink method write should be called even when it's located on the prototype chain\n[PASS] sink method close should be called with the right number of arguments\n[PASS] sink method close should be called even when it's located on the prototype chain\n[PASS] Floating point arithmetic must manifest near NUMBER.MAX_SAFE_INTEGER (total ends up positive)\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, but clamped)\n[PASS] sink method abort should be called with the right number of arguments\n[PASS] Floating point arithmetic must manifest near 0 (total ends up positive, and not clamped)\n[PASS] sink method abort should be called even when it's located on the prototype chain\n[PASS] Floating point arithmetic must manifest near 0 (total ends up zero)\n[PASS] writes should be written in the standard order\n[PASS] writer.write() promises should resolve in the standard order\n[PASS] controller.error() should work when called from within strategy.size()\n[PASS] close() should work when called from within strategy.size()\n[PASS] abort() should work when called from within strategy.size()\n[PASS] releaseLock() should abort the write() when called within strategy.size()\n[PASS] original reader should error when new reader is created within strategy.size()\n[PASS] underlying sink's write or close should not be called if start throws\n[PASS] underlying sink's write should not be called until start finishes\n[PASS] underlying sink's close should not be called until start finishes\n[PASS] underlying sink's write or close should not be invoked if the promise returned by start is rejected\n[PASS] returning a thenable from start() should work\n[PASS] controller.error() during start should cause writes to fail\n[PASS] controller.error() during async start should cause existing writes to fail\n[PASS] when start() rejects, writer promises should reject in standard order\n[PASS] WritableStream should complete asynchronous writes before close resolves\n[PASS] WritableStream should complete synchronous writes before close resolves\n[PASS] fulfillment value of ws.write() call should be undefined even if the underlying sink returns a non-undefined value\n[PASS] WritableStream should transition to waiting until write is acknowledged\n[PASS] when write returns a rejected promise, queued writes and close should be cleared\n[PASS] when sink's write throws an error, the stream should become errored and the promise should reject\n[PASS] writer.write(), ready and closed reject with the error passed to controller.error() made before sink.write rejection\n[PASS] a large queue of writes should be processed completely\n[PASS] WritableStreamDefaultWriter should work when manually constructed\n[PASS] returning a thenable from write() should work\n[PASS] failing DefaultWriter constructor should not release an existing writer\n[PASS] write() on a stream with HWM 0 should not cause the ready Promise to resolve\n[PASS] writing to a released writer should reject the returned promise\n[PASS] ReadableStream (empty) reader: two read()s should both never settle\n[PASS] ReadableStream (empty) reader: releasing the lock should reject all pending read requests\n[PASS] ReadableStream (empty) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: releasing the lock should cause closed calls to reject with a TypeError\n[PASS] ReadableStream (empty) reader: canceling via the reader should cause the reader to act closed\n[PASS] ReadableStream (empty) reader: canceling via the stream should fail\n[PASS] ReadableStream (closed via call in start): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed before getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed before getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed before getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed before getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (closed via cancel): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() multiple times should fulfill with { value: undefined, done: true }\n[PASS] ReadableStream reader (closed via cancel after getting reader): read() should work when used within another read() fulfill callback\n[PASS] ReadableStream reader (closed via cancel after getting reader): closed should fulfill with undefined\n[PASS] ReadableStream reader (closed via cancel after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (closed via cancel after getting reader): cancel() should return a distinct fulfilled promise each time\n[PASS] ReadableStream (errored via call in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via call in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via call in start): should be able to obtain a second reader, with the correct closed promise\n[PASS] ReadableStream (errored via call in start): cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via call in start): reader cancel() should return a distinct rejected promise each time\n[PASS] ReadableStream (errored via returning a rejected promise in start): getReader() should return a reader that acts errored\n[PASS] ReadableStream (errored via returning a rejected promise in start): read() twice should give the error each time\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: closed should reject with the error\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream (errored via returning a rejected promise in start) reader: read() should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored before getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored before getting reader): read() should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): closed should reject with the error\n[PASS] ReadableStream reader (errored after getting reader): releasing the lock should cause closed to reject and change identity\n[PASS] ReadableStream reader (errored after getting reader): read() should reject with the error\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (sequential)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: calling read() twice without waiting will eventually give both chunks (nested)\n[PASS] ReadableStream (two chunks enqueued, still open) reader: cancel() after a read() should still give that single read result\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (sequential)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: third read(), without waiting, should give { value: undefined, done: true } (nested)\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: draining the stream via read() should cause the reader closed promise to fulfill, but locked stays true\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock after the stream is closed should cause locked to become false\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: releasing the lock should cause further read() calls to reject with a TypeError\n[PASS] ReadableStream (two chunks enqueued, then closed) reader: reader's closed property always returns the same promise\n\n{\n  \"idlharness-shadowrealm.window.js\": {\n    \"skip\": \"ShadowRealm support is not enabled\"\n  },\n  \"idlharness.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"piping\\\\general-addition.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"enqueue() must not synchronously call write algorithm\"\n      ]\n    }\n  },\n  \"queuing-strategies-size-function-per-global.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-byte-streams\\\\bad-buffers-and-views.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: enqueuing an already-detached buffer throws\",\n        \"ReadableStream with byte source: read()ing from a closed stream still transfers the buffer\",\n        \"ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer\",\n        \"ReadableStream with byte source: reading into an already-detached buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length buffer rejects\",\n        \"ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\enqueue-with-detached-buffer.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"enqueue after detaching byobRequest.view.buffer should throw\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\general.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: Throw if close()-ed more than once\",\n        \"ReadableStream with byte source: Throw on enqueue() after close()\",\n        \"ReadableStream with byte source: autoAllocateChunkSize\",\n        \"ReadableStream with byte source: Mix of auto allocate and BYOB\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read()\",\n        \"ReadableStream with byte source: Push source that doesn't understand pull signal\",\n        \"ReadableStream with byte source: enqueue() with Uint16Array, getReader(), then read()\",\n        \"ReadableStream with byte source: enqueue(), read(view) partially, then read()\",\n        \"ReadableStream with byte source: getReader(), enqueue(), close(), then read()\",\n        \"ReadableStream with byte source: enqueue(), close(), getReader(), then read()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue()\",\n        \"ReadableStream with byte source: Respond to pull() by enqueue() asynchronously\",\n        \"ReadableStream with byte source: Respond to multiple pull() by separate enqueue()\",\n        \"ReadableStream with byte source: read(view), then respond()\",\n        \"ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer\",\n        \"ReadableStream with byte source: read(view), then respond() with too big value\",\n        \"ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = not BYOB)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)\",\n        \"ReadableStream with byte source: getReader(), read(view), then cancel()\",\n        \"ReadableStream with byte source: cancel() with partially filled pending pull() request\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view\",\n        \"ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view\",\n        \"ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views\",\n        \"ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array\",\n        \"ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array\",\n        \"ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail\",\n        \"ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array\",\n        \"ReadableStream with byte source: read(view), then respond() and close() in pull()\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls\",\n        \"ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls\",\n        \"ReadableStream with byte source: read() twice, then enqueue() twice\",\n        \"ReadableStream with byte source: Multiple read(view), close() and respond()\",\n        \"ReadableStream with byte source: Multiple read(view), big enqueue()\",\n        \"ReadableStream with byte source: Multiple read(view) and multiple enqueue()\",\n        \"ReadableStream with byte source: read(view), then error()\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream\",\n        \"ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it\",\n        \"calling respond() twice on the same byobRequest should throw\",\n        \"calling respondWithNewView() twice on the same byobRequest should throw\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\non-transferable-buffers.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream with byte source: respondWithNewView() with a non-transferable buffer\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\respond-after-enqueue.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"byobRequest.respond() after enqueue() should not crash\",\n        \"byobRequest.respond() with cached byobRequest after enqueue() should not crash\",\n        \"byobRequest.respond() after enqueue() with double read should not crash\"\n      ]\n    }\n  },\n  \"readable-byte-streams\\\\tee.any.js\": {\n    \"fail\": {\n      \"unexpected\": [\n        \"ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other\",\n        \"ReadableStream teeing with byte source: chunks should be cloned for each branch\",\n        \"ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2\",\n        \"ReadableStream teeing with byte source: errors in the source should propagate to both branches\",\n        \"ReadableStream teeing with byte source: canceling branch1 should not impact branch2\",\n        \"ReadableStream teeing with byte source: canceling branch2 should not impact branch1\",\n        \"ReadableStream teeing with byte source: closing the original should close the branches\",\n        \"ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream\",\n        \"ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors\",\n        \"ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue\",\n        \"evaluation in WPTRunner.runJsTests()\"\n      ]\n    }\n  },\n  \"readable-streams\\\\cross-realm-crash.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type-message-port.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferred MessageChannel works as expected\",\n        \"Second branch of owning ReadableStream tee should end up into errors with transfer only values\"\n      ]\n    }\n  },\n  \"readable-streams\\\\owning-type-video-frame.any.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"readable-streams\\\\owning-type.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"ReadableStream can be constructed with owning type\",\n        \"ReadableStream of type owning should call start with a ReadableStreamDefaultController\",\n        \"ReadableStream should be able to call enqueue with an empty transfer list\",\n        \"ReadableStream should check transfer parameter\",\n        \"ReadableStream of type owning should transfer enqueued chunks\"\n      ]\n    }\n  },\n  \"readable-streams\\\\read-task-handling.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\deserialize-error.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transfer-with-messageport.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  },\n  \"transferable\\\\transform-stream-members.any.js\": {\n    \"fail\": {\n      \"expected\": [\n        \"Transferring [object TransformStream],[object ReadableStream] should fail\",\n        \"Transferring [object TransformStream],[object WritableStream] should fail\"\n      ]\n    }\n  },\n  \"transform-streams\\\\invalid-realm.tentative.window.js\": {\n    \"skip\": \"Browser-specific test\"\n  }\n}\n\nRan 65/73 tests, 8 skipped, 54 passed, 4 expected failures, 7 unexpected failures, 0 unexpected passes\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792\n        throw new Error(\n        ^\n\nError: Found 7 unexpected failures. Consider updating test\\wpt\\status\\streams.json for these files:\nidlharness.any.js\nreadable-byte-streams\\bad-buffers-and-views.any.js\nreadable-byte-streams\\enqueue-with-detached-buffer.any.js\nreadable-byte-streams\\non-transferable-buffers.any.js\nreadable-byte-streams\\general.any.js\nreadable-byte-streams\\respond-after-enqueue.any.js\nreadable-byte-streams\\tee.any.js\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\wpt.js:792:15)\n    at process.emit (node:events:519:28)\n\nNode.js v22.0.0-pre"},"time":4208.136,"fullname":"wpt/test-streams","closingTestPoint":false}}]}