{"failedTests":[{"testName":"parallel/test-http2-server-stream-session-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-http2-server-stream-session-destroy","id":465,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 0.\n    at Proxy.mustCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at Http2Server.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-http2-server-stream-session-destroy.js:51:24)\n    at Http2Server.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at Object.onceWrapper (node:events:633:28)\n    at Http2Server.emit (node:events:519:28)\n    at emitListeningNT (node:net:1906:10)\n    at process.processTicksAndRejections (node:internal/process/task_queues:81:21)"},"time":243.012,"fullname":"parallel/test-http2-server-stream-session-destroy","closingTestPoint":false}},{"testName":"parallel/test-runner-inspect","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-inspect","id":651,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[test] Connecting to a child Node process\n[test] Testing /json/list\n[err] (node:7960) Warning: Using the inspector with --test forces running at a concurrency of 1. Use the inspectPort option to run with concurrency\n[err] (Use `node --trace-warnings ...` to show where the warning was created)\n[err] \n[out] TAP version 13\n[out] \n[err] Debugger listening on ws://127.0.0.1:59836/679906ae-8d78-4acc-b7c1-50c37c312c39\n[err] \n[err] For help, see: https://nodejs.org/en/docs/inspector\n[err] \n[err] Debugger attached.\n[err] For help, see: https://nodejs.org/en/docs/inspector\n[err] \n[out] # Debugger ending on ws://127.0.0.1:59836/679906ae-8d78-4acc-b7c1-50c37c312c39\n[out] \n[out] # Subtest: this should pass\n[out] \n[out] ok 1 - this should pass\n[out] \n[out]   ---\n[out]   duration_ms: 1.4271\n[out]   ...\n[out] \n[out] # \\#\\#\\# 0\n[out] \n[out] 1..1\n[out] \n[out] # tests 1\n[out] \n[out] # suites 0\n[out] \n[out] # pass 1\n[out] # fail 0\n[out] \n[out] # cancelled 0\n[out] \n[out] # skipped 0\n[out] \n[out] # todo 0\n[out] \n[out] # duration_ms 178.9385\n[out] \n[err] ### 0\n[err] \nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '### 0\\r\\n'\n- ''\n    at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-inspect.mjs:82:10\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '### 0\\r\\n',\n  expected: '',\n  operator: 'strictEqual'\n}\n1"},"time":1388.077,"fullname":"parallel/test-runner-inspect","closingTestPoint":false}},{"testName":"parallel/test-runner-run","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-run","id":653,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: require('node:test').run\n    # Subtest: should run with no tests\n    ok 1 - should run with no tests\n      ---\n      duration_ms: 443.9869\n      ...\n    # Subtest: should fail with non existing file\n    ok 2 - should fail with non existing file\n      ---\n      duration_ms: 486.9753\n      ...\n    # Subtest: should succeed with a file\n    ok 3 - should succeed with a file\n      ---\n      duration_ms: 512.897\n      ...\n    # Subtest: should run same file twice\n    ok 4 - should run same file twice\n      ---\n      duration_ms: 1349.0133\n      ...\n    # Subtest: should run a failed test\n    ok 5 - should run a failed test\n      ---\n      duration_ms: 510.8041\n      ...\n    # Subtest: should support timeout\n    ok 6 - should support timeout\n      ---\n      duration_ms: 511.8758\n      ...\n    # Subtest: should be piped with dot\n    ok 7 - should be piped with dot\n      ---\n      duration_ms: 766.5361\n      ...\n    # Subtest: should be piped with spec reporter\n        # Subtest: new spec\n        not ok 1 - new spec\n          ---\n          duration_ms: 805.4426\n          location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:78:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:85:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 0)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        # Subtest: spec()\n        not ok 2 - spec()\n          ---\n          duration_ms: 805.8232\n          location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:89:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:96:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 1)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        # Subtest: spec\n        not ok 3 - spec\n          ---\n          duration_ms: 734.581\n          location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:100:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:106:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 2)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        1..3\n    not ok 8 - should be piped with spec reporter\n      ---\n      duration_ms: 864.4248\n      type: 'suite'\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:77:3'\n      failureType: 'subtestsFailed'\n      error: '3 subtests failed'\n      code: 'ERR_TEST_FAILURE'\n      stack: |-\n        async Promise.all (index 7)\n      ...\n    # Subtest: should be piped with tap\n    not ok 9 - should be piped with tap\n      ---\n      duration_ms: 537.8836\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:111:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        \n        14 !== 13\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: 13\n      actual: 14\n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:115:12)\n        process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 8)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - RegExp\n    ok 10 - should skip tests not matching testNamePatterns - RegExp\n      ---\n      duration_ms: 771.1442\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - string\n    ok 11 - should skip tests not matching testNamePatterns - string\n      ---\n      duration_ms: 804.0983\n      ...\n    # Subtest: should pass only to children\n    ok 12 - should pass only to children\n      ---\n      duration_ms: 854.6057\n      ...\n    # Subtest: should emit \"test:watch:drained\" event on watch mode\n    ok 13 - should emit \"test:watch:drained\" event on watch mode\n      ---\n      duration_ms: 417.4085\n      ...\n    # Subtest: AbortSignal\n        # Subtest: should accept a signal\n        ok 1 - should accept a signal\n          ---\n          duration_ms: 351.947\n          ...\n        # Subtest: should stop watch mode when abortSignal aborts\n        ok 2 - should stop watch mode when abortSignal aborts\n          ---\n          duration_ms: 515.2905\n          ...\n        # Subtest: should abort when test succeeded\n        ok 3 - should abort when test succeeded\n          ---\n          duration_ms: 729.9549\n          ...\n        # Subtest: should abort when test failed\n        ok 4 - should abort when test failed\n          ---\n          duration_ms: 974.3655\n          ...\n        1..4\n    ok 14 - AbortSignal\n      ---\n      duration_ms: 979.8724\n      type: 'suite'\n      ...\n    # Subtest: sharding\n        # Subtest: validation\n            # Subtest: should require shard.total when having shard option\n            ok 1 - should require shard.total when having shard option\n              ---\n              duration_ms: 3.5472\n              ...\n            # Subtest: should require shard.index when having shards option\n            ok 2 - should require shard.index when having shards option\n              ---\n              duration_ms: 3.2883\n              ...\n            # Subtest: should require shard.total to be greater than 0 when having shard option\n            ok 3 - should require shard.total to be greater than 0 when having shard option\n              ---\n              duration_ms: 3.0945\n              ...\n            # Subtest: should require shard.index to be greater than 0 when having shard option\n            ok 4 - should require shard.index to be greater than 0 when having shard option\n              ---\n              duration_ms: 2.5298\n              ...\n            # Subtest: should require shard.index to not be greater than the shards total when having shard option\n            ok 5 - should require shard.index to not be greater than the shards total when having shard option\n              ---\n              duration_ms: 2.3137\n              ...\n            # Subtest: should require watch mode to be disabled when having shard option\n            ok 6 - should require watch mode to be disabled when having shard option\n              ---\n              duration_ms: 2.1357\n              ...\n            1..6\n        ok 1 - validation\n          ---\n          duration_ms: 239.1769\n          type: 'suite'\n          ...\n        # Subtest: should run only the tests files matching the shard index\n        ok 2 - should run only the tests files matching the shard index\n          ---\n          duration_ms: 1242.4583\n          ...\n        # Subtest: different shards should not run the same file\n        ok 3 - different shards should not run the same file\n          ---\n          duration_ms: 1425.6818\n          ...\n        # Subtest: combination of all shards should be all the tests\n        ok 4 - combination of all shards should be all the tests\n          ---\n          duration_ms: 1471.5264\n          ...\n        1..4\n    ok 15 - sharding\n      ---\n      duration_ms: 1479.4227\n      type: 'suite'\n      ...\n    # Subtest: validation\n        # Subtest: should only allow array in options.files\n        ok 1 - should only allow array in options.files\n          ---\n          duration_ms: 301.7982\n          ...\n        # Subtest: should only allow object as options\n        ok 2 - should only allow object as options\n          ---\n          duration_ms: 299.3844\n          ...\n        1..2\n    ok 16 - validation\n      ---\n      duration_ms: 311.9435\n      type: 'suite'\n      ...\n    1..16\nnot ok 1 - require('node:test').run\n  ---\n  duration_ms: 1604.3192\n  type: 'suite'\n  location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:10:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 30\n# suites 6\n# pass 26\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 1616.7515\n(node:9476) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 uncaughtException listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:9476) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 unhandledRejection listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(node:9476) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 beforeExit listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0"},"time":1974.114,"fullname":"parallel/test-runner-run","closingTestPoint":false}},{"testName":"parallel/test-runner-watch-mode","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-watch-mode","id":654,"buffered":false,"tapError":null,"skip":false,"todo":": Fix flaky test","previous":null,"plan":null,"diag":{"severity":"flaky","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner watch mode\n    # Subtest: should run tests repeatedly\n    ok 1 - should run tests repeatedly\n      ---\n      duration_ms: 2884.9296\n      ...\n    # Subtest: should run tests with dependency repeatedly\n    ok 2 - should run tests with dependency repeatedly\n      ---\n      duration_ms: 1510.6727\n      ...\n    # Subtest: should run tests with ESM dependency\n    ok 3 - should run tests with ESM dependency\n      ---\n      duration_ms: 1517.5086\n      ...\n    # Subtest: should support running tests without a file\n    ok 4 - should support running tests without a file\n      ---\n      duration_ms: 1539.3643\n      ...\n    1..4\nok 1 - test runner watch mode\n  ---\n  duration_ms: 7456.2123\n  type: 'suite'\n  ...\n1..1\n# tests 4\n# suites 1\n# pass 4\n# fail 0\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 7475.1099\n### 0\nCan't clean tmpdir: C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.652\nFiles blocking: [ 'dependency.js', 'dependency.mjs', 'test.js' ]\n\nC:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:69\n    throw e;\n    ^\n\nError: EBUSY: resource busy or locked, rmdir 'C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\.tmp.652'\n    at rmdirSync (node:fs:1217:11)\n    at _rmdirSync (node:internal/fs/rimraf:235:5)\n    at rimrafSync (node:internal/fs/rimraf:193:7)\n    at Object.rmSync (node:fs:1266:10)\n    at rmSync (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:20:8)\n    at onexit (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:54:5)\n    at process.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\tmpdir.js:43:14)\n    at process.emit (node:events:531:35) {\n  errno: -4082,\n  code: 'EBUSY',\n  syscall: 'rmdir',\n  path: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\.tmp.652'\n}\n\nNode.js v22.0.0-pre"},"time":7846.459,"fullname":"parallel/test-runner-watch-mode","closingTestPoint":false}},{"testName":"parallel/test-whatwg-webstreams-adapters-to-writablestream","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-whatwg-webstreams-adapters-to-writablestream","id":854,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\nnode:internal/webstreams/adapters:204\n    controller.error(new AbortError());\n               ^\n\nTypeError: Cannot read properties of undefined (reading 'error')\n    at TestWritable.<anonymous> (node:internal/webstreams/adapters:204:16)\n    at TestWritable.<anonymous> (node:internal/util:522:12)\n    at TestWritable.onclose (node:internal/streams/end-of-stream:162:14)\n    at TestWritable.emit (node:events:519:28)\n    at emitCloseNT (node:internal/streams/destroy:152:10)\n    at node:internal/streams/destroy:121:9\n    at node:internal/process/task_queues:140:7\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at AsyncResource.runMicrotask (node:internal/process/task_queues:137:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\nNode.js v22.0.0-pre"},"time":205.012,"fullname":"parallel/test-whatwg-webstreams-adapters-to-writablestream","closingTestPoint":false}},{"testName":"parallel/test-fs-read-stream-patch-open","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-fs-read-stream-patch-open","id":279,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 2.\n    at Proxy.mustCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-read-stream-patch-open.js:15:41\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n(node:7844) [DEP0135] DeprecationWarning: ReadStream.prototype.open() is deprecated\n(Use `node --trace-deprecation ...` to show where the warning was created)"},"time":154.005,"fullname":"parallel/test-fs-read-stream-patch-open","closingTestPoint":false}},{"testName":"parallel/test-runner-concurrency","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-concurrency","id":654,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: Concurrency option (boolean) = true\n    # Subtest: should start the first test\n    ok 1 - should start the first test\n      ---\n      duration_ms: 5.9533\n      ...\n    # Subtest: should start before the previous test ends\n    ok 2 - should start before the previous test ends\n      ---\n      duration_ms: 0.3166\n      ...\n    1..2\nok 1 - Concurrency option (boolean) = true\n  ---\n  duration_ms: 7.8959\n  type: 'suite'\n  ...\n# Subtest: Concurrency option (boolean) = false\n    # Subtest: should start the first test\n    ok 1 - should start the first test\n      ---\n      duration_ms: 5.1763\n      ...\n    # Subtest: should start after the previous test ends\n    ok 2 - should start after the previous test ends\n      ---\n      duration_ms: 0.1773\n      ...\n    1..2\nok 2 - Concurrency option (boolean) = false\n  ---\n  duration_ms: 5.6905\n  type: 'suite'\n  ...\n# Subtest: concurrency: true implies Infinity\n    # Subtest: should run test 0 concurrently\n    ok 1 - should run test 0 concurrently\n      ---\n      duration_ms: 8.1408\n      ...\n    # Subtest: should run test 1 concurrently\n    ok 2 - should run test 1 concurrently\n      ---\n      duration_ms: 8.2866\n      ...\n    # Subtest: should run test 2 concurrently\n    ok 3 - should run test 2 concurrently\n      ---\n      duration_ms: 8.5862\n      ...\n    # Subtest: should run test 3 concurrently\n    ok 4 - should run test 3 concurrently\n      ---\n      duration_ms: 9.0637\n      ...\n    # Subtest: should run test 4 concurrently\n    ok 5 - should run test 4 concurrently\n      ---\n      duration_ms: 9.2921\n      ...\n    # Subtest: should run test 5 concurrently\n    ok 6 - should run test 5 concurrently\n      ---\n      duration_ms: 9.7839\n      ...\n    # Subtest: should run test 6 concurrently\n    ok 7 - should run test 6 concurrently\n      ---\n      duration_ms: 10.1761\n      ...\n    # Subtest: should run test 7 concurrently\n    ok 8 - should run test 7 concurrently\n      ---\n      duration_ms: 10.4758\n      ...\n    # Subtest: should run test 8 concurrently\n    ok 9 - should run test 8 concurrently\n      ---\n      duration_ms: 10.7144\n      ...\n    # Subtest: should run test 9 concurrently\n    ok 10 - should run test 9 concurrently\n      ---\n      duration_ms: 10.8422\n      ...\n    # Subtest: should run test 10 concurrently\n    ok 11 - should run test 10 concurrently\n      ---\n      duration_ms: 11.3056\n      ...\n    # Subtest: should run test 11 concurrently\n    ok 12 - should run test 11 concurrently\n      ---\n      duration_ms: 11.6137\n      ...\n    # Subtest: should run test 12 concurrently\n    ok 13 - should run test 12 concurrently\n      ---\n      duration_ms: 11.9813\n      ...\n    # Subtest: should run test 13 concurrently\n    ok 14 - should run test 13 concurrently\n      ---\n      duration_ms: 12.371\n      ...\n    # Subtest: should run test 14 concurrently\n    ok 15 - should run test 14 concurrently\n      ---\n      duration_ms: 12.6313\n      ...\n    # Subtest: should run test 15 concurrently\n    ok 16 - should run test 15 concurrently\n      ---\n      duration_ms: 12.8844\n      ...\n    # Subtest: should run test 16 concurrently\n    ok 17 - should run test 16 concurrently\n      ---\n      duration_ms: 13.1257\n      ...\n    # Subtest: should run test 17 concurrently\n    ok 18 - should run test 17 concurrently\n      ---\n      duration_ms: 13.3605\n      ...\n    # Subtest: should run test 18 concurrently\n    ok 19 - should run test 18 concurrently\n      ---\n      duration_ms: 13.6255\n      ...\n    # Subtest: should run test 19 concurrently\n    ok 20 - should run test 19 concurrently\n      ---\n      duration_ms: 13.8795\n      ...\n    1..20\nok 3 - concurrency: true implies Infinity\n  ---\n  duration_ms: 16.1593\n  type: 'suite'\n  ...\n# Subtest: suite 1\n    # Subtest: 1\n    ok 1 - 1\n      ---\n      duration_ms: 0.2036\n      ...\n    # Subtest: 2\n    ok 2 - 2\n      ---\n      duration_ms: 0.0994\n      ...\n    # Subtest: nested\n        # Subtest: nested 1\n        ok 1 - nested 1\n          ---\n          duration_ms: 0.1601\n          ...\n        # Subtest: nested 2\n        ok 2 - nested 2\n          ---\n          duration_ms: 0.0824\n          ...\n        1..2\n    ok 3 - nested\n      ---\n      duration_ms: 0.4238\n      type: 'suite'\n      ...\n    1..3\nok 4 - suite 1\n  ---\n  duration_ms: 1.0086\n  type: 'suite'\n  ...\n# Subtest: test\n    # Subtest: test1\n    ok 1 - test1\n      ---\n      duration_ms: 0.1524\n      ...\n    # Subtest: test 2\n    ok 2 - test 2\n      ---\n      duration_ms: 0.0758\n      ...\n    1..2\nok 5 - test\n  ---\n  duration_ms: 0.6312\n  ...\n# Subtest: suite 2\n    # Subtest: should run after other suites\n    ok 1 - should run after other suites\n      ---\n      duration_ms: 0.8162\n      ...\n    1..1\nok 6 - suite 2\n  ---\n  duration_ms: 0.9525\n  type: 'suite'\n  ...\n# Subtest: --test multiple files\nnot ok 7 - --test multiple files\n  ---\n  duration_ms: 324.5458\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-concurrency.js:89:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-concurrency.js:96:10)\n    process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    async Test.run (node:internal/test_runner/test:632:9)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n1..7\n# tests 33\n# suites 6\n# pass 32\n# fail 1\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 369.9532\n### 0"},"time":673.009,"fullname":"parallel/test-runner-concurrency","closingTestPoint":false}},{"testName":"parallel/test-runner-reporters","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-reporters","id":656,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: node:test reporters\n    # Subtest: should default to outputing TAP to stdout\n    not ok 1 - should default to outputing TAP to stdout\n      ---\n      duration_ms: 2869.9475\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:16:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:18:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should default destination to stdout when passing a single reporter\n    ok 2 - should default destination to stdout when passing a single reporter\n      ---\n      duration_ms: 2672.5758\n      ...\n    # Subtest: should throw when passing reporters without a destination\n    ok 3 - should throw when passing reporters without a destination\n      ---\n      duration_ms: 2503.5352\n      ...\n    # Subtest: should throw when passing a destination without a reporter\n    ok 4 - should throw when passing a destination without a reporter\n      ---\n      duration_ms: 2422.6035\n      ...\n    # Subtest: should support stdout as a destination\n    ok 5 - should support stdout as a destination\n      ---\n      duration_ms: 2310.6287\n      ...\n    # Subtest: should support stderr as a destination\n    ok 6 - should support stderr as a destination\n      ---\n      duration_ms: 2079.3877\n      ...\n    # Subtest: should support a file as a destination\n    ok 7 - should support a file as a destination\n      ---\n      duration_ms: 1903.0582\n      ...\n    # Subtest: should disallow using v8-serializer as reporter\n    ok 8 - should disallow using v8-serializer as reporter\n      ---\n      duration_ms: 1707.7792\n      ...\n    # Subtest: should support multiple reporters\n    ok 9 - should support multiple reporters\n      ---\n      duration_ms: 1618.7722\n      ...\n    # Subtest: should support a 'js' file as a custom reporter\n    not ok 10 - should support a 'js' file as a custom reporter\n      ---\n      duration_ms: 1417.1784\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'custom.js {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'custom.js {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:99:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a 'cjs' file as a custom reporter\n    not ok 11 - should support a 'cjs' file as a custom reporter\n      ---\n      duration_ms: 1220.4632\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:97:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a 'mjs' file as a custom reporter\n    not ok 12 - should support a 'mjs' file as a custom reporter\n      ---\n      duration_ms: 1015.0628\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'custom.mjs {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'custom.mjs {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:99:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a custom reporter from node_modules\n    not ok 13 - should support a custom reporter from node_modules\n      ---\n      duration_ms: 831.3352\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:104:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /^package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:109:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a custom ESM reporter from node_modules\n    not ok 14 - should support a custom ESM reporter from node_modules\n      ---\n      duration_ms: 620.5448\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:115:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /^package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:120:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should throw when reporter setup throws asynchronously\n    ok 15 - should throw when reporter setup throws asynchronously\n      ---\n      duration_ms: 422.4001\n      ...\n    # Subtest: should throw when reporter errors\n    not ok 16 - should throw when reporter errors\n      ---\n      duration_ms: 335.9019\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:138:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        \n        1 !== 7\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: 7\n      actual: 1\n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:142:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should throw when reporter errors asynchronously\n    not ok 17 - should throw when reporter errors asynchronously\n      ---\n      duration_ms: 131.835\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:148:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /Emitted 'error' event on Duplex instance/. Input:\n        \n        '### 0\\r\\n' +\n          '### 0\\r\\n' +\n          '### 0\\r\\n' +\n          'node:internal/test_runner/harness:50\\r\\n' +\n          '      throw err;\\r\\n' +\n          '      ^\\r\\n' +\n          '\\r\\n' +\n          'Error: Reporting error\\r\\n' +\n          '    at Immediate.<anonymous> (C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\fixtures\\\\test-runner\\\\custom_reporters\\\\throwing-async.js:6:11)\\r\\n' +\n          '    at process.processImmediate (node:internal/timers:478:21)\\r\\n' +\n          '\\r\\n' +\n          'Node.js v22.0.0-pre\\r\\n'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: |-\n        ### 0\n        ### 0\n        ### 0\n        node:internal/test_runner/harness:50\n              throw err;\n              ^\n        \n        Error: Reporting error\n            at Immediate.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\test-runner\\custom_reporters\\throwing-async.js:6:11)\n            at process.processImmediate (node:internal/timers:478:21)\n        \n        Node.js v22.0.0-pre\n        \n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:156:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    1..17\nnot ok 1 - node:test reporters\n  ---\n  duration_ms: 2874.6575\n  type: 'suite'\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:15:1'\n  failureType: 'subtestsFailed'\n  error: '8 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 17\n# suites 1\n# pass 9\n# fail 8\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 2897.4225\n### 0"},"time":3250.043,"fullname":"parallel/test-runner-reporters","closingTestPoint":false}},{"testName":"parallel/test-stream-pipeline","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-pipeline","id":696,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\nnode:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'The operation was aborted'\n- 'kaboom'\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-pipeline.js:792:12\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15\n    at node:internal/util:522:12\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'The operation was aborted',\n  expected: 'kaboom',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":491.009,"fullname":"parallel/test-stream-pipeline","closingTestPoint":false}},{"testName":"parallel/test-fs-read-stream-patch-open","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-fs-read-stream-patch-open","id":278,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 2.\n    at Proxy.mustCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-read-stream-patch-open.js:15:41\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n(node:1400) [DEP0135] DeprecationWarning: ReadStream.prototype.open() is deprecated\n(Use `node --trace-deprecation ...` to show where the warning was created)"},"time":323.002,"fullname":"parallel/test-fs-read-stream-patch-open","closingTestPoint":false}},{"testName":"parallel/test-runner-concurrency","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-concurrency","id":656,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: Concurrency option (boolean) = true\n    # Subtest: should start the first test\n    ok 1 - should start the first test\n      ---\n      duration_ms: 7.911\n      ...\n    # Subtest: should start before the previous test ends\n    ok 2 - should start before the previous test ends\n      ---\n      duration_ms: 1.2054\n      ...\n    1..2\nok 1 - Concurrency option (boolean) = true\n  ---\n  duration_ms: 10.8109\n  type: 'suite'\n  ...\n# Subtest: Concurrency option (boolean) = false\n    # Subtest: should start the first test\n    ok 1 - should start the first test\n      ---\n      duration_ms: 4.3317\n      ...\n    # Subtest: should start after the previous test ends\n    ok 2 - should start after the previous test ends\n      ---\n      duration_ms: 0.2239\n      ...\n    1..2\nok 2 - Concurrency option (boolean) = false\n  ---\n  duration_ms: 4.9779\n  type: 'suite'\n  ...\n# Subtest: concurrency: true implies Infinity\n    # Subtest: should run test 0 concurrently\n    ok 1 - should run test 0 concurrently\n      ---\n      duration_ms: 18.1156\n      ...\n    # Subtest: should run test 1 concurrently\n    ok 2 - should run test 1 concurrently\n      ---\n      duration_ms: 18.5563\n      ...\n    # Subtest: should run test 2 concurrently\n    ok 3 - should run test 2 concurrently\n      ---\n      duration_ms: 18.9107\n      ...\n    # Subtest: should run test 3 concurrently\n    ok 4 - should run test 3 concurrently\n      ---\n      duration_ms: 19.9953\n      ...\n    # Subtest: should run test 4 concurrently\n    ok 5 - should run test 4 concurrently\n      ---\n      duration_ms: 20.3128\n      ...\n    # Subtest: should run test 5 concurrently\n    ok 6 - should run test 5 concurrently\n      ---\n      duration_ms: 21.3329\n      ...\n    # Subtest: should run test 6 concurrently\n    ok 7 - should run test 6 concurrently\n      ---\n      duration_ms: 22.0094\n      ...\n    # Subtest: should run test 7 concurrently\n    ok 8 - should run test 7 concurrently\n      ---\n      duration_ms: 22.471\n      ...\n    # Subtest: should run test 8 concurrently\n    ok 9 - should run test 8 concurrently\n      ---\n      duration_ms: 22.8531\n      ...\n    # Subtest: should run test 9 concurrently\n    ok 10 - should run test 9 concurrently\n      ---\n      duration_ms: 23.2144\n      ...\n    # Subtest: should run test 10 concurrently\n    ok 11 - should run test 10 concurrently\n      ---\n      duration_ms: 23.6463\n      ...\n    # Subtest: should run test 11 concurrently\n    ok 12 - should run test 11 concurrently\n      ---\n      duration_ms: 23.9981\n      ...\n    # Subtest: should run test 12 concurrently\n    ok 13 - should run test 12 concurrently\n      ---\n      duration_ms: 24.388\n      ...\n    # Subtest: should run test 13 concurrently\n    ok 14 - should run test 13 concurrently\n      ---\n      duration_ms: 24.8385\n      ...\n    # Subtest: should run test 14 concurrently\n    ok 15 - should run test 14 concurrently\n      ---\n      duration_ms: 25.5875\n      ...\n    # Subtest: should run test 15 concurrently\n    ok 16 - should run test 15 concurrently\n      ---\n      duration_ms: 26.2725\n      ...\n    # Subtest: should run test 16 concurrently\n    ok 17 - should run test 16 concurrently\n      ---\n      duration_ms: 26.8798\n      ...\n    # Subtest: should run test 17 concurrently\n    ok 18 - should run test 17 concurrently\n      ---\n      duration_ms: 27.2772\n      ...\n    # Subtest: should run test 18 concurrently\n    ok 19 - should run test 18 concurrently\n      ---\n      duration_ms: 27.6176\n      ...\n    # Subtest: should run test 19 concurrently\n    ok 20 - should run test 19 concurrently\n      ---\n      duration_ms: 28.0438\n      ...\n    # Subtest: should run test 20 concurrently\n    ok 21 - should run test 20 concurrently\n      ---\n      duration_ms: 29.3756\n      ...\n    # Subtest: should run test 21 concurrently\n    ok 22 - should run test 21 concurrently\n      ---\n      duration_ms: 29.7489\n      ...\n    # Subtest: should run test 22 concurrently\n    ok 23 - should run test 22 concurrently\n      ---\n      duration_ms: 30.0844\n      ...\n    # Subtest: should run test 23 concurrently\n    ok 24 - should run test 23 concurrently\n      ---\n      duration_ms: 30.4386\n      ...\n    # Subtest: should run test 24 concurrently\n    ok 25 - should run test 24 concurrently\n      ---\n      duration_ms: 30.934\n      ...\n    # Subtest: should run test 25 concurrently\n    ok 26 - should run test 25 concurrently\n      ---\n      duration_ms: 31.2922\n      ...\n    # Subtest: should run test 26 concurrently\n    ok 27 - should run test 26 concurrently\n      ---\n      duration_ms: 34.0503\n      ...\n    # Subtest: should run test 27 concurrently\n    ok 28 - should run test 27 concurrently\n      ---\n      duration_ms: 34.5275\n      ...\n    # Subtest: should run test 28 concurrently\n    ok 29 - should run test 28 concurrently\n      ---\n      duration_ms: 34.851\n      ...\n    # Subtest: should run test 29 concurrently\n    ok 30 - should run test 29 concurrently\n      ---\n      duration_ms: 35.2238\n      ...\n    # Subtest: should run test 30 concurrently\n    ok 31 - should run test 30 concurrently\n      ---\n      duration_ms: 35.5495\n      ...\n    # Subtest: should run test 31 concurrently\n    ok 32 - should run test 31 concurrently\n      ---\n      duration_ms: 35.8168\n      ...\n    # Subtest: should run test 32 concurrently\n    ok 33 - should run test 32 concurrently\n      ---\n      duration_ms: 36.4438\n      ...\n    # Subtest: should run test 33 concurrently\n    ok 34 - should run test 33 concurrently\n      ---\n      duration_ms: 36.8305\n      ...\n    # Subtest: should run test 34 concurrently\n    ok 35 - should run test 34 concurrently\n      ---\n      duration_ms: 37.174\n      ...\n    # Subtest: should run test 35 concurrently\n    ok 36 - should run test 35 concurrently\n      ---\n      duration_ms: 37.5048\n      ...\n    # Subtest: should run test 36 concurrently\n    ok 37 - should run test 36 concurrently\n      ---\n      duration_ms: 37.8765\n      ...\n    # Subtest: should run test 37 concurrently\n    ok 38 - should run test 37 concurrently\n      ---\n      duration_ms: 36.4123\n      ...\n    # Subtest: should run test 38 concurrently\n    ok 39 - should run test 38 concurrently\n      ---\n      duration_ms: 46.634\n      ...\n    # Subtest: should run test 39 concurrently\n    ok 40 - should run test 39 concurrently\n      ---\n      duration_ms: 47.1788\n      ...\n    1..40\nok 3 - concurrency: true implies Infinity\n  ---\n  duration_ms: 54.4709\n  type: 'suite'\n  ...\n# Subtest: suite 1\n    # Subtest: 1\n    ok 1 - 1\n      ---\n      duration_ms: 0.2154\n      ...\n    # Subtest: 2\n    ok 2 - 2\n      ---\n      duration_ms: 0.1214\n      ...\n    # Subtest: nested\n        # Subtest: nested 1\n        ok 1 - nested 1\n          ---\n          duration_ms: 0.1345\n          ...\n        # Subtest: nested 2\n        ok 2 - nested 2\n          ---\n          duration_ms: 0.1365\n          ...\n        1..2\n    ok 3 - nested\n      ---\n      duration_ms: 0.5196\n      type: 'suite'\n      ...\n    1..3\nok 4 - suite 1\n  ---\n  duration_ms: 1.2333\n  type: 'suite'\n  ...\n# Subtest: test\n    # Subtest: test1\n    ok 1 - test1\n      ---\n      duration_ms: 0.1542\n      ...\n    # Subtest: test 2\n    ok 2 - test 2\n      ---\n      duration_ms: 0.1247\n      ...\n    1..2\nok 5 - test\n  ---\n  duration_ms: 0.9744\n  ...\n# Subtest: suite 2\n    # Subtest: should run after other suites\n    ok 1 - should run after other suites\n      ---\n      duration_ms: 1.6276\n      ...\n    1..1\nok 6 - suite 2\n  ---\n  duration_ms: 1.8535\n  type: 'suite'\n  ...\n# Subtest: --test multiple files\nnot ok 7 - --test multiple files\n  ---\n  duration_ms: 597.5688\n  location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-concurrency.js:89:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-concurrency.js:96:10)\n    process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    async Test.run (node:internal/test_runner/test:632:9)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n1..7\n# tests 53\n# suites 6\n# pass 52\n# fail 1\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 693.6718\n### 0"},"time":1172,"fullname":"parallel/test-runner-concurrency","closingTestPoint":false}},{"testName":"parallel/test-runner-reporters","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-reporters","id":662,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: node:test reporters\n    # Subtest: should default to outputing TAP to stdout\n    not ok 1 - should default to outputing TAP to stdout\n      ---\n      duration_ms: 5663.2041\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:16:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:18:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should default destination to stdout when passing a single reporter\n    ok 2 - should default destination to stdout when passing a single reporter\n      ---\n      duration_ms: 5139.1136\n      ...\n    # Subtest: should throw when passing reporters without a destination\n    ok 3 - should throw when passing reporters without a destination\n      ---\n      duration_ms: 4718.4462\n      ...\n    # Subtest: should throw when passing a destination without a reporter\n    ok 4 - should throw when passing a destination without a reporter\n      ---\n      duration_ms: 4567.0086\n      ...\n    # Subtest: should support stdout as a destination\n    ok 5 - should support stdout as a destination\n      ---\n      duration_ms: 4411.9491\n      ...\n    # Subtest: should support stderr as a destination\n    ok 6 - should support stderr as a destination\n      ---\n      duration_ms: 4032.6863\n      ...\n    # Subtest: should support a file as a destination\n    ok 7 - should support a file as a destination\n      ---\n      duration_ms: 3671.7938\n      ...\n    # Subtest: should disallow using v8-serializer as reporter\n    ok 8 - should disallow using v8-serializer as reporter\n      ---\n      duration_ms: 3300.3327\n      ...\n    # Subtest: should support multiple reporters\n    ok 9 - should support multiple reporters\n      ---\n      duration_ms: 3120.3778\n      ...\n    # Subtest: should support a 'js' file as a custom reporter\n    not ok 10 - should support a 'js' file as a custom reporter\n      ---\n      duration_ms: 2731.6098\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'custom.js {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'custom.js {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:99:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a 'cjs' file as a custom reporter\n    not ok 11 - should support a 'cjs' file as a custom reporter\n      ---\n      duration_ms: 2336.2139\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:97:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a 'mjs' file as a custom reporter\n    not ok 12 - should support a 'mjs' file as a custom reporter\n      ---\n      duration_ms: 1948.5643\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'custom.mjs {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'custom.mjs {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:99:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a custom reporter from node_modules\n    not ok 13 - should support a custom reporter from node_modules\n      ---\n      duration_ms: 1562.8202\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:104:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /^package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:109:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a custom ESM reporter from node_modules\n    not ok 14 - should support a custom ESM reporter from node_modules\n      ---\n      duration_ms: 1179.7191\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:115:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /^package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:120:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should throw when reporter setup throws asynchronously\n    ok 15 - should throw when reporter setup throws asynchronously\n      ---\n      duration_ms: 796.9559\n      ...\n    # Subtest: should throw when reporter errors\n    not ok 16 - should throw when reporter errors\n      ---\n      duration_ms: 605.1437\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:138:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        \n        1 !== 7\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: 7\n      actual: 1\n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:142:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should throw when reporter errors asynchronously\n    not ok 17 - should throw when reporter errors asynchronously\n      ---\n      duration_ms: 224.2215\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:148:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /Emitted 'error' event on Duplex instance/. Input:\n        \n        '### 0\\r\\n' +\n          '### 0\\r\\n' +\n          '### 0\\r\\n' +\n          'node:internal/test_runner/harness:50\\r\\n' +\n          '      throw err;\\r\\n' +\n          '      ^\\r\\n' +\n          '\\r\\n' +\n          'Error: Reporting error\\r\\n' +\n          '    at Immediate.<anonymous> (d:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\fixtures\\\\test-runner\\\\custom_reporters\\\\throwing-async.js:6:11)\\r\\n' +\n          '    at process.processImmediate (node:internal/timers:478:21)\\r\\n' +\n          '\\r\\n' +\n          'Node.js v22.0.0-pre\\r\\n'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: |-\n        ### 0\n        ### 0\n        ### 0\n        node:internal/test_runner/harness:50\n              throw err;\n              ^\n        \n        Error: Reporting error\n            at Immediate.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\test-runner\\custom_reporters\\throwing-async.js:6:11)\n            at process.processImmediate (node:internal/timers:478:21)\n        \n        Node.js v22.0.0-pre\n        \n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:156:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    1..17\nnot ok 1 - node:test reporters\n  ---\n  duration_ms: 5668.7936\n  type: 'suite'\n  location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:15:1'\n  failureType: 'subtestsFailed'\n  error: '8 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 17\n# suites 1\n# pass 9\n# fail 8\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 5708.8382\n### 0"},"time":6194.958,"fullname":"parallel/test-runner-reporters","closingTestPoint":false}},{"testName":"parallel/test-stream-pipeline","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-pipeline","id":697,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\nnode:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'The operation was aborted'\n- 'kaboom'\n    at d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-pipeline.js:792:12\n    at d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15\n    at node:internal/util:522:12\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'The operation was aborted',\n  expected: 'kaboom',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":655.999,"fullname":"parallel/test-stream-pipeline","closingTestPoint":false}},{"testName":"parallel/test-fs-read-stream-patch-open","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2022_vs2022-x64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-fs-read-stream-patch-open","id":278,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 2.\n    at Proxy.mustCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-read-stream-patch-open.js:15:41\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n(node:7776) [DEP0135] DeprecationWarning: ReadStream.prototype.open() is deprecated\n(Use `node --trace-deprecation ...` to show where the warning was created)"},"time":239,"fullname":"parallel/test-fs-read-stream-patch-open","closingTestPoint":false}},{"testName":"parallel/test-runner-concurrency","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2022_vs2022-x64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-concurrency","id":656,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: Concurrency option (boolean) = true\n    # Subtest: should start the first test\n    ok 1 - should start the first test\n      ---\n      duration_ms: 11.9112\n      ...\n    # Subtest: should start before the previous test ends\n    ok 2 - should start before the previous test ends\n      ---\n      duration_ms: 0.6742\n      ...\n    1..2\nok 1 - Concurrency option (boolean) = true\n  ---\n  duration_ms: 15.6372\n  type: 'suite'\n  ...\n# Subtest: Concurrency option (boolean) = false\n    # Subtest: should start the first test\n    ok 1 - should start the first test\n      ---\n      duration_ms: 7.8341\n      ...\n    # Subtest: should start after the previous test ends\n    ok 2 - should start after the previous test ends\n      ---\n      duration_ms: 0.3896\n      ...\n    1..2\nok 2 - Concurrency option (boolean) = false\n  ---\n  duration_ms: 9.2953\n  type: 'suite'\n  ...\n# Subtest: concurrency: true implies Infinity\n    # Subtest: should run test 0 concurrently\n    ok 1 - should run test 0 concurrently\n      ---\n      duration_ms: 25.7318\n      ...\n    # Subtest: should run test 1 concurrently\n    ok 2 - should run test 1 concurrently\n      ---\n      duration_ms: 25.8724\n      ...\n    # Subtest: should run test 2 concurrently\n    ok 3 - should run test 2 concurrently\n      ---\n      duration_ms: 26.1683\n      ...\n    # Subtest: should run test 3 concurrently\n    ok 4 - should run test 3 concurrently\n      ---\n      duration_ms: 26.9422\n      ...\n    # Subtest: should run test 4 concurrently\n    ok 5 - should run test 4 concurrently\n      ---\n      duration_ms: 27.3484\n      ...\n    # Subtest: should run test 5 concurrently\n    ok 6 - should run test 5 concurrently\n      ---\n      duration_ms: 28.205\n      ...\n    # Subtest: should run test 6 concurrently\n    ok 7 - should run test 6 concurrently\n      ---\n      duration_ms: 28.7176\n      ...\n    # Subtest: should run test 7 concurrently\n    ok 8 - should run test 7 concurrently\n      ---\n      duration_ms: 29.2385\n      ...\n    # Subtest: should run test 8 concurrently\n    ok 9 - should run test 8 concurrently\n      ---\n      duration_ms: 29.8587\n      ...\n    # Subtest: should run test 9 concurrently\n    ok 10 - should run test 9 concurrently\n      ---\n      duration_ms: 30.4401\n      ...\n    # Subtest: should run test 10 concurrently\n    ok 11 - should run test 10 concurrently\n      ---\n      duration_ms: 31.0534\n      ...\n    # Subtest: should run test 11 concurrently\n    ok 12 - should run test 11 concurrently\n      ---\n      duration_ms: 31.639\n      ...\n    # Subtest: should run test 12 concurrently\n    ok 13 - should run test 12 concurrently\n      ---\n      duration_ms: 32.2232\n      ...\n    # Subtest: should run test 13 concurrently\n    ok 14 - should run test 13 concurrently\n      ---\n      duration_ms: 32.7889\n      ...\n    # Subtest: should run test 14 concurrently\n    ok 15 - should run test 14 concurrently\n      ---\n      duration_ms: 33.6416\n      ...\n    # Subtest: should run test 15 concurrently\n    ok 16 - should run test 15 concurrently\n      ---\n      duration_ms: 35.3694\n      ...\n    # Subtest: should run test 16 concurrently\n    ok 17 - should run test 16 concurrently\n      ---\n      duration_ms: 35.8863\n      ...\n    # Subtest: should run test 17 concurrently\n    ok 18 - should run test 17 concurrently\n      ---\n      duration_ms: 38.3773\n      ...\n    # Subtest: should run test 18 concurrently\n    ok 19 - should run test 18 concurrently\n      ---\n      duration_ms: 38.8822\n      ...\n    # Subtest: should run test 19 concurrently\n    ok 20 - should run test 19 concurrently\n      ---\n      duration_ms: 39.4596\n      ...\n    # Subtest: should run test 20 concurrently\n    ok 21 - should run test 20 concurrently\n      ---\n      duration_ms: 40.2106\n      ...\n    # Subtest: should run test 21 concurrently\n    ok 22 - should run test 21 concurrently\n      ---\n      duration_ms: 41.0402\n      ...\n    # Subtest: should run test 22 concurrently\n    ok 23 - should run test 22 concurrently\n      ---\n      duration_ms: 42.0539\n      ...\n    # Subtest: should run test 23 concurrently\n    ok 24 - should run test 23 concurrently\n      ---\n      duration_ms: 43.087\n      ...\n    # Subtest: should run test 24 concurrently\n    ok 25 - should run test 24 concurrently\n      ---\n      duration_ms: 43.8332\n      ...\n    # Subtest: should run test 25 concurrently\n    ok 26 - should run test 25 concurrently\n      ---\n      duration_ms: 44.3124\n      ...\n    # Subtest: should run test 26 concurrently\n    ok 27 - should run test 26 concurrently\n      ---\n      duration_ms: 44.7415\n      ...\n    # Subtest: should run test 27 concurrently\n    ok 28 - should run test 27 concurrently\n      ---\n      duration_ms: 45.3012\n      ...\n    # Subtest: should run test 28 concurrently\n    ok 29 - should run test 28 concurrently\n      ---\n      duration_ms: 45.8067\n      ...\n    # Subtest: should run test 29 concurrently\n    ok 30 - should run test 29 concurrently\n      ---\n      duration_ms: 46.2394\n      ...\n    # Subtest: should run test 30 concurrently\n    ok 31 - should run test 30 concurrently\n      ---\n      duration_ms: 46.7578\n      ...\n    # Subtest: should run test 31 concurrently\n    ok 32 - should run test 31 concurrently\n      ---\n      duration_ms: 47.2626\n      ...\n    # Subtest: should run test 32 concurrently\n    ok 33 - should run test 32 concurrently\n      ---\n      duration_ms: 47.8466\n      ...\n    # Subtest: should run test 33 concurrently\n    ok 34 - should run test 33 concurrently\n      ---\n      duration_ms: 48.3441\n      ...\n    # Subtest: should run test 34 concurrently\n    ok 35 - should run test 34 concurrently\n      ---\n      duration_ms: 48.8741\n      ...\n    # Subtest: should run test 35 concurrently\n    ok 36 - should run test 35 concurrently\n      ---\n      duration_ms: 49.2941\n      ...\n    # Subtest: should run test 36 concurrently\n    ok 37 - should run test 36 concurrently\n      ---\n      duration_ms: 49.7827\n      ...\n    # Subtest: should run test 37 concurrently\n    ok 38 - should run test 37 concurrently\n      ---\n      duration_ms: 50.2187\n      ...\n    # Subtest: should run test 38 concurrently\n    ok 39 - should run test 38 concurrently\n      ---\n      duration_ms: 50.9983\n      ...\n    # Subtest: should run test 39 concurrently\n    ok 40 - should run test 39 concurrently\n      ---\n      duration_ms: 51.7039\n      ...\n    1..40\nok 3 - concurrency: true implies Infinity\n  ---\n  duration_ms: 62.3397\n  type: 'suite'\n  ...\n# Subtest: suite 1\n    # Subtest: 1\n    ok 1 - 1\n      ---\n      duration_ms: 0.5614\n      ...\n    # Subtest: 2\n    ok 2 - 2\n      ---\n      duration_ms: 0.1772\n      ...\n    # Subtest: nested\n        # Subtest: nested 1\n        ok 1 - nested 1\n          ---\n          duration_ms: 0.3124\n          ...\n        # Subtest: nested 2\n        ok 2 - nested 2\n          ---\n          duration_ms: 0.2066\n          ...\n        1..2\n    ok 3 - nested\n      ---\n      duration_ms: 0.9583\n      type: 'suite'\n      ...\n    1..3\nok 4 - suite 1\n  ---\n  duration_ms: 2.3411\n  type: 'suite'\n  ...\n# Subtest: test\n    # Subtest: test1\n    ok 1 - test1\n      ---\n      duration_ms: 0.2523\n      ...\n    # Subtest: test 2\n    ok 2 - test 2\n      ---\n      duration_ms: 0.1972\n      ...\n    1..2\nok 5 - test\n  ---\n  duration_ms: 1.7311\n  ...\n# Subtest: suite 2\n    # Subtest: should run after other suites\n    ok 1 - should run after other suites\n      ---\n      duration_ms: 1.6283\n      ...\n    1..1\nok 6 - suite 2\n  ---\n  duration_ms: 1.9082\n  type: 'suite'\n  ...\n# Subtest: --test multiple files\nnot ok 7 - --test multiple files\n  ---\n  duration_ms: 479.909\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-concurrency.js:89:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-concurrency.js:96:10)\n    process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    async Test.run (node:internal/test_runner/test:632:9)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n1..7\n# tests 53\n# suites 6\n# pass 52\n# fail 1\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 603.7244\n### 0"},"time":930.988,"fullname":"parallel/test-runner-concurrency","closingTestPoint":false}},{"testName":"parallel/test-runner-reporters","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2022_vs2022-x64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-reporters","id":661,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: node:test reporters\n    # Subtest: should default to outputing TAP to stdout\n    not ok 1 - should default to outputing TAP to stdout\n      ---\n      duration_ms: 4749.2232\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:16:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:18:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should default destination to stdout when passing a single reporter\n    ok 2 - should default destination to stdout when passing a single reporter\n      ---\n      duration_ms: 4378.9118\n      ...\n    # Subtest: should throw when passing reporters without a destination\n    ok 3 - should throw when passing reporters without a destination\n      ---\n      duration_ms: 3952.7811\n      ...\n    # Subtest: should throw when passing a destination without a reporter\n    ok 4 - should throw when passing a destination without a reporter\n      ---\n      duration_ms: 3819.2801\n      ...\n    # Subtest: should support stdout as a destination\n    ok 5 - should support stdout as a destination\n      ---\n      duration_ms: 3713.1462\n      ...\n    # Subtest: should support stderr as a destination\n    ok 6 - should support stderr as a destination\n      ---\n      duration_ms: 3323.2545\n      ...\n    # Subtest: should support a file as a destination\n    ok 7 - should support a file as a destination\n      ---\n      duration_ms: 3025.7126\n      ...\n    # Subtest: should disallow using v8-serializer as reporter\n    ok 8 - should disallow using v8-serializer as reporter\n      ---\n      duration_ms: 2718.512\n      ...\n    # Subtest: should support multiple reporters\n    ok 9 - should support multiple reporters\n      ---\n      duration_ms: 2581.6223\n      ...\n    # Subtest: should support a 'js' file as a custom reporter\n    not ok 10 - should support a 'js' file as a custom reporter\n      ---\n      duration_ms: 2259.8918\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'custom.js {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'custom.js {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:99:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a 'cjs' file as a custom reporter\n    not ok 11 - should support a 'cjs' file as a custom reporter\n      ---\n      duration_ms: 1918.493\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:97:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a 'mjs' file as a custom reporter\n    not ok 12 - should support a 'mjs' file as a custom reporter\n      ---\n      duration_ms: 1594.2458\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'custom.mjs {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'custom.mjs {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:99:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a custom reporter from node_modules\n    not ok 13 - should support a custom reporter from node_modules\n      ---\n      duration_ms: 1282.753\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:104:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /^package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:109:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a custom ESM reporter from node_modules\n    not ok 14 - should support a custom ESM reporter from node_modules\n      ---\n      duration_ms: 974.0442\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:115:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /^package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:120:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should throw when reporter setup throws asynchronously\n    ok 15 - should throw when reporter setup throws asynchronously\n      ---\n      duration_ms: 661.9559\n      ...\n    # Subtest: should throw when reporter errors\n    not ok 16 - should throw when reporter errors\n      ---\n      duration_ms: 519.2134\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:138:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        \n        1 !== 7\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: 7\n      actual: 1\n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:142:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should throw when reporter errors asynchronously\n    not ok 17 - should throw when reporter errors asynchronously\n      ---\n      duration_ms: 190.4207\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:148:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /Emitted 'error' event on Duplex instance/. Input:\n        \n        '### 0\\r\\n' +\n          '### 0\\r\\n' +\n          '### 0\\r\\n' +\n          'node:internal/test_runner/harness:50\\r\\n' +\n          '      throw err;\\r\\n' +\n          '      ^\\r\\n' +\n          '\\r\\n' +\n          'Error: Reporting error\\r\\n' +\n          '    at Immediate.<anonymous> (C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\fixtures\\\\test-runner\\\\custom_reporters\\\\throwing-async.js:6:11)\\r\\n' +\n          '    at process.processImmediate (node:internal/timers:478:21)\\r\\n' +\n          '\\r\\n' +\n          'Node.js v22.0.0-pre\\r\\n'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: |-\n        ### 0\n        ### 0\n        ### 0\n        node:internal/test_runner/harness:50\n              throw err;\n              ^\n        \n        Error: Reporting error\n            at Immediate.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\test-runner\\custom_reporters\\throwing-async.js:6:11)\n            at process.processImmediate (node:internal/timers:478:21)\n        \n        Node.js v22.0.0-pre\n        \n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:156:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    1..17\nnot ok 1 - node:test reporters\n  ---\n  duration_ms: 4758.4731\n  type: 'suite'\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:15:1'\n  failureType: 'subtestsFailed'\n  error: '8 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 17\n# suites 1\n# pass 9\n# fail 8\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 4807.2845\n### 0"},"time":5212.376,"fullname":"parallel/test-runner-reporters","closingTestPoint":false}},{"testName":"parallel/test-stream-pipeline","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2022_vs2022-x64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-pipeline","id":701,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\nnode:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'The operation was aborted'\n- 'kaboom'\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-pipeline.js:792:12\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15\n    at node:internal/util:522:12\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'The operation was aborted',\n  expected: 'kaboom',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":790.003,"fullname":"parallel/test-stream-pipeline","closingTestPoint":false}},{"testName":"parallel/test-fs-write-stream-patch-open","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-5","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-fs-write-stream-patch-open","id":315,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 2.\n    at Proxy.mustCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-write-stream-patch-open.js:34:42\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n(node:4240) [DEP0135] DeprecationWarning: WriteStream.prototype.open() is deprecated\n(Use `node --trace-deprecation ...` to show where the warning was created)\nnode:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n1 !== 0\n\n    at ChildProcess.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-write-stream-patch-open.js:18:12)\n    at ChildProcess.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at ChildProcess.emit (node:events:519:28)\n    at ChildProcess._handle.onexit (node:internal/child_process:294:12) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":354.998,"fullname":"parallel/test-fs-write-stream-patch-open","closingTestPoint":false}},{"testName":"parallel/test-runner-cli","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-5","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-cli","id":649,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '### 0\\r\\n'\n- ''\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-cli.js:29:10)\n    at Module._compile (node:internal/modules/cjs/loader:1375:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1434:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '### 0\\r\\n',\n  expected: '',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":777.995,"fullname":"parallel/test-runner-cli","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-5","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":651,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    not ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 1391.5641\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: promise timeout signal\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: promise timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - promise timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: promise abort signal\n        not ok 2 - promise abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 3 - callback timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback abort signal\n        not ok 4 - callback abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..4\n        # tests 22\n        # suites 0\n        # pass 8\n        # fail 0\n        # cancelled 14\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: promise timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - promise timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: promise abort signal\n        not ok 2 - promise abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 3 - callback timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback abort signal\n        not ok 4 - callback abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..4\n        # tests 22\n        # suites 0\n        # pass 8\n        # fail 0\n        # cancelled 14\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 0)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    not ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 1725.3633\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe timeout signal\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - describe timeout signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe abort signal\n        not ok 2 - describe abort signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..2\n        # tests 9\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 5\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - describe timeout signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe abort signal\n        not ok 2 - describe abort signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..2\n        # tests 9\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 5\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 1)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    not ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 803.9632\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'before\\n' +\n            '2.1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        before\n        2.1\n        2.2\n        after\n        beforeEach\n        4.1\n        afterEach\n        4.2\n        TAP version 13\n        # Subtest: 1 before describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 1 - 1 before describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 2 after describe\n            # Subtest: test 1\n            ok 1 - test 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: test 2\n            ok 2 - test 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - 2 after describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 3 beforeEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 3 - 3 beforeEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: 4 afterEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - 4 afterEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..4\n        # tests 8\n        # suites 4\n        # pass 2\n        # fail 4\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        before\n        2.1\n        2.2\n        after\n        beforeEach\n        4.1\n        afterEach\n        4.2\n        TAP version 13\n        # Subtest: 1 before describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 1 - 1 before describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 2 after describe\n            # Subtest: test 1\n            ok 1 - test 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: test 2\n            ok 2 - test 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - 2 after describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 3 beforeEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 3 - 3 beforeEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: 4 afterEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - 4 afterEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..4\n        # tests 8\n        # suites 4\n        # pass 2\n        # fail 4\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 2)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    not ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 1369.11\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '    not ok 1 - sync throw fails at first\\n' +\n            '      ---\\n' +\n        +   '     '... 7362 more characters\n        -   '     '... 7356 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync todo\n        not ok 3 - sync todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):4'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync todo with message\n        not ok 4 - sync todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: mixing describe/it and test should work\n        ok 11 - mixing describe/it and test should work\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 12 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 13 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: async assertion fail\n        not ok 14 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 15 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 16 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 17 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 18 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 19 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 20 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 21 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: mixing describe/it and test should work\n            ok 2 - mixing describe/it and test should work\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 22 - subtest sync throw fail\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 23 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 24 - level 0a\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: custom inspect symbol fail\n        not ok 49 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 50 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 51 - subtest sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: describe sync throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 52 - describe sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe async throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 53 - describe async throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: timeouts\n            # Subtest: timed out async test\n            not ok 1 - timed out async test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: timed out callback test\n            not ok 2 - timed out callback test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: large timeout async test is ok\n            ok 3 - large timeout async test is ok\n              ---\n              duration_ms: *\n              ...\n            # Subtest: large timeout callback test is ok\n            ok 4 - large timeout callback test is ok\n              ---\n              duration_ms: *\n              ...\n            1..4\n        not ok 54 - timeouts\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: successful thenable\n            # Subtest: successful thenable\n            ok 1 - successful thenable\n              ---\n              duration_ms: *\n              ...\n            # Subtest: rejected thenable\n            not ok 2 - rejected thenable\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'custom error'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n              ...\n            1..2\n        not ok 55 - successful thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: rejected thenable\n        not ok 56 - rejected thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: async describe function\n            # Subtest: it inside describe 1\n            ok 1 - it inside describe 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: it inside describe 2\n            ok 2 - it inside describe 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: inner describe\n                # Subtest: it inside inner describe\n                ok 1 - it inside inner describe\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 3 - inner describe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 57 - async describe function\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest fail\n        not ok 58 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):5'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..58\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 67\n        # suites 11\n        # pass 31\n        # fail 19\n        # cancelled 4\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync todo\n        not ok 3 - sync todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):4'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync todo with message\n        not ok 4 - sync todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: mixing describe/it and test should work\n        ok 11 - mixing describe/it and test should work\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 12 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 13 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: async assertion fail\n        not ok 14 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 15 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 16 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 17 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 18 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 19 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 20 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 21 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: mixing describe/it and test should work\n            ok 2 - mixing describe/it and test should work\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 22 - subtest sync throw fail\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 23 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 24 - level 0a\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: custom inspect symbol fail\n        not ok 49 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 50 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 51 - subtest sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: describe sync throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 52 - describe sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe async throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 53 - describe async throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: timeouts\n            # Subtest: timed out async test\n            not ok 1 - timed out async test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: timed out callback test\n            not ok 2 - timed out callback test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: large timeout async test is ok\n            ok 3 - large timeout async test is ok\n              ---\n              duration_ms: *\n              ...\n            # Subtest: large timeout callback test is ok\n            ok 4 - large timeout callback test is ok\n              ---\n              duration_ms: *\n              ...\n            1..4\n        not ok 54 - timeouts\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: successful thenable\n            # Subtest: successful thenable\n            ok 1 - successful thenable\n              ---\n              duration_ms: *\n              ...\n            # Subtest: rejected thenable\n            not ok 2 - rejected thenable\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'custom error'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n              ...\n            1..2\n        not ok 55 - successful thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: rejected thenable\n        not ok 56 - rejected thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: async describe function\n            # Subtest: it inside describe 1\n            ok 1 - it inside describe 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: it inside describe 2\n            ok 2 - it inside describe 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: inner describe\n                # Subtest: it inside inner describe\n                ok 1 - it inside inner describe\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 3 - inner describe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 57 - async describe function\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest fail\n        not ok 58 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):5'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..58\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 67\n        # suites 11\n        # pass 31\n        # fail 19\n        # cancelled 4\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 3)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    not ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 779.7558\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: nested - no tests\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: nested - no tests\n            # Subtest: nested\n                # Subtest: nested\n                ok 1 - nested\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 1 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..1\n        ok 1 - nested - no tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 1\n        # suites 2\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: nested - no tests\n            # Subtest: nested\n                # Subtest: nested\n                ok 1 - nested\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 1 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..1\n        ok 1 - nested - no tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 1\n        # suites 2\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 4)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks.js\n    not ok 6 - test-runner/output/hooks.js\n      ---\n      duration_ms: 767.0748\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe hooks\\n' +\n        ...\n            '        *\\n' +\n            '        *\\n' +\n        +   '        *'... 1160 more characters\n        -   '        *'... 1154 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 2 - before throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'before'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: after throws\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 3 - after throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'after'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - beforeEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 5 - afterEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 6 - afterEach when test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 7 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: test hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 8 - test hooks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: t.before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 9 - t.before throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 10 - t.beforeEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 11 - t.afterEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 12 - afterEach when test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 13 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.after() is called if test body throws\n        not ok 14 - t.after() is called if test body throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'bye'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # - after() called\n        1..14\n        # before 1 called\n        # before 2 called\n        # after 1 called\n        # after 2 called\n        # tests 38\n        # suites 8\n        # pass 14\n        # fail 22\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 2 - before throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'before'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: after throws\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 3 - after throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'after'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - beforeEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 5 - afterEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 6 - afterEach when test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 7 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: test hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 8 - test hooks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: t.before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 9 - t.before throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 10 - t.beforeEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 11 - t.afterEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 12 - afterEach when test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 13 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.after() is called if test body throws\n        not ok 14 - t.after() is called if test body throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'bye'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # - after() called\n        1..14\n        # before 1 called\n        # before 2 called\n        # after 1 called\n        # after 2 called\n        # tests 38\n        # suites 8\n        # pass 14\n        # fail 22\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 5)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    not ok 7 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 1327.1661\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' describe hooks\\n' +\n            '   1 (*ms)\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        +   '### 0\\n'\n        -   '      *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         describe hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         describe hooks (*ms)\n        \n         before throws\n           1\n            'test did not finish before its parent and was cancelled'\n        \n           2\n            'test did not finish before its parent and was cancelled'\n        \n         before throws (*ms)\n        \n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         after throws\n           1 (*ms)\n           2 (*ms)\n         after throws (*ms)\n        \n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         beforeEach throws (*ms)\n        \n         afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         test hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         test hooks (*ms)\n        \n         t.before throws\n           1 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.before throws (*ms)\n        \n         t.beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.beforeEach throws (*ms)\n        \n         t.afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n         - after() called\n         before 1 called\n         before 2 called\n         after 1 called\n         after 2 called\n         tests 38\n         suites 8\n         pass 14\n         fail 22\n         cancelled 2\n         skipped 0\n         todo 0\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         1\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         2\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         before throws (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         after throws (*ms)\n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n      actual: |-\n         describe hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         describe hooks (*ms)\n        \n         before throws\n           1\n            'test did not finish before its parent and was cancelled'\n        \n           2\n            'test did not finish before its parent and was cancelled'\n        \n         before throws (*ms)\n        \n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         after throws\n           1 (*ms)\n           2 (*ms)\n         after throws (*ms)\n        \n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         beforeEach throws (*ms)\n        \n         afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         test hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         test hooks (*ms)\n        \n         t.before throws\n           1 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.before throws (*ms)\n        \n         t.beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.beforeEach throws (*ms)\n        \n         t.afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n         - after() called\n         before 1 called\n         before 2 called\n         after 1 called\n         after 2 called\n         tests 38\n         suites 8\n         pass 14\n         fail 22\n         cancelled 2\n         skipped 0\n         todo 0\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         1\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         2\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         before throws (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         after throws (*ms)\n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 6)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    not ok 8 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 1924.9933\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'gonna timeout\\n' +\n            'TAP version 13\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        gonna timeout\n        TAP version 13\n        not gonna timeout\n        before each test second 2\n        after each test first 0\n        gonna timeout\n        # Subtest: before each timeout\n            # Subtest: first describe first test\n            not ok 1 - first describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running beforeEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: first describe second test\n            ok 2 - first describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 1 - before each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        after each test second 1\n        not gonna timeout\n        # Subtest: after each timeout\n            # Subtest: second describe first test\n            not ok 1 - second describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running afterEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: second describe second test\n            ok 2 - second describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - after each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..2\n        # tests 4\n        # suites 2\n        # pass 2\n        # fail 2\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        gonna timeout\n        TAP version 13\n        not gonna timeout\n        before each test second 2\n        after each test first 0\n        gonna timeout\n        # Subtest: before each timeout\n            # Subtest: first describe first test\n            not ok 1 - first describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running beforeEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: first describe second test\n            ok 2 - first describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 1 - before each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        after each test second 1\n        not gonna timeout\n        # Subtest: after each timeout\n            # Subtest: second describe first test\n            not ok 1 - second describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running afterEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: second describe second test\n            ok 2 - second describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - after each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..2\n        # tests 4\n        # suites 2\n        # pass 2\n        # fail 2\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 7)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    not ok 9 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 1114.6042\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe hooks with no global tests\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe hooks with no global tests\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks with no global tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 4\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe hooks with no global tests\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks with no global tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 4\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 8)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    not ok 10 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 716.7864\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: 1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 9)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    not ok 11 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 699.4395\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: 1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 10)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    not ok 12 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 1020.8214\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'this is a test\\n' +\n            'TAP version 13\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        this is a test\n        TAP version 13\n        # Subtest: this is a test\n        ok 1 - this is a test\n          ---\n          duration_ms: *\n          ...\n        not ok 2 - /test/fixtures/test-runner/output/global_after_should_fail_the_test.js\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/global_after_should_fail_the_test.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'this should fail the test'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..1\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        this is a test\n        TAP version 13\n        # Subtest: this is a test\n        ok 1 - this is a test\n          ---\n          duration_ms: *\n          ...\n        not ok 2 - /test/fixtures/test-runner/output/global_after_should_fail_the_test.js\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/global_after_should_fail_the_test.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'this should fail the test'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..1\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 11)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 13 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 1020.7151\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 12)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 14 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 1441.7539\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    not ok 15 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 716.6534\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: only = undefined\\n' +\n        ...\n            '# skipped 25\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: only = undefined\n        ok 1 - only = undefined # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = string\n        ok 2 - only = undefined, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = true\n        ok 3 - only = undefined, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = false\n        ok 4 - only = undefined, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false\n        ok 5 - only = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = string\n        ok 6 - only = false, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = true\n        ok 7 - only = false, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = false\n        ok 8 - only = false, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = string\n        ok 9 - only = true, skip = string # SKIP skip message\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = true\n        ok 10 - only = true, skip = true # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, with subtests\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 1\n            ok 3 - skipped subtest 1 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 2\n            ok 4 - skipped subtest 2 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 3\n            ok 5 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 4\n                # Subtest: running sub-subtest 1\n                ok 1 - running sub-subtest 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: running sub-subtest 2\n                ok 2 - running sub-subtest 2\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 1\n                ok 3 - skipped sub-subtest 1 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 2\n                ok 4 - skipped sub-subtest 2 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                1..4\n            ok 6 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 3\n            ok 7 - skipped subtest 3 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 4\n            ok 8 - skipped subtest 4 # SKIP\n              ---\n              duration_ms: *\n              ...\n            1..8\n        ok 11 - only = true, with subtests\n          ---\n          duration_ms: *\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: `it` subtest 1 should run\n            ok 1 - `it` subtest 1 should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 should not run\n            ok 2 - `it` subtest 2 should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 12 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with a mixture of subtests\n            # Subtest: `it` subtest 1\n            ok 1 - `it` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` async subtest 1\n            ok 2 - `it` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=true\n            ok 3 - `it` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=false\n            ok 4 - `it` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 3 skip\n            ok 5 - `it` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 4 todo\n            ok 6 - `it` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 1\n            ok 7 - `test` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` async subtest 1\n            ok 8 - `test` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=true\n            ok 9 - `test` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=false\n            ok 10 - `test` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 3 skip\n            ok 11 - `test` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 4 todo\n            ok 12 - `test` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..12\n        ok 13 - describe only = true, with a mixture of subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: subtest should run\n            ok 1 - subtest should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: async subtest should not run\n            ok 2 - async subtest should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: subtest should be skipped\n            ok 3 - subtest should be skipped # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 14 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..14\n        # tests 40\n        # suites 3\n        # pass 15\n        # fail 0\n        # cancelled 0\n        # skipped 25\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: only = undefined\n        ok 1 - only = undefined # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = string\n        ok 2 - only = undefined, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = true\n        ok 3 - only = undefined, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = false\n        ok 4 - only = undefined, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false\n        ok 5 - only = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = string\n        ok 6 - only = false, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = true\n        ok 7 - only = false, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = false\n        ok 8 - only = false, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = string\n        ok 9 - only = true, skip = string # SKIP skip message\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = true\n        ok 10 - only = true, skip = true # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, with subtests\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 1\n            ok 3 - skipped subtest 1 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 2\n            ok 4 - skipped subtest 2 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 3\n            ok 5 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 4\n                # Subtest: running sub-subtest 1\n                ok 1 - running sub-subtest 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: running sub-subtest 2\n                ok 2 - running sub-subtest 2\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 1\n                ok 3 - skipped sub-subtest 1 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 2\n                ok 4 - skipped sub-subtest 2 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                1..4\n            ok 6 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 3\n            ok 7 - skipped subtest 3 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 4\n            ok 8 - skipped subtest 4 # SKIP\n              ---\n              duration_ms: *\n              ...\n            1..8\n        ok 11 - only = true, with subtests\n          ---\n          duration_ms: *\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: `it` subtest 1 should run\n            ok 1 - `it` subtest 1 should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 should not run\n            ok 2 - `it` subtest 2 should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 12 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with a mixture of subtests\n            # Subtest: `it` subtest 1\n            ok 1 - `it` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` async subtest 1\n            ok 2 - `it` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=true\n            ok 3 - `it` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=false\n            ok 4 - `it` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 3 skip\n            ok 5 - `it` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 4 todo\n            ok 6 - `it` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 1\n            ok 7 - `test` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` async subtest 1\n            ok 8 - `test` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=true\n            ok 9 - `test` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=false\n            ok 10 - `test` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 3 skip\n            ok 11 - `test` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 4 todo\n            ok 12 - `test` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..12\n        ok 13 - describe only = true, with a mixture of subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: subtest should run\n            ok 1 - subtest should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: async subtest should not run\n            ok 2 - async subtest should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: subtest should be skipped\n            ok 3 - subtest should be skipped # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 14 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..14\n        # tests 40\n        # suites 3\n        # pass 15\n        # fail 0\n        # cancelled 0\n        # skipped 25\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 14)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 16 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 1928.2466\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    ok 17 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 2030.087\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    not ok 18 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 745.5875\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '✔ should pass (*ms)\\n' +\n            'ℹ tests 1\\n' +\n        ...\n            'ℹ skipped 0\\n' +\n            'ℹ todo 0\\n' +\n        +   'ℹ duration_ms *\\n' +\n        +   '### 0\\n'\n        -   'ℹ duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        ✔ should pass (*ms)\n        ℹ tests 1\n        ℹ suites 0\n        ℹ pass 1\n        ℹ fail 0\n        ℹ cancelled 0\n        ℹ skipped 0\n        ℹ todo 0\n        ℹ duration_ms *\n        \n      actual: |-\n        ✔ should pass (*ms)\n        ℹ tests 1\n        ℹ suites 0\n        ℹ pass 1\n        ℹ fail 0\n        ℹ cancelled 0\n        ℹ skipped 0\n        ℹ todo 0\n        ℹ duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 17)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    not ok 19 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 1994.4202\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' sync pass todo (*ms) # TODO\\n' +\n            ' sync pass todo with message (*ms) # this is a passing todo\\n' +\n        ...\n            '*\\n' +\n            ' sync throw fails at first (*ms)\\n' +\n        +   '  Error: thrown from subtest sync'... 1110 more characters\n        -   '  Error: thrown from subtest sync'... 1104 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      actual: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 18)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    not ok 20 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 2312.7669\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' sync pass todo (*ms) # TODO\\n' +\n            ' sync pass todo with message (*ms) # this is a passing todo\\n' +\n        ...\n            ' Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\\n' +\n            ' Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\\n' +\n        +   '### 0\\n' +\n        +   ' tests 76\\n' +\n        +   ' suites 0\\n' +\n        +   ' pass 35\\n' +\n        +   ' fail 25\\n' +\n        +   ' cancelled 3\\n' +\n        +   ' skipped 9\\n' +\n        +   ' todo 4\\n' +\n        +   ' duration_ms *\\n' +\n        +   '\\n' +\n        +   ' failing tests:\\n' +\n        +   '\\n' +\n        +   '*\\n' +\n        +   ' sync fail todo (*ms) # TODO\\n' +\n        +   '  Error: thrown from sync fail todo\\n' +\n        -   ' tests 76\\n' +\n        -   ' suites 0\\n' +\n        -   ' pass 35\\n' +\n        -   ' fail 25\\n' +\n        -   ' cancelled 3\\n' +\n        -   ' skipped 9\\n' +\n        -   ' todo 4\\n' +\n        -   ' duration_ms *\\n' +\n        -   '\\n' +\n        -   ' failing tests:\\n' +\n        -   '\\n' +\n        -   '*\\n' +\n        -   ' sync fail todo (*ms) # TODO\\n' +\n        -   '  Error: thrown from sync fail todo\\n' +\n        -   '      *\\n' +\n            '      *\\n' +\n            '      *\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        +   '\\n' +\n        +   '*\\n' +\n        +   ' sync fail todo with message (*ms) # this is a failing todo\\n' +\n        +   '  Error: thrown from sync fail todo with message\\n' +\n        -   '\\n' +\n        -   '*\\n' +\n        -   ' sync fail todo with message (*ms) # this is a failing todo\\n' +\n        -   '  Error: thrown from sync fail todo with message\\n' +\n        -   '      *\\n' +\n            '      *\\n' +\n            '      *\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        ...\n        -   '\\n' +\n        ...\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      actual: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        ### 0\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 21 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 2053.9309\n      ...\n    # Subtest: test-runner/output/output.js\n    not ok 22 - test-runner/output/output.js\n      ---\n      duration_ms: 1323.7695\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '      ...\\n' +\n            \"    # 'only' and 'runOnly' require the --test-only command-line option.\\n\" +\n        +   '    '... 6851 more characters\n        -   '    '... 6845 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..62\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 76\n        # suites 0\n        # pass 35\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..62\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 76\n        # suites 0\n        # pass 35\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 21)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    not ok 23 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 2249.6692\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '      ...\\n' +\n            \"    # 'only' and 'runOnly' require the --test-only command-line option.\\n\" +\n        +   '    '... 6941 more characters\n        -   '    '... 6913 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Subtest: last test\n        ok 63 - last test\n          ---\n          duration_ms: *\n          ...\n        1..63\n        # tests 77\n        # suites 0\n        # pass 36\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # /#/#/# 0\n        # Subtest: last test\n        ok 63 - last test\n          ---\n          duration_ms: *\n          ...\n        # /#/#/# 0\n        1..63\n        # tests 77\n        # suites 0\n        # pass 36\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 22)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    not ok 24 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 1184.0542\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: top level test disabled\\n' +\n        ...\n            '# skipped 8\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: top level test disabled\n        ok 1 - top level test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test disabled\n        ok 2 - top level skipped test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test enabled\n        ok 3 - top level skipped test enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it enabled\n        ok 4 - top level it enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it disabled\n        ok 5 - top level it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it disabled\n        ok 6 - top level skipped it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it enabled\n        ok 7 - top level skipped it enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe never disabled\n        ok 8 - top level describe never disabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe disabled\n        ok 9 - top level skipped describe disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe enabled\n        ok 10 - top level skipped describe enabled # SKIP\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level runs because name includes PaTtErN\n        ok 11 - top level runs because name includes PaTtErN\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level test enabled\n            # Subtest: nested test runs because name includes PATTERN\n            ok 1 - nested test runs because name includes PATTERN\n              ---\n              duration_ms: *\n              ...\n            1..1\n        ok 12 - top level test enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe enabled\n            # Subtest: nested it not disabled\n            ok 1 - nested it not disabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested it enabled\n            ok 2 - nested it enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested describe not disabled\n            ok 3 - nested describe not disabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            # Subtest: nested describe enabled\n                # Subtest: is enabled\n                ok 1 - is enabled\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 4 - nested describe enabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..4\n        ok 13 - top level describe enabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: yes\n            # Subtest: no\n            ok 1 - no\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 14 - yes\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: no\n            # Subtest: no\n            ok 1 - no # SKIP test name does not match pattern\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no # SKIP test name does not match pattern\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 15 - no\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..15\n        # tests 21\n        # suites 10\n        # pass 13\n        # fail 0\n        # cancelled 0\n        # skipped 8\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: top level test disabled\n        ok 1 - top level test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test disabled\n        ok 2 - top level skipped test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test enabled\n        ok 3 - top level skipped test enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it enabled\n        ok 4 - top level it enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it disabled\n        ok 5 - top level it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it disabled\n        ok 6 - top level skipped it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it enabled\n        ok 7 - top level skipped it enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe never disabled\n        ok 8 - top level describe never disabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe disabled\n        ok 9 - top level skipped describe disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe enabled\n        ok 10 - top level skipped describe enabled # SKIP\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level runs because name includes PaTtErN\n        ok 11 - top level runs because name includes PaTtErN\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level test enabled\n            # Subtest: nested test runs because name includes PATTERN\n            ok 1 - nested test runs because name includes PATTERN\n              ---\n              duration_ms: *\n              ...\n            1..1\n        ok 12 - top level test enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe enabled\n            # Subtest: nested it not disabled\n            ok 1 - nested it not disabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested it enabled\n            ok 2 - nested it enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested describe not disabled\n            ok 3 - nested describe not disabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            # Subtest: nested describe enabled\n                # Subtest: is enabled\n                ok 1 - is enabled\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 4 - nested describe enabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..4\n        ok 13 - top level describe enabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: yes\n            # Subtest: no\n            ok 1 - no\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 14 - yes\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: no\n            # Subtest: no\n            ok 1 - no # SKIP test name does not match pattern\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no # SKIP test name does not match pattern\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 15 - no\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..15\n        # tests 21\n        # suites 10\n        # pass 13\n        # fail 0\n        # cancelled 0\n        # skipped 8\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    not ok 25 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 1058.7678\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: enabled and only\\n' +\n        ...\n            '# skipped 3\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: enabled and only\n            # Subtest: enabled\n            ok 1 - enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: disabled but parent not\n            ok 2 - disabled but parent not\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 1 - enabled and only\n          ---\n          duration_ms: *\n          ...\n        # Subtest: enabled but not only\n        ok 2 - enabled but not only # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only does not match pattern\n        ok 3 - only does not match pattern # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: not only and does not match pattern\n        ok 4 - not only and does not match pattern # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        1..4\n        # tests 6\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 3\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: enabled and only\n            # Subtest: enabled\n            ok 1 - enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: disabled but parent not\n            ok 2 - disabled but parent not\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 1 - enabled and only\n          ---\n          duration_ms: *\n          ...\n        # Subtest: enabled but not only\n        ok 2 - enabled but not only # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only does not match pattern\n        ok 3 - only does not match pattern # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: not only and does not match pattern\n        ok 4 - not only and does not match pattern # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        1..4\n        # tests 6\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 3\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 24)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 26 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 1051.4661\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 25)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 0.6288\n          ...\n        1..1\n    ok 27 - test-runner/output/default_output.js\n      ---\n      duration_ms: 184.4604\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    not ok 28 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 1414.3976\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            'ok 1 - test\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - pre\n        ok 2 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - mid\n        ok 3 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - post\n        1..3\n        # tests 3\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - pre\n        ok 2 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - mid\n        ok 3 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - post\n        1..3\n        # tests 3\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 27)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    not ok 29 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 1442.5583\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: test\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: test\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: suite\n            # Subtest: test\n            ok 1 - test\n              ---\n              duration_ms: *\n              ...\n            # Subtest: scheduled async\n            ok 2 - scheduled async\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 2 - suite\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: scheduled async\n        ok 3 - scheduled async\n          ---\n          duration_ms: *\n          ...\n        1..3\n        # tests 4\n        # suites 1\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: test\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: suite\n            # Subtest: test\n            ok 1 - test\n              ---\n              duration_ms: *\n              ...\n            # Subtest: scheduled async\n            ok 2 - scheduled async\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 2 - suite\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: scheduled async\n        ok 3 - scheduled async\n          ---\n          duration_ms: *\n          ...\n        1..3\n        # tests 4\n        # suites 1\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 28)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 1.9018\n          ...\n        1..1\n    ok 30 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 58.6426\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 1.9132\n          ...\n        1..1\n    ok 31 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 58.4428\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    not ok 32 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 933.9396\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: escaped description \\\\\\\\ \\\\# \\\\\\\\\\\\#\\\\\\\\ \\\\\\\\n \\\\\\\\t \\\\\\\\f \\\\\\\\v \\\\\\\\b \\\\\\\\r\\n' +\n        ...\n            '# skipped 1\\n' +\n            '# todo 1\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n        ok 1 - escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped skip message\n        ok 2 - escaped skip message # SKIP \\#skip\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped todo message\n        ok 3 - escaped todo message # TODO \\#todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped diagnostic\n        ok 4 - escaped diagnostic\n          ---\n          duration_ms: *\n          ...\n        # \\#diagnostic\n        1..4\n        # tests 4\n        # suites 0\n        # pass 2\n        # fail 0\n        # cancelled 0\n        # skipped 1\n        # todo 1\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n        ok 1 - escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped skip message\n        ok 2 - escaped skip message # SKIP \\#skip\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped todo message\n        ok 3 - escaped todo message # TODO \\#todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped diagnostic\n        ok 4 - escaped diagnostic\n          ---\n          duration_ms: *\n          ...\n        # \\#diagnostic\n        1..4\n        # tests 4\n        # suites 0\n        # pass 2\n        # fail 0\n        # cancelled 0\n        # skipped 1\n        # todo 1\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 31)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    not ok 33 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 935.9415\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: ok\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: ok\n        ok 1 - ok\n          ---\n          duration_ms: *\n          ...\n        1..1\n        # Warning: Could not report code coverage. Error: Failed to collect coverage\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: ok\n        ok 1 - ok\n          ---\n          duration_ms: *\n          ...\n        1..1\n        # Warning: Could not report code coverage. Error: Failed to collect coverage\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 32)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    1..33\nnot ok 1 - test runner output\n  ---\n  duration_ms: 2815.28\n  type: 'suite'\n  location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:140:1'\n  failureType: 'subtestsFailed'\n  error: '26 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 36\n# suites 1\n# pass 7\n# fail 26\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 2841.5932\n### 0"},"time":3165.992,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"parallel/test-stream-duplex-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-5","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-duplex-destroy","id":677,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:173\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-duplex-destroy.js:127\n    at Duplex.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:554:12)\n    at Duplex.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v22.0.0-pre"},"time":211,"fullname":"parallel/test-stream-duplex-destroy","closingTestPoint":false}},{"testName":"parallel/test-stream-readable-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-5","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-readable-destroy","id":692,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:173\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-readable-destroy.js:118\n    at Readable.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:554:12)\n    at Readable.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v22.0.0-pre"},"time":237,"fullname":"parallel/test-stream-readable-destroy","closingTestPoint":false}},{"testName":"parallel/test-fs-write-stream-patch-open","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-fs-write-stream-patch-open","id":314,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 2.\n    at Proxy.mustCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-write-stream-patch-open.js:34:42\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n(node:8664) [DEP0135] DeprecationWarning: WriteStream.prototype.open() is deprecated\n(Use `node --trace-deprecation ...` to show where the warning was created)\nnode:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n1 !== 0\n\n    at ChildProcess.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-write-stream-patch-open.js:18:12)\n    at ChildProcess.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at ChildProcess.emit (node:events:519:28)\n    at ChildProcess._handle.onexit (node:internal/child_process:294:12) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":327.003,"fullname":"parallel/test-fs-write-stream-patch-open","closingTestPoint":false}},{"testName":"parallel/test-runner-cli","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-cli","id":649,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '### 0\\r\\n'\n- ''\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-cli.js:29:10)\n    at Module._compile (node:internal/modules/cjs/loader:1375:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1434:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '### 0\\r\\n',\n  expected: '',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":681.008,"fullname":"parallel/test-runner-cli","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":651,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    not ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 1484.6817\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: promise timeout signal\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: promise timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - promise timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: promise abort signal\n        not ok 2 - promise abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 3 - callback timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback abort signal\n        not ok 4 - callback abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..4\n        # tests 22\n        # suites 0\n        # pass 8\n        # fail 0\n        # cancelled 14\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: promise timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - promise timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: promise abort signal\n        not ok 2 - promise abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 3 - callback timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback abort signal\n        not ok 4 - callback abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..4\n        # tests 22\n        # suites 0\n        # pass 8\n        # fail 0\n        # cancelled 14\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 0)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    not ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 1494.604\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe timeout signal\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - describe timeout signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe abort signal\n        not ok 2 - describe abort signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..2\n        # tests 9\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 5\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - describe timeout signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe abort signal\n        not ok 2 - describe abort signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..2\n        # tests 9\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 5\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 1)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    not ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 632.5371\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'before\\n' +\n            '2.1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        before\n        2.1\n        2.2\n        after\n        beforeEach\n        4.1\n        afterEach\n        4.2\n        TAP version 13\n        # Subtest: 1 before describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 1 - 1 before describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 2 after describe\n            # Subtest: test 1\n            ok 1 - test 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: test 2\n            ok 2 - test 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - 2 after describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 3 beforeEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 3 - 3 beforeEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: 4 afterEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - 4 afterEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..4\n        # tests 8\n        # suites 4\n        # pass 2\n        # fail 4\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        before\n        2.1\n        2.2\n        after\n        beforeEach\n        4.1\n        afterEach\n        4.2\n        TAP version 13\n        # Subtest: 1 before describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 1 - 1 before describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 2 after describe\n            # Subtest: test 1\n            ok 1 - test 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: test 2\n            ok 2 - test 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - 2 after describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 3 beforeEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 3 - 3 beforeEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: 4 afterEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - 4 afterEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..4\n        # tests 8\n        # suites 4\n        # pass 2\n        # fail 4\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 2)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    not ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 1462.1205\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '    not ok 1 - sync throw fails at first\\n' +\n            '      ---\\n' +\n        +   '     '... 7362 more characters\n        -   '     '... 7356 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync todo\n        not ok 3 - sync todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):4'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync todo with message\n        not ok 4 - sync todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: mixing describe/it and test should work\n        ok 11 - mixing describe/it and test should work\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 12 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 13 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: async assertion fail\n        not ok 14 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 15 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 16 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 17 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 18 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 19 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 20 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 21 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: mixing describe/it and test should work\n            ok 2 - mixing describe/it and test should work\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 22 - subtest sync throw fail\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 23 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 24 - level 0a\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: custom inspect symbol fail\n        not ok 49 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 50 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 51 - subtest sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: describe sync throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 52 - describe sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe async throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 53 - describe async throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: timeouts\n            # Subtest: timed out async test\n            not ok 1 - timed out async test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: timed out callback test\n            not ok 2 - timed out callback test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: large timeout async test is ok\n            ok 3 - large timeout async test is ok\n              ---\n              duration_ms: *\n              ...\n            # Subtest: large timeout callback test is ok\n            ok 4 - large timeout callback test is ok\n              ---\n              duration_ms: *\n              ...\n            1..4\n        not ok 54 - timeouts\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: successful thenable\n            # Subtest: successful thenable\n            ok 1 - successful thenable\n              ---\n              duration_ms: *\n              ...\n            # Subtest: rejected thenable\n            not ok 2 - rejected thenable\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'custom error'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n              ...\n            1..2\n        not ok 55 - successful thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: rejected thenable\n        not ok 56 - rejected thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: async describe function\n            # Subtest: it inside describe 1\n            ok 1 - it inside describe 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: it inside describe 2\n            ok 2 - it inside describe 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: inner describe\n                # Subtest: it inside inner describe\n                ok 1 - it inside inner describe\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 3 - inner describe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 57 - async describe function\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest fail\n        not ok 58 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):5'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..58\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 67\n        # suites 11\n        # pass 31\n        # fail 19\n        # cancelled 4\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync todo\n        not ok 3 - sync todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):4'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync todo with message\n        not ok 4 - sync todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: mixing describe/it and test should work\n        ok 11 - mixing describe/it and test should work\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 12 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 13 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: async assertion fail\n        not ok 14 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 15 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 16 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 17 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 18 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 19 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 20 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 21 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: mixing describe/it and test should work\n            ok 2 - mixing describe/it and test should work\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 22 - subtest sync throw fail\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 23 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 24 - level 0a\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: custom inspect symbol fail\n        not ok 49 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 50 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 51 - subtest sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: describe sync throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 52 - describe sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe async throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 53 - describe async throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: timeouts\n            # Subtest: timed out async test\n            not ok 1 - timed out async test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: timed out callback test\n            not ok 2 - timed out callback test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: large timeout async test is ok\n            ok 3 - large timeout async test is ok\n              ---\n              duration_ms: *\n              ...\n            # Subtest: large timeout callback test is ok\n            ok 4 - large timeout callback test is ok\n              ---\n              duration_ms: *\n              ...\n            1..4\n        not ok 54 - timeouts\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: successful thenable\n            # Subtest: successful thenable\n            ok 1 - successful thenable\n              ---\n              duration_ms: *\n              ...\n            # Subtest: rejected thenable\n            not ok 2 - rejected thenable\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'custom error'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n              ...\n            1..2\n        not ok 55 - successful thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: rejected thenable\n        not ok 56 - rejected thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: async describe function\n            # Subtest: it inside describe 1\n            ok 1 - it inside describe 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: it inside describe 2\n            ok 2 - it inside describe 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: inner describe\n                # Subtest: it inside inner describe\n                ok 1 - it inside inner describe\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 3 - inner describe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 57 - async describe function\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest fail\n        not ok 58 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):5'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..58\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 67\n        # suites 11\n        # pass 31\n        # fail 19\n        # cancelled 4\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 3)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    not ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 621.5174\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: nested - no tests\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: nested - no tests\n            # Subtest: nested\n                # Subtest: nested\n                ok 1 - nested\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 1 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..1\n        ok 1 - nested - no tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 1\n        # suites 2\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: nested - no tests\n            # Subtest: nested\n                # Subtest: nested\n                ok 1 - nested\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 1 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..1\n        ok 1 - nested - no tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 1\n        # suites 2\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 4)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks.js\n    not ok 6 - test-runner/output/hooks.js\n      ---\n      duration_ms: 615.3313\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe hooks\\n' +\n        ...\n            '        *\\n' +\n            '        *\\n' +\n        +   '        *'... 1160 more characters\n        -   '        *'... 1154 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 2 - before throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'before'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: after throws\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 3 - after throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'after'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - beforeEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 5 - afterEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 6 - afterEach when test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 7 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: test hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 8 - test hooks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: t.before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 9 - t.before throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 10 - t.beforeEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 11 - t.afterEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 12 - afterEach when test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 13 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.after() is called if test body throws\n        not ok 14 - t.after() is called if test body throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'bye'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # - after() called\n        1..14\n        # before 1 called\n        # before 2 called\n        # after 1 called\n        # after 2 called\n        # tests 38\n        # suites 8\n        # pass 14\n        # fail 22\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 2 - before throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'before'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: after throws\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 3 - after throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'after'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - beforeEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 5 - afterEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 6 - afterEach when test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 7 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: test hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 8 - test hooks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: t.before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 9 - t.before throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 10 - t.beforeEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 11 - t.afterEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 12 - afterEach when test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 13 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.after() is called if test body throws\n        not ok 14 - t.after() is called if test body throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'bye'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # - after() called\n        1..14\n        # before 1 called\n        # before 2 called\n        # after 1 called\n        # after 2 called\n        # tests 38\n        # suites 8\n        # pass 14\n        # fail 22\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 5)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    not ok 7 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 1519.6586\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' describe hooks\\n' +\n            '   1 (*ms)\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        +   '### 0\\n'\n        -   '      *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         describe hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         describe hooks (*ms)\n        \n         before throws\n           1\n            'test did not finish before its parent and was cancelled'\n        \n           2\n            'test did not finish before its parent and was cancelled'\n        \n         before throws (*ms)\n        \n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         after throws\n           1 (*ms)\n           2 (*ms)\n         after throws (*ms)\n        \n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         beforeEach throws (*ms)\n        \n         afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         test hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         test hooks (*ms)\n        \n         t.before throws\n           1 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.before throws (*ms)\n        \n         t.beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.beforeEach throws (*ms)\n        \n         t.afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n         - after() called\n         before 1 called\n         before 2 called\n         after 1 called\n         after 2 called\n         tests 38\n         suites 8\n         pass 14\n         fail 22\n         cancelled 2\n         skipped 0\n         todo 0\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         1\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         2\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         before throws (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         after throws (*ms)\n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n      actual: |-\n         describe hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         describe hooks (*ms)\n        \n         before throws\n           1\n            'test did not finish before its parent and was cancelled'\n        \n           2\n            'test did not finish before its parent and was cancelled'\n        \n         before throws (*ms)\n        \n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         after throws\n           1 (*ms)\n           2 (*ms)\n         after throws (*ms)\n        \n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         beforeEach throws (*ms)\n        \n         afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         test hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         test hooks (*ms)\n        \n         t.before throws\n           1 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.before throws (*ms)\n        \n         t.beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.beforeEach throws (*ms)\n        \n         t.afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n         - after() called\n         before 1 called\n         before 2 called\n         after 1 called\n         after 2 called\n         tests 38\n         suites 8\n         pass 14\n         fail 22\n         cancelled 2\n         skipped 0\n         todo 0\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         1\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         2\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         before throws (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         after throws (*ms)\n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 6)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    not ok 8 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 1738.0375\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'gonna timeout\\n' +\n            'TAP version 13\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        gonna timeout\n        TAP version 13\n        not gonna timeout\n        before each test second 2\n        after each test first 0\n        gonna timeout\n        # Subtest: before each timeout\n            # Subtest: first describe first test\n            not ok 1 - first describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running beforeEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: first describe second test\n            ok 2 - first describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 1 - before each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        after each test second 1\n        not gonna timeout\n        # Subtest: after each timeout\n            # Subtest: second describe first test\n            not ok 1 - second describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running afterEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: second describe second test\n            ok 2 - second describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - after each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..2\n        # tests 4\n        # suites 2\n        # pass 2\n        # fail 2\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        gonna timeout\n        TAP version 13\n        not gonna timeout\n        before each test second 2\n        after each test first 0\n        gonna timeout\n        # Subtest: before each timeout\n            # Subtest: first describe first test\n            not ok 1 - first describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running beforeEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: first describe second test\n            ok 2 - first describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 1 - before each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        after each test second 1\n        not gonna timeout\n        # Subtest: after each timeout\n            # Subtest: second describe first test\n            not ok 1 - second describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running afterEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: second describe second test\n            ok 2 - second describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - after each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..2\n        # tests 4\n        # suites 2\n        # pass 2\n        # fail 2\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 7)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    not ok 9 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 626.2951\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe hooks with no global tests\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe hooks with no global tests\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks with no global tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 4\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe hooks with no global tests\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks with no global tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 4\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 8)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    not ok 10 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 792.0523\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: 1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 9)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    not ok 11 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 615.0089\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: 1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 10)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    not ok 12 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 688.6157\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'this is a test\\n' +\n            'TAP version 13\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        this is a test\n        TAP version 13\n        # Subtest: this is a test\n        ok 1 - this is a test\n          ---\n          duration_ms: *\n          ...\n        not ok 2 - /test/fixtures/test-runner/output/global_after_should_fail_the_test.js\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/global_after_should_fail_the_test.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'this should fail the test'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..1\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        this is a test\n        TAP version 13\n        # Subtest: this is a test\n        ok 1 - this is a test\n          ---\n          duration_ms: *\n          ...\n        not ok 2 - /test/fixtures/test-runner/output/global_after_should_fail_the_test.js\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/global_after_should_fail_the_test.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'this should fail the test'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..1\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 11)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 13 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 776.3126\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 12)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 14 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 825.8896\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    not ok 15 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 876.1411\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: only = undefined\\n' +\n        ...\n            '# skipped 25\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: only = undefined\n        ok 1 - only = undefined # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = string\n        ok 2 - only = undefined, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = true\n        ok 3 - only = undefined, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = false\n        ok 4 - only = undefined, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false\n        ok 5 - only = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = string\n        ok 6 - only = false, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = true\n        ok 7 - only = false, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = false\n        ok 8 - only = false, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = string\n        ok 9 - only = true, skip = string # SKIP skip message\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = true\n        ok 10 - only = true, skip = true # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, with subtests\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 1\n            ok 3 - skipped subtest 1 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 2\n            ok 4 - skipped subtest 2 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 3\n            ok 5 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 4\n                # Subtest: running sub-subtest 1\n                ok 1 - running sub-subtest 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: running sub-subtest 2\n                ok 2 - running sub-subtest 2\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 1\n                ok 3 - skipped sub-subtest 1 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 2\n                ok 4 - skipped sub-subtest 2 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                1..4\n            ok 6 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 3\n            ok 7 - skipped subtest 3 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 4\n            ok 8 - skipped subtest 4 # SKIP\n              ---\n              duration_ms: *\n              ...\n            1..8\n        ok 11 - only = true, with subtests\n          ---\n          duration_ms: *\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: `it` subtest 1 should run\n            ok 1 - `it` subtest 1 should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 should not run\n            ok 2 - `it` subtest 2 should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 12 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with a mixture of subtests\n            # Subtest: `it` subtest 1\n            ok 1 - `it` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` async subtest 1\n            ok 2 - `it` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=true\n            ok 3 - `it` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=false\n            ok 4 - `it` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 3 skip\n            ok 5 - `it` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 4 todo\n            ok 6 - `it` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 1\n            ok 7 - `test` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` async subtest 1\n            ok 8 - `test` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=true\n            ok 9 - `test` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=false\n            ok 10 - `test` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 3 skip\n            ok 11 - `test` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 4 todo\n            ok 12 - `test` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..12\n        ok 13 - describe only = true, with a mixture of subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: subtest should run\n            ok 1 - subtest should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: async subtest should not run\n            ok 2 - async subtest should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: subtest should be skipped\n            ok 3 - subtest should be skipped # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 14 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..14\n        # tests 40\n        # suites 3\n        # pass 15\n        # fail 0\n        # cancelled 0\n        # skipped 25\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: only = undefined\n        ok 1 - only = undefined # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = string\n        ok 2 - only = undefined, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = true\n        ok 3 - only = undefined, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = false\n        ok 4 - only = undefined, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false\n        ok 5 - only = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = string\n        ok 6 - only = false, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = true\n        ok 7 - only = false, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = false\n        ok 8 - only = false, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = string\n        ok 9 - only = true, skip = string # SKIP skip message\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = true\n        ok 10 - only = true, skip = true # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, with subtests\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 1\n            ok 3 - skipped subtest 1 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 2\n            ok 4 - skipped subtest 2 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 3\n            ok 5 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 4\n                # Subtest: running sub-subtest 1\n                ok 1 - running sub-subtest 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: running sub-subtest 2\n                ok 2 - running sub-subtest 2\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 1\n                ok 3 - skipped sub-subtest 1 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 2\n                ok 4 - skipped sub-subtest 2 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                1..4\n            ok 6 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 3\n            ok 7 - skipped subtest 3 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 4\n            ok 8 - skipped subtest 4 # SKIP\n              ---\n              duration_ms: *\n              ...\n            1..8\n        ok 11 - only = true, with subtests\n          ---\n          duration_ms: *\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: `it` subtest 1 should run\n            ok 1 - `it` subtest 1 should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 should not run\n            ok 2 - `it` subtest 2 should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 12 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with a mixture of subtests\n            # Subtest: `it` subtest 1\n            ok 1 - `it` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` async subtest 1\n            ok 2 - `it` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=true\n            ok 3 - `it` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=false\n            ok 4 - `it` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 3 skip\n            ok 5 - `it` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 4 todo\n            ok 6 - `it` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 1\n            ok 7 - `test` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` async subtest 1\n            ok 8 - `test` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=true\n            ok 9 - `test` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=false\n            ok 10 - `test` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 3 skip\n            ok 11 - `test` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 4 todo\n            ok 12 - `test` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..12\n        ok 13 - describe only = true, with a mixture of subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: subtest should run\n            ok 1 - subtest should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: async subtest should not run\n            ok 2 - async subtest should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: subtest should be skipped\n            ok 3 - subtest should be skipped # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 14 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..14\n        # tests 40\n        # suites 3\n        # pass 15\n        # fail 0\n        # cancelled 0\n        # skipped 25\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 14)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 16 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 1879.0097\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    ok 17 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 1879.1287\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    not ok 18 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 785.9902\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '✔ should pass (*ms)\\n' +\n            'ℹ tests 1\\n' +\n        ...\n            'ℹ skipped 0\\n' +\n            'ℹ todo 0\\n' +\n        +   'ℹ duration_ms *\\n' +\n        +   '### 0\\n'\n        -   'ℹ duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        ✔ should pass (*ms)\n        ℹ tests 1\n        ℹ suites 0\n        ℹ pass 1\n        ℹ fail 0\n        ℹ cancelled 0\n        ℹ skipped 0\n        ℹ todo 0\n        ℹ duration_ms *\n        \n      actual: |-\n        ✔ should pass (*ms)\n        ℹ tests 1\n        ℹ suites 0\n        ℹ pass 1\n        ℹ fail 0\n        ℹ cancelled 0\n        ℹ skipped 0\n        ℹ todo 0\n        ℹ duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 17)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    not ok 19 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 1812.5111\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' sync pass todo (*ms) # TODO\\n' +\n            ' sync pass todo with message (*ms) # this is a passing todo\\n' +\n        ...\n            '*\\n' +\n            ' sync throw fails at first (*ms)\\n' +\n        +   '  Error: thrown from subtest sync'... 1110 more characters\n        -   '  Error: thrown from subtest sync'... 1104 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      actual: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 18)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    not ok 20 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 1951.7305\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' sync pass todo (*ms) # TODO\\n' +\n            ' sync pass todo with message (*ms) # this is a passing todo\\n' +\n        ...\n            ' Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\\n' +\n            ' Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\\n' +\n        +   '### 0\\n' +\n        +   ' tests 76\\n' +\n        +   ' suites 0\\n' +\n        +   ' pass 35\\n' +\n        +   ' fail 25\\n' +\n        +   ' cancelled 3\\n' +\n        +   ' skipped 9\\n' +\n        +   ' todo 4\\n' +\n        +   ' duration_ms *\\n' +\n        +   '\\n' +\n        +   ' failing tests:\\n' +\n        +   '\\n' +\n        +   '*\\n' +\n        +   ' sync fail todo (*ms) # TODO\\n' +\n        +   '  Error: thrown from sync fail todo\\n' +\n        -   ' tests 76\\n' +\n        -   ' suites 0\\n' +\n        -   ' pass 35\\n' +\n        -   ' fail 25\\n' +\n        -   ' cancelled 3\\n' +\n        -   ' skipped 9\\n' +\n        -   ' todo 4\\n' +\n        -   ' duration_ms *\\n' +\n        -   '\\n' +\n        -   ' failing tests:\\n' +\n        -   '\\n' +\n        -   '*\\n' +\n        -   ' sync fail todo (*ms) # TODO\\n' +\n        -   '  Error: thrown from sync fail todo\\n' +\n        -   '      *\\n' +\n            '      *\\n' +\n            '      *\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        +   '\\n' +\n        +   '*\\n' +\n        +   ' sync fail todo with message (*ms) # this is a failing todo\\n' +\n        +   '  Error: thrown from sync fail todo with message\\n' +\n        -   '\\n' +\n        -   '*\\n' +\n        -   ' sync fail todo with message (*ms) # this is a failing todo\\n' +\n        -   '  Error: thrown from sync fail todo with message\\n' +\n        -   '      *\\n' +\n            '      *\\n' +\n            '      *\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        ...\n        -   '\\n' +\n        ...\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      actual: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        ### 0\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 21 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 1954.1596\n      ...\n    # Subtest: test-runner/output/output.js\n    not ok 22 - test-runner/output/output.js\n      ---\n      duration_ms: 1444.0126\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '      ...\\n' +\n            \"    # 'only' and 'runOnly' require the --test-only command-line option.\\n\" +\n        +   '    '... 6851 more characters\n        -   '    '... 6845 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..62\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 76\n        # suites 0\n        # pass 35\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..62\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 76\n        # suites 0\n        # pass 35\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 21)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    not ok 23 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 2034.3437\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '      ...\\n' +\n            \"    # 'only' and 'runOnly' require the --test-only command-line option.\\n\" +\n        +   '    '... 6941 more characters\n        -   '    '... 6913 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Subtest: last test\n        ok 63 - last test\n          ---\n          duration_ms: *\n          ...\n        1..63\n        # tests 77\n        # suites 0\n        # pass 36\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # /#/#/# 0\n        # Subtest: last test\n        ok 63 - last test\n          ---\n          duration_ms: *\n          ...\n        # /#/#/# 0\n        1..63\n        # tests 77\n        # suites 0\n        # pass 36\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 22)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    not ok 24 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 855.5961\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: top level test disabled\\n' +\n        ...\n            '# skipped 8\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: top level test disabled\n        ok 1 - top level test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test disabled\n        ok 2 - top level skipped test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test enabled\n        ok 3 - top level skipped test enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it enabled\n        ok 4 - top level it enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it disabled\n        ok 5 - top level it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it disabled\n        ok 6 - top level skipped it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it enabled\n        ok 7 - top level skipped it enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe never disabled\n        ok 8 - top level describe never disabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe disabled\n        ok 9 - top level skipped describe disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe enabled\n        ok 10 - top level skipped describe enabled # SKIP\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level runs because name includes PaTtErN\n        ok 11 - top level runs because name includes PaTtErN\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level test enabled\n            # Subtest: nested test runs because name includes PATTERN\n            ok 1 - nested test runs because name includes PATTERN\n              ---\n              duration_ms: *\n              ...\n            1..1\n        ok 12 - top level test enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe enabled\n            # Subtest: nested it not disabled\n            ok 1 - nested it not disabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested it enabled\n            ok 2 - nested it enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested describe not disabled\n            ok 3 - nested describe not disabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            # Subtest: nested describe enabled\n                # Subtest: is enabled\n                ok 1 - is enabled\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 4 - nested describe enabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..4\n        ok 13 - top level describe enabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: yes\n            # Subtest: no\n            ok 1 - no\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 14 - yes\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: no\n            # Subtest: no\n            ok 1 - no # SKIP test name does not match pattern\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no # SKIP test name does not match pattern\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 15 - no\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..15\n        # tests 21\n        # suites 10\n        # pass 13\n        # fail 0\n        # cancelled 0\n        # skipped 8\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: top level test disabled\n        ok 1 - top level test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test disabled\n        ok 2 - top level skipped test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test enabled\n        ok 3 - top level skipped test enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it enabled\n        ok 4 - top level it enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it disabled\n        ok 5 - top level it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it disabled\n        ok 6 - top level skipped it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it enabled\n        ok 7 - top level skipped it enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe never disabled\n        ok 8 - top level describe never disabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe disabled\n        ok 9 - top level skipped describe disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe enabled\n        ok 10 - top level skipped describe enabled # SKIP\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level runs because name includes PaTtErN\n        ok 11 - top level runs because name includes PaTtErN\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level test enabled\n            # Subtest: nested test runs because name includes PATTERN\n            ok 1 - nested test runs because name includes PATTERN\n              ---\n              duration_ms: *\n              ...\n            1..1\n        ok 12 - top level test enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe enabled\n            # Subtest: nested it not disabled\n            ok 1 - nested it not disabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested it enabled\n            ok 2 - nested it enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested describe not disabled\n            ok 3 - nested describe not disabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            # Subtest: nested describe enabled\n                # Subtest: is enabled\n                ok 1 - is enabled\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 4 - nested describe enabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..4\n        ok 13 - top level describe enabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: yes\n            # Subtest: no\n            ok 1 - no\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 14 - yes\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: no\n            # Subtest: no\n            ok 1 - no # SKIP test name does not match pattern\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no # SKIP test name does not match pattern\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 15 - no\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..15\n        # tests 21\n        # suites 10\n        # pass 13\n        # fail 0\n        # cancelled 0\n        # skipped 8\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    not ok 25 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 728.1299\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: enabled and only\\n' +\n        ...\n            '# skipped 3\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: enabled and only\n            # Subtest: enabled\n            ok 1 - enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: disabled but parent not\n            ok 2 - disabled but parent not\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 1 - enabled and only\n          ---\n          duration_ms: *\n          ...\n        # Subtest: enabled but not only\n        ok 2 - enabled but not only # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only does not match pattern\n        ok 3 - only does not match pattern # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: not only and does not match pattern\n        ok 4 - not only and does not match pattern # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        1..4\n        # tests 6\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 3\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: enabled and only\n            # Subtest: enabled\n            ok 1 - enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: disabled but parent not\n            ok 2 - disabled but parent not\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 1 - enabled and only\n          ---\n          duration_ms: *\n          ...\n        # Subtest: enabled but not only\n        ok 2 - enabled but not only # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only does not match pattern\n        ok 3 - only does not match pattern # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: not only and does not match pattern\n        ok 4 - not only and does not match pattern # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        1..4\n        # tests 6\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 3\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 24)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 26 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 701.5518\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 25)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 0.4704\n          ...\n        1..1\n    ok 27 - test-runner/output/default_output.js\n      ---\n      duration_ms: 50.7809\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    not ok 28 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 1062.1577\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            'ok 1 - test\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - pre\n        ok 2 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - mid\n        ok 3 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - post\n        1..3\n        # tests 3\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - pre\n        ok 2 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - mid\n        ok 3 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - post\n        1..3\n        # tests 3\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 27)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    not ok 29 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 912.0282\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: test\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: test\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: suite\n            # Subtest: test\n            ok 1 - test\n              ---\n              duration_ms: *\n              ...\n            # Subtest: scheduled async\n            ok 2 - scheduled async\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 2 - suite\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: scheduled async\n        ok 3 - scheduled async\n          ---\n          duration_ms: *\n          ...\n        1..3\n        # tests 4\n        # suites 1\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: test\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: suite\n            # Subtest: test\n            ok 1 - test\n              ---\n              duration_ms: *\n              ...\n            # Subtest: scheduled async\n            ok 2 - scheduled async\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 2 - suite\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: scheduled async\n        ok 3 - scheduled async\n          ---\n          duration_ms: *\n          ...\n        1..3\n        # tests 4\n        # suites 1\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 28)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 1.4719\n          ...\n        1..1\n    ok 30 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 37.8423\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 1.4512\n          ...\n        1..1\n    ok 31 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 37.7424\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    not ok 32 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 917.5846\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: escaped description \\\\\\\\ \\\\# \\\\\\\\\\\\#\\\\\\\\ \\\\\\\\n \\\\\\\\t \\\\\\\\f \\\\\\\\v \\\\\\\\b \\\\\\\\r\\n' +\n        ...\n            '# skipped 1\\n' +\n            '# todo 1\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n        ok 1 - escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped skip message\n        ok 2 - escaped skip message # SKIP \\#skip\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped todo message\n        ok 3 - escaped todo message # TODO \\#todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped diagnostic\n        ok 4 - escaped diagnostic\n          ---\n          duration_ms: *\n          ...\n        # \\#diagnostic\n        1..4\n        # tests 4\n        # suites 0\n        # pass 2\n        # fail 0\n        # cancelled 0\n        # skipped 1\n        # todo 1\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n        ok 1 - escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped skip message\n        ok 2 - escaped skip message # SKIP \\#skip\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped todo message\n        ok 3 - escaped todo message # TODO \\#todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped diagnostic\n        ok 4 - escaped diagnostic\n          ---\n          duration_ms: *\n          ...\n        # \\#diagnostic\n        1..4\n        # tests 4\n        # suites 0\n        # pass 2\n        # fail 0\n        # cancelled 0\n        # skipped 1\n        # todo 1\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 31)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    not ok 33 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 695.2546\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: ok\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: ok\n        ok 1 - ok\n          ---\n          duration_ms: *\n          ...\n        1..1\n        # Warning: Could not report code coverage. Error: Failed to collect coverage\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: ok\n        ok 1 - ok\n          ---\n          duration_ms: *\n          ...\n        1..1\n        # Warning: Could not report code coverage. Error: Failed to collect coverage\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 32)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    1..33\nnot ok 1 - test runner output\n  ---\n  duration_ms: 2315.4412\n  type: 'suite'\n  location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:140:1'\n  failureType: 'subtestsFailed'\n  error: '26 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 36\n# suites 1\n# pass 7\n# fail 26\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 2335.5415\n### 0"},"time":2686.025,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"parallel/test-stream-duplex-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-duplex-destroy","id":678,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:173\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-duplex-destroy.js:127\n    at Duplex.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:554:12)\n    at Duplex.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v22.0.0-pre"},"time":190.002,"fullname":"parallel/test-stream-duplex-destroy","closingTestPoint":false}},{"testName":"parallel/test-stream-readable-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2022_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-readable-destroy","id":692,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:173\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-readable-destroy.js:118\n    at Readable.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:554:12)\n    at Readable.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v22.0.0-pre"},"time":174.002,"fullname":"parallel/test-stream-readable-destroy","closingTestPoint":false}},{"testName":"parallel/test-fs-read-stream-patch-open","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-fs-read-stream-patch-open","id":279,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 2.\n    at Proxy.mustCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-read-stream-patch-open.js:15:41\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n(node:1388) [DEP0135] DeprecationWarning: ReadStream.prototype.open() is deprecated\n(Use `node --trace-deprecation ...` to show where the warning was created)"},"time":323.02,"fullname":"parallel/test-fs-read-stream-patch-open","closingTestPoint":false}},{"testName":"parallel/test-runner-concurrency","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-concurrency","id":655,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: Concurrency option (boolean) = true\n    # Subtest: should start the first test\n    ok 1 - should start the first test\n      ---\n      duration_ms: 12.7815\n      ...\n    # Subtest: should start before the previous test ends\n    ok 2 - should start before the previous test ends\n      ---\n      duration_ms: 0.8989\n      ...\n    1..2\nok 1 - Concurrency option (boolean) = true\n  ---\n  duration_ms: 16.364\n  type: 'suite'\n  ...\n# Subtest: Concurrency option (boolean) = false\n    # Subtest: should start the first test\n    ok 1 - should start the first test\n      ---\n      duration_ms: 8.425\n      ...\n    # Subtest: should start after the previous test ends\n    ok 2 - should start after the previous test ends\n      ---\n      duration_ms: 0.4195\n      ...\n    1..2\nok 2 - Concurrency option (boolean) = false\n  ---\n  duration_ms: 9.7451\n  type: 'suite'\n  ...\n# Subtest: concurrency: true implies Infinity\n    # Subtest: should run test 0 concurrently\n    ok 1 - should run test 0 concurrently\n      ---\n      duration_ms: 22.0346\n      ...\n    # Subtest: should run test 1 concurrently\n    ok 2 - should run test 1 concurrently\n      ---\n      duration_ms: 22.3528\n      ...\n    # Subtest: should run test 2 concurrently\n    ok 3 - should run test 2 concurrently\n      ---\n      duration_ms: 22.8371\n      ...\n    # Subtest: should run test 3 concurrently\n    ok 4 - should run test 3 concurrently\n      ---\n      duration_ms: 24.0734\n      ...\n    # Subtest: should run test 4 concurrently\n    ok 5 - should run test 4 concurrently\n      ---\n      duration_ms: 24.5954\n      ...\n    # Subtest: should run test 5 concurrently\n    ok 6 - should run test 5 concurrently\n      ---\n      duration_ms: 25.4528\n      ...\n    # Subtest: should run test 6 concurrently\n    ok 7 - should run test 6 concurrently\n      ---\n      duration_ms: 26.18\n      ...\n    # Subtest: should run test 7 concurrently\n    ok 8 - should run test 7 concurrently\n      ---\n      duration_ms: 26.7379\n      ...\n    # Subtest: should run test 8 concurrently\n    ok 9 - should run test 8 concurrently\n      ---\n      duration_ms: 27.2428\n      ...\n    # Subtest: should run test 9 concurrently\n    ok 10 - should run test 9 concurrently\n      ---\n      duration_ms: 27.9137\n      ...\n    # Subtest: should run test 10 concurrently\n    ok 11 - should run test 10 concurrently\n      ---\n      duration_ms: 28.497\n      ...\n    # Subtest: should run test 11 concurrently\n    ok 12 - should run test 11 concurrently\n      ---\n      duration_ms: 29.0867\n      ...\n    # Subtest: should run test 12 concurrently\n    ok 13 - should run test 12 concurrently\n      ---\n      duration_ms: 29.6108\n      ...\n    # Subtest: should run test 13 concurrently\n    ok 14 - should run test 13 concurrently\n      ---\n      duration_ms: 30.13\n      ...\n    # Subtest: should run test 14 concurrently\n    ok 15 - should run test 14 concurrently\n      ---\n      duration_ms: 31.2469\n      ...\n    # Subtest: should run test 15 concurrently\n    ok 16 - should run test 15 concurrently\n      ---\n      duration_ms: 31.7604\n      ...\n    # Subtest: should run test 16 concurrently\n    ok 17 - should run test 16 concurrently\n      ---\n      duration_ms: 32.3083\n      ...\n    # Subtest: should run test 17 concurrently\n    ok 18 - should run test 17 concurrently\n      ---\n      duration_ms: 32.8222\n      ...\n    # Subtest: should run test 18 concurrently\n    ok 19 - should run test 18 concurrently\n      ---\n      duration_ms: 35.694\n      ...\n    # Subtest: should run test 19 concurrently\n    ok 20 - should run test 19 concurrently\n      ---\n      duration_ms: 36.1734\n      ...\n    # Subtest: should run test 20 concurrently\n    ok 21 - should run test 20 concurrently\n      ---\n      duration_ms: 36.9339\n      ...\n    # Subtest: should run test 21 concurrently\n    ok 22 - should run test 21 concurrently\n      ---\n      duration_ms: 37.4713\n      ...\n    # Subtest: should run test 22 concurrently\n    ok 23 - should run test 22 concurrently\n      ---\n      duration_ms: 37.9169\n      ...\n    # Subtest: should run test 23 concurrently\n    ok 24 - should run test 23 concurrently\n      ---\n      duration_ms: 38.3638\n      ...\n    # Subtest: should run test 24 concurrently\n    ok 25 - should run test 24 concurrently\n      ---\n      duration_ms: 38.9641\n      ...\n    # Subtest: should run test 25 concurrently\n    ok 26 - should run test 25 concurrently\n      ---\n      duration_ms: 39.3886\n      ...\n    # Subtest: should run test 26 concurrently\n    ok 27 - should run test 26 concurrently\n      ---\n      duration_ms: 39.9281\n      ...\n    # Subtest: should run test 27 concurrently\n    ok 28 - should run test 27 concurrently\n      ---\n      duration_ms: 40.4261\n      ...\n    # Subtest: should run test 28 concurrently\n    ok 29 - should run test 28 concurrently\n      ---\n      duration_ms: 40.8754\n      ...\n    # Subtest: should run test 29 concurrently\n    ok 30 - should run test 29 concurrently\n      ---\n      duration_ms: 41.3192\n      ...\n    # Subtest: should run test 30 concurrently\n    ok 31 - should run test 30 concurrently\n      ---\n      duration_ms: 41.7716\n      ...\n    # Subtest: should run test 31 concurrently\n    ok 32 - should run test 31 concurrently\n      ---\n      duration_ms: 42.2876\n      ...\n    # Subtest: should run test 32 concurrently\n    ok 33 - should run test 32 concurrently\n      ---\n      duration_ms: 42.9175\n      ...\n    # Subtest: should run test 33 concurrently\n    ok 34 - should run test 33 concurrently\n      ---\n      duration_ms: 43.4044\n      ...\n    # Subtest: should run test 34 concurrently\n    ok 35 - should run test 34 concurrently\n      ---\n      duration_ms: 43.9308\n      ...\n    # Subtest: should run test 35 concurrently\n    ok 36 - should run test 35 concurrently\n      ---\n      duration_ms: 44.3922\n      ...\n    # Subtest: should run test 36 concurrently\n    ok 37 - should run test 36 concurrently\n      ---\n      duration_ms: 44.8153\n      ...\n    # Subtest: should run test 37 concurrently\n    ok 38 - should run test 37 concurrently\n      ---\n      duration_ms: 45.329\n      ...\n    # Subtest: should run test 38 concurrently\n    ok 39 - should run test 38 concurrently\n      ---\n      duration_ms: 46.1261\n      ...\n    # Subtest: should run test 39 concurrently\n    ok 40 - should run test 39 concurrently\n      ---\n      duration_ms: 46.6221\n      ...\n    1..40\nok 3 - concurrency: true implies Infinity\n  ---\n  duration_ms: 55.0613\n  type: 'suite'\n  ...\n# Subtest: suite 1\n    # Subtest: 1\n    ok 1 - 1\n      ---\n      duration_ms: 0.4034\n      ...\n    # Subtest: 2\n    ok 2 - 2\n      ---\n      duration_ms: 0.2363\n      ...\n    # Subtest: nested\n        # Subtest: nested 1\n        ok 1 - nested 1\n          ---\n          duration_ms: 0.2441\n          ...\n        # Subtest: nested 2\n        ok 2 - nested 2\n          ---\n          duration_ms: 0.1734\n          ...\n        1..2\n    ok 3 - nested\n      ---\n      duration_ms: 0.8295\n      type: 'suite'\n      ...\n    1..3\nok 4 - suite 1\n  ---\n  duration_ms: 2.2289\n  type: 'suite'\n  ...\n# Subtest: test\n    # Subtest: test1\n    ok 1 - test1\n      ---\n      duration_ms: 0.2528\n      ...\n    # Subtest: test 2\n    ok 2 - test 2\n      ---\n      duration_ms: 0.1656\n      ...\n    1..2\nok 5 - test\n  ---\n  duration_ms: 1.3779\n  ...\n# Subtest: suite 2\n    # Subtest: should run after other suites\n    ok 1 - should run after other suites\n      ---\n      duration_ms: 2.132\n      ...\n    1..1\nok 6 - suite 2\n  ---\n  duration_ms: 2.5639\n  type: 'suite'\n  ...\n# Subtest: --test multiple files\nnot ok 7 - --test multiple files\n  ---\n  duration_ms: 501.7396\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-concurrency.js:89:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-concurrency.js:96:10)\n    process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    async Test.run (node:internal/test_runner/test:632:9)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n1..7\n# tests 53\n# suites 6\n# pass 52\n# fail 1\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 617.2457\n### 0"},"time":1077.987,"fullname":"parallel/test-runner-concurrency","closingTestPoint":false}},{"testName":"parallel/test-runner-reporters","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-reporters","id":660,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: node:test reporters\n    # Subtest: should default to outputing TAP to stdout\n    not ok 1 - should default to outputing TAP to stdout\n      ---\n      duration_ms: 4895.8927\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:16:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:18:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should default destination to stdout when passing a single reporter\n    ok 2 - should default destination to stdout when passing a single reporter\n      ---\n      duration_ms: 4444.8392\n      ...\n    # Subtest: should throw when passing reporters without a destination\n    ok 3 - should throw when passing reporters without a destination\n      ---\n      duration_ms: 4041.1692\n      ...\n    # Subtest: should throw when passing a destination without a reporter\n    ok 4 - should throw when passing a destination without a reporter\n      ---\n      duration_ms: 3945.1956\n      ...\n    # Subtest: should support stdout as a destination\n    ok 5 - should support stdout as a destination\n      ---\n      duration_ms: 3849.8205\n      ...\n    # Subtest: should support stderr as a destination\n    ok 6 - should support stderr as a destination\n      ---\n      duration_ms: 3524.6997\n      ...\n    # Subtest: should support a file as a destination\n    ok 7 - should support a file as a destination\n      ---\n      duration_ms: 3208.624\n      ...\n    # Subtest: should disallow using v8-serializer as reporter\n    ok 8 - should disallow using v8-serializer as reporter\n      ---\n      duration_ms: 2878.6722\n      ...\n    # Subtest: should support multiple reporters\n    ok 9 - should support multiple reporters\n      ---\n      duration_ms: 2742.9426\n      ...\n    # Subtest: should support a 'js' file as a custom reporter\n    not ok 10 - should support a 'js' file as a custom reporter\n      ---\n      duration_ms: 2422.1226\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'custom.js {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'custom.js {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:99:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a 'cjs' file as a custom reporter\n    not ok 11 - should support a 'cjs' file as a custom reporter\n      ---\n      duration_ms: 2075.0811\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:97:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a 'mjs' file as a custom reporter\n    not ok 12 - should support a 'mjs' file as a custom reporter\n      ---\n      duration_ms: 1735.4346\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:92:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'custom.mjs {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'custom.mjs {\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:99:14)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a custom reporter from node_modules\n    not ok 13 - should support a custom reporter from node_modules\n      ---\n      duration_ms: 1412.1212\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:104:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /^package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'package: reporter-cjs{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:109:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should support a custom ESM reporter from node_modules\n    not ok 14 - should support a custom ESM reporter from node_modules\n      ---\n      duration_ms: 1062.6313\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:115:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /^package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:diagnostic\":\\d+}$/. Input:\n        \n        'package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: 'package: reporter-esm{\"test:enqueue\":5,\"test:dequeue\":5,\"test:start\":4,\"test:pass\":2,\"test:fail\":2,\"test:plan\":2,\"test:stderr\":1,\"test:diagnostic\":8}'\n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:120:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should throw when reporter setup throws asynchronously\n    ok 15 - should throw when reporter setup throws asynchronously\n      ---\n      duration_ms: 707.262\n      ...\n    # Subtest: should throw when reporter errors\n    not ok 16 - should throw when reporter errors\n      ---\n      duration_ms: 563.2062\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:138:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        \n        1 !== 7\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: 7\n      actual: 1\n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:142:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    # Subtest: should throw when reporter errors asynchronously\n    not ok 17 - should throw when reporter errors asynchronously\n      ---\n      duration_ms: 218.7609\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:148:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        The input did not match the regular expression /Emitted 'error' event on Duplex instance/. Input:\n        \n        '### 0\\r\\n' +\n          '### 0\\r\\n' +\n          '### 0\\r\\n' +\n          'node:internal/test_runner/harness:50\\r\\n' +\n          '      throw err;\\r\\n' +\n          '      ^\\r\\n' +\n          '\\r\\n' +\n          'Error: Reporting error\\r\\n' +\n          '    at Immediate.<anonymous> (C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\fixtures\\\\test-runner\\\\custom_reporters\\\\throwing-async.js:6:11)\\r\\n' +\n          '    at process.processImmediate (node:internal/timers:478:21)\\r\\n' +\n          '\\r\\n' +\n          'Node.js v22.0.0-pre\\r\\n'\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected:\n      actual: |-\n        ### 0\n        ### 0\n        ### 0\n        node:internal/test_runner/harness:50\n              throw err;\n              ^\n        \n        Error: Reporting error\n            at Immediate.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\fixtures\\test-runner\\custom_reporters\\throwing-async.js:6:11)\n            at process.processImmediate (node:internal/timers:478:21)\n        \n        Node.js v22.0.0-pre\n        \n      operator: 'match'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-reporters.js:156:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        node:internal/test_runner/test:946:71\n        node:internal/per_context/primordials:488:82\n        new Promise (<anonymous>)\n        new SafePromise (node:internal/per_context/primordials:456:29)\n        node:internal/per_context/primordials:488:9\n        Array.map (<anonymous>)\n      ...\n    1..17\nnot ok 1 - node:test reporters\n  ---\n  duration_ms: 4906.0623\n  type: 'suite'\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-reporters.js:15:1'\n  failureType: 'subtestsFailed'\n  error: '8 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 17\n# suites 1\n# pass 9\n# fail 8\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 4955.612\n### 0"},"time":5394.043,"fullname":"parallel/test-runner-reporters","closingTestPoint":false}},{"testName":"parallel/test-stream-pipeline","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-3","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-pipeline","id":700,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\nnode:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'The operation was aborted'\n- 'kaboom'\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-pipeline.js:792:12\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15\n    at node:internal/util:522:12\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'The operation was aborted',\n  expected: 'kaboom',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":822.008,"fullname":"parallel/test-stream-pipeline","closingTestPoint":false}},{"testName":"parallel/test-fs-write-stream-patch-open","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-fs-write-stream-patch-open","id":317,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 2.\n    at Proxy.mustCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-write-stream-patch-open.js:34:42\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n(node:8380) [DEP0135] DeprecationWarning: WriteStream.prototype.open() is deprecated\n(Use `node --trace-deprecation ...` to show where the warning was created)\nnode:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n1 !== 0\n\n    at ChildProcess.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-write-stream-patch-open.js:18:12)\n    at ChildProcess.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at ChildProcess.emit (node:events:519:28)\n    at ChildProcess._handle.onexit (node:internal/child_process:294:12) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":638.01,"fullname":"parallel/test-fs-write-stream-patch-open","closingTestPoint":false}},{"testName":"parallel/test-runner-cli","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-cli","id":651,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '### 0\\r\\n'\n- ''\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-cli.js:29:10)\n    at Module._compile (node:internal/modules/cjs/loader:1375:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1434:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '### 0\\r\\n',\n  expected: '',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":1447.023,"fullname":"parallel/test-runner-cli","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":655,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    not ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 1754.1142\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: promise timeout signal\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: promise timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - promise timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: promise abort signal\n        not ok 2 - promise abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 3 - callback timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback abort signal\n        not ok 4 - callback abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..4\n        # tests 22\n        # suites 0\n        # pass 8\n        # fail 0\n        # cancelled 14\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: promise timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - promise timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: promise abort signal\n        not ok 2 - promise abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 3 - callback timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback abort signal\n        not ok 4 - callback abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..4\n        # tests 22\n        # suites 0\n        # pass 8\n        # fail 0\n        # cancelled 14\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 0)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    not ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 1722.9443\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe timeout signal\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - describe timeout signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe abort signal\n        not ok 2 - describe abort signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..2\n        # tests 9\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 5\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - describe timeout signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe abort signal\n        not ok 2 - describe abort signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..2\n        # tests 9\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 5\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 1)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    not ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 1681.3134\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'before\\n' +\n            '2.1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        before\n        2.1\n        2.2\n        after\n        beforeEach\n        4.1\n        afterEach\n        4.2\n        TAP version 13\n        # Subtest: 1 before describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 1 - 1 before describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 2 after describe\n            # Subtest: test 1\n            ok 1 - test 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: test 2\n            ok 2 - test 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - 2 after describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 3 beforeEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 3 - 3 beforeEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: 4 afterEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - 4 afterEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..4\n        # tests 8\n        # suites 4\n        # pass 2\n        # fail 4\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        before\n        2.1\n        2.2\n        after\n        beforeEach\n        4.1\n        afterEach\n        4.2\n        TAP version 13\n        # Subtest: 1 before describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 1 - 1 before describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 2 after describe\n            # Subtest: test 1\n            ok 1 - test 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: test 2\n            ok 2 - test 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - 2 after describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 3 beforeEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 3 - 3 beforeEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: 4 afterEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - 4 afterEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..4\n        # tests 8\n        # suites 4\n        # pass 2\n        # fail 4\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 2)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    not ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 1639.6048\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '    not ok 1 - sync throw fails at first\\n' +\n            '      ---\\n' +\n        +   '     '... 7362 more characters\n        -   '     '... 7356 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync todo\n        not ok 3 - sync todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):4'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync todo with message\n        not ok 4 - sync todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: mixing describe/it and test should work\n        ok 11 - mixing describe/it and test should work\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 12 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 13 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: async assertion fail\n        not ok 14 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 15 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 16 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 17 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 18 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 19 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 20 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 21 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: mixing describe/it and test should work\n            ok 2 - mixing describe/it and test should work\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 22 - subtest sync throw fail\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 23 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 24 - level 0a\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: custom inspect symbol fail\n        not ok 49 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 50 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 51 - subtest sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: describe sync throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 52 - describe sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe async throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 53 - describe async throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: timeouts\n            # Subtest: timed out async test\n            not ok 1 - timed out async test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: timed out callback test\n            not ok 2 - timed out callback test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: large timeout async test is ok\n            ok 3 - large timeout async test is ok\n              ---\n              duration_ms: *\n              ...\n            # Subtest: large timeout callback test is ok\n            ok 4 - large timeout callback test is ok\n              ---\n              duration_ms: *\n              ...\n            1..4\n        not ok 54 - timeouts\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: successful thenable\n            # Subtest: successful thenable\n            ok 1 - successful thenable\n              ---\n              duration_ms: *\n              ...\n            # Subtest: rejected thenable\n            not ok 2 - rejected thenable\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'custom error'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n              ...\n            1..2\n        not ok 55 - successful thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: rejected thenable\n        not ok 56 - rejected thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: async describe function\n            # Subtest: it inside describe 1\n            ok 1 - it inside describe 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: it inside describe 2\n            ok 2 - it inside describe 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: inner describe\n                # Subtest: it inside inner describe\n                ok 1 - it inside inner describe\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 3 - inner describe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 57 - async describe function\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest fail\n        not ok 58 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):5'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..58\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 67\n        # suites 11\n        # pass 31\n        # fail 19\n        # cancelled 4\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync todo\n        not ok 3 - sync todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):4'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync todo with message\n        not ok 4 - sync todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: mixing describe/it and test should work\n        ok 11 - mixing describe/it and test should work\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 12 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 13 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: async assertion fail\n        not ok 14 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 15 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 16 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 17 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 18 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 19 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 20 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 21 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: mixing describe/it and test should work\n            ok 2 - mixing describe/it and test should work\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 22 - subtest sync throw fail\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 23 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 24 - level 0a\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: custom inspect symbol fail\n        not ok 49 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 50 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 51 - subtest sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: describe sync throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 52 - describe sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe async throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 53 - describe async throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: timeouts\n            # Subtest: timed out async test\n            not ok 1 - timed out async test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: timed out callback test\n            not ok 2 - timed out callback test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: large timeout async test is ok\n            ok 3 - large timeout async test is ok\n              ---\n              duration_ms: *\n              ...\n            # Subtest: large timeout callback test is ok\n            ok 4 - large timeout callback test is ok\n              ---\n              duration_ms: *\n              ...\n            1..4\n        not ok 54 - timeouts\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: successful thenable\n            # Subtest: successful thenable\n            ok 1 - successful thenable\n              ---\n              duration_ms: *\n              ...\n            # Subtest: rejected thenable\n            not ok 2 - rejected thenable\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'custom error'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n              ...\n            1..2\n        not ok 55 - successful thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: rejected thenable\n        not ok 56 - rejected thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: async describe function\n            # Subtest: it inside describe 1\n            ok 1 - it inside describe 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: it inside describe 2\n            ok 2 - it inside describe 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: inner describe\n                # Subtest: it inside inner describe\n                ok 1 - it inside inner describe\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 3 - inner describe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 57 - async describe function\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest fail\n        not ok 58 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):5'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..58\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 67\n        # suites 11\n        # pass 31\n        # fail 19\n        # cancelled 4\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 3)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    not ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 1573.8253\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: nested - no tests\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: nested - no tests\n            # Subtest: nested\n                # Subtest: nested\n                ok 1 - nested\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 1 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..1\n        ok 1 - nested - no tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 1\n        # suites 2\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: nested - no tests\n            # Subtest: nested\n                # Subtest: nested\n                ok 1 - nested\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 1 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..1\n        ok 1 - nested - no tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 1\n        # suites 2\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 4)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks.js\n    not ok 6 - test-runner/output/hooks.js\n      ---\n      duration_ms: 1554.2045\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe hooks\\n' +\n        ...\n            '        *\\n' +\n            '        *\\n' +\n        +   '        *'... 1160 more characters\n        -   '        *'... 1154 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 2 - before throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'before'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: after throws\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 3 - after throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'after'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - beforeEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 5 - afterEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 6 - afterEach when test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 7 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: test hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 8 - test hooks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: t.before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 9 - t.before throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 10 - t.beforeEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 11 - t.afterEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 12 - afterEach when test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 13 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.after() is called if test body throws\n        not ok 14 - t.after() is called if test body throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'bye'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # - after() called\n        1..14\n        # before 1 called\n        # before 2 called\n        # after 1 called\n        # after 2 called\n        # tests 38\n        # suites 8\n        # pass 14\n        # fail 22\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 2 - before throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'before'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: after throws\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 3 - after throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'after'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - beforeEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 5 - afterEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 6 - afterEach when test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 7 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: test hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 8 - test hooks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: t.before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 9 - t.before throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 10 - t.beforeEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 11 - t.afterEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 12 - afterEach when test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 13 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.after() is called if test body throws\n        not ok 14 - t.after() is called if test body throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'bye'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # - after() called\n        1..14\n        # before 1 called\n        # before 2 called\n        # after 1 called\n        # after 2 called\n        # tests 38\n        # suites 8\n        # pass 14\n        # fail 22\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 5)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    not ok 7 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 1516.5469\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' describe hooks\\n' +\n            '   1 (*ms)\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        +   '### 0\\n'\n        -   '      *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         describe hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         describe hooks (*ms)\n        \n         before throws\n           1\n            'test did not finish before its parent and was cancelled'\n        \n           2\n            'test did not finish before its parent and was cancelled'\n        \n         before throws (*ms)\n        \n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         after throws\n           1 (*ms)\n           2 (*ms)\n         after throws (*ms)\n        \n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         beforeEach throws (*ms)\n        \n         afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         test hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         test hooks (*ms)\n        \n         t.before throws\n           1 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.before throws (*ms)\n        \n         t.beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.beforeEach throws (*ms)\n        \n         t.afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n         - after() called\n         before 1 called\n         before 2 called\n         after 1 called\n         after 2 called\n         tests 38\n         suites 8\n         pass 14\n         fail 22\n         cancelled 2\n         skipped 0\n         todo 0\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         1\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         2\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         before throws (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         after throws (*ms)\n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n      actual: |-\n         describe hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         describe hooks (*ms)\n        \n         before throws\n           1\n            'test did not finish before its parent and was cancelled'\n        \n           2\n            'test did not finish before its parent and was cancelled'\n        \n         before throws (*ms)\n        \n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         after throws\n           1 (*ms)\n           2 (*ms)\n         after throws (*ms)\n        \n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         beforeEach throws (*ms)\n        \n         afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         test hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         test hooks (*ms)\n        \n         t.before throws\n           1 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.before throws (*ms)\n        \n         t.beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.beforeEach throws (*ms)\n        \n         t.afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n         - after() called\n         before 1 called\n         before 2 called\n         after 1 called\n         after 2 called\n         tests 38\n         suites 8\n         pass 14\n         fail 22\n         cancelled 2\n         skipped 0\n         todo 0\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         1\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         2\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         before throws (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         after throws (*ms)\n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 6)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    not ok 8 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 1786.746\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'gonna timeout\\n' +\n            'TAP version 13\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        gonna timeout\n        TAP version 13\n        not gonna timeout\n        before each test second 2\n        after each test first 0\n        gonna timeout\n        # Subtest: before each timeout\n            # Subtest: first describe first test\n            not ok 1 - first describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running beforeEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: first describe second test\n            ok 2 - first describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 1 - before each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        after each test second 1\n        not gonna timeout\n        # Subtest: after each timeout\n            # Subtest: second describe first test\n            not ok 1 - second describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running afterEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: second describe second test\n            ok 2 - second describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - after each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..2\n        # tests 4\n        # suites 2\n        # pass 2\n        # fail 2\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        gonna timeout\n        TAP version 13\n        not gonna timeout\n        before each test second 2\n        after each test first 0\n        gonna timeout\n        # Subtest: before each timeout\n            # Subtest: first describe first test\n            not ok 1 - first describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running beforeEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: first describe second test\n            ok 2 - first describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 1 - before each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        after each test second 1\n        not gonna timeout\n        # Subtest: after each timeout\n            # Subtest: second describe first test\n            not ok 1 - second describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running afterEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: second describe second test\n            ok 2 - second describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - after each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..2\n        # tests 4\n        # suites 2\n        # pass 2\n        # fail 2\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 7)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    not ok 9 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 1417.3011\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe hooks with no global tests\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe hooks with no global tests\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks with no global tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 4\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe hooks with no global tests\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks with no global tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 4\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 8)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    not ok 10 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 1371.7945\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: 1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 9)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    not ok 11 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 1335.4476\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: 1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 10)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    not ok 12 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 1239.954\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'this is a test\\n' +\n            'TAP version 13\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        this is a test\n        TAP version 13\n        # Subtest: this is a test\n        ok 1 - this is a test\n          ---\n          duration_ms: *\n          ...\n        not ok 2 - /test/fixtures/test-runner/output/global_after_should_fail_the_test.js\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/global_after_should_fail_the_test.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'this should fail the test'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..1\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        this is a test\n        TAP version 13\n        # Subtest: this is a test\n        ok 1 - this is a test\n          ---\n          duration_ms: *\n          ...\n        not ok 2 - /test/fixtures/test-runner/output/global_after_should_fail_the_test.js\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/global_after_should_fail_the_test.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'this should fail the test'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..1\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 11)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 13 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 1191.1844\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 12)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 14 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 958.9249\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    not ok 15 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 915.2316\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: only = undefined\\n' +\n        ...\n            '# skipped 25\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: only = undefined\n        ok 1 - only = undefined # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = string\n        ok 2 - only = undefined, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = true\n        ok 3 - only = undefined, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = false\n        ok 4 - only = undefined, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false\n        ok 5 - only = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = string\n        ok 6 - only = false, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = true\n        ok 7 - only = false, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = false\n        ok 8 - only = false, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = string\n        ok 9 - only = true, skip = string # SKIP skip message\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = true\n        ok 10 - only = true, skip = true # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, with subtests\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 1\n            ok 3 - skipped subtest 1 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 2\n            ok 4 - skipped subtest 2 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 3\n            ok 5 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 4\n                # Subtest: running sub-subtest 1\n                ok 1 - running sub-subtest 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: running sub-subtest 2\n                ok 2 - running sub-subtest 2\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 1\n                ok 3 - skipped sub-subtest 1 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 2\n                ok 4 - skipped sub-subtest 2 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                1..4\n            ok 6 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 3\n            ok 7 - skipped subtest 3 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 4\n            ok 8 - skipped subtest 4 # SKIP\n              ---\n              duration_ms: *\n              ...\n            1..8\n        ok 11 - only = true, with subtests\n          ---\n          duration_ms: *\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: `it` subtest 1 should run\n            ok 1 - `it` subtest 1 should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 should not run\n            ok 2 - `it` subtest 2 should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 12 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with a mixture of subtests\n            # Subtest: `it` subtest 1\n            ok 1 - `it` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` async subtest 1\n            ok 2 - `it` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=true\n            ok 3 - `it` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=false\n            ok 4 - `it` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 3 skip\n            ok 5 - `it` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 4 todo\n            ok 6 - `it` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 1\n            ok 7 - `test` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` async subtest 1\n            ok 8 - `test` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=true\n            ok 9 - `test` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=false\n            ok 10 - `test` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 3 skip\n            ok 11 - `test` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 4 todo\n            ok 12 - `test` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..12\n        ok 13 - describe only = true, with a mixture of subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: subtest should run\n            ok 1 - subtest should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: async subtest should not run\n            ok 2 - async subtest should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: subtest should be skipped\n            ok 3 - subtest should be skipped # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 14 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..14\n        # tests 40\n        # suites 3\n        # pass 15\n        # fail 0\n        # cancelled 0\n        # skipped 25\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: only = undefined\n        ok 1 - only = undefined # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = string\n        ok 2 - only = undefined, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = true\n        ok 3 - only = undefined, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = false\n        ok 4 - only = undefined, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false\n        ok 5 - only = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = string\n        ok 6 - only = false, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = true\n        ok 7 - only = false, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = false\n        ok 8 - only = false, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = string\n        ok 9 - only = true, skip = string # SKIP skip message\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = true\n        ok 10 - only = true, skip = true # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, with subtests\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 1\n            ok 3 - skipped subtest 1 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 2\n            ok 4 - skipped subtest 2 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 3\n            ok 5 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 4\n                # Subtest: running sub-subtest 1\n                ok 1 - running sub-subtest 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: running sub-subtest 2\n                ok 2 - running sub-subtest 2\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 1\n                ok 3 - skipped sub-subtest 1 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 2\n                ok 4 - skipped sub-subtest 2 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                1..4\n            ok 6 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 3\n            ok 7 - skipped subtest 3 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 4\n            ok 8 - skipped subtest 4 # SKIP\n              ---\n              duration_ms: *\n              ...\n            1..8\n        ok 11 - only = true, with subtests\n          ---\n          duration_ms: *\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: `it` subtest 1 should run\n            ok 1 - `it` subtest 1 should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 should not run\n            ok 2 - `it` subtest 2 should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 12 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with a mixture of subtests\n            # Subtest: `it` subtest 1\n            ok 1 - `it` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` async subtest 1\n            ok 2 - `it` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=true\n            ok 3 - `it` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=false\n            ok 4 - `it` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 3 skip\n            ok 5 - `it` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 4 todo\n            ok 6 - `it` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 1\n            ok 7 - `test` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` async subtest 1\n            ok 8 - `test` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=true\n            ok 9 - `test` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=false\n            ok 10 - `test` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 3 skip\n            ok 11 - `test` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 4 todo\n            ok 12 - `test` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..12\n        ok 13 - describe only = true, with a mixture of subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: subtest should run\n            ok 1 - subtest should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: async subtest should not run\n            ok 2 - async subtest should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: subtest should be skipped\n            ok 3 - subtest should be skipped # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 14 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..14\n        # tests 40\n        # suites 3\n        # pass 15\n        # fail 0\n        # cancelled 0\n        # skipped 25\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 14)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 16 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 1730.5578\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    ok 17 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 1755.292\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    not ok 18 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 740.9613\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '✔ should pass (*ms)\\n' +\n            'ℹ tests 1\\n' +\n        ...\n            'ℹ skipped 0\\n' +\n            'ℹ todo 0\\n' +\n        +   'ℹ duration_ms *\\n' +\n        +   '### 0\\n'\n        -   'ℹ duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        ✔ should pass (*ms)\n        ℹ tests 1\n        ℹ suites 0\n        ℹ pass 1\n        ℹ fail 0\n        ℹ cancelled 0\n        ℹ skipped 0\n        ℹ todo 0\n        ℹ duration_ms *\n        \n      actual: |-\n        ✔ should pass (*ms)\n        ℹ tests 1\n        ℹ suites 0\n        ℹ pass 1\n        ℹ fail 0\n        ℹ cancelled 0\n        ℹ skipped 0\n        ℹ todo 0\n        ℹ duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 17)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    not ok 19 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 1633.8253\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' sync pass todo (*ms) # TODO\\n' +\n            ' sync pass todo with message (*ms) # this is a passing todo\\n' +\n        ...\n            '*\\n' +\n            ' sync throw fails at first (*ms)\\n' +\n        +   '  Error: thrown from subtest sync'... 1110 more characters\n        -   '  Error: thrown from subtest sync'... 1104 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      actual: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 18)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    not ok 20 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 1959.4723\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' sync pass todo (*ms) # TODO\\n' +\n            ' sync pass todo with message (*ms) # this is a passing todo\\n' +\n        ...\n            ' Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\\n' +\n            ' Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\\n' +\n        +   '### 0\\n' +\n        +   ' tests 76\\n' +\n        +   ' suites 0\\n' +\n        +   ' pass 35\\n' +\n        +   ' fail 25\\n' +\n        +   ' cancelled 3\\n' +\n        +   ' skipped 9\\n' +\n        +   ' todo 4\\n' +\n        +   ' duration_ms *\\n' +\n        +   '\\n' +\n        +   ' failing tests:\\n' +\n        +   '\\n' +\n        +   '*\\n' +\n        +   ' sync fail todo (*ms) # TODO\\n' +\n        +   '  Error: thrown from sync fail todo\\n' +\n        -   ' tests 76\\n' +\n        -   ' suites 0\\n' +\n        -   ' pass 35\\n' +\n        -   ' fail 25\\n' +\n        -   ' cancelled 3\\n' +\n        -   ' skipped 9\\n' +\n        -   ' todo 4\\n' +\n        -   ' duration_ms *\\n' +\n        -   '\\n' +\n        -   ' failing tests:\\n' +\n        -   '\\n' +\n        -   '*\\n' +\n        -   ' sync fail todo (*ms) # TODO\\n' +\n        -   '  Error: thrown from sync fail todo\\n' +\n        -   '      *\\n' +\n            '      *\\n' +\n            '      *\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        +   '\\n' +\n        +   '*\\n' +\n        +   ' sync fail todo with message (*ms) # this is a failing todo\\n' +\n        +   '  Error: thrown from sync fail todo with message\\n' +\n        -   '\\n' +\n        -   '*\\n' +\n        -   ' sync fail todo with message (*ms) # this is a failing todo\\n' +\n        -   '  Error: thrown from sync fail todo with message\\n' +\n        -   '      *\\n' +\n            '      *\\n' +\n            '      *\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        ...\n        -   '\\n' +\n        ...\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      actual: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        ### 0\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 21 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 1606.9847\n      ...\n    # Subtest: test-runner/output/output.js\n    not ok 22 - test-runner/output/output.js\n      ---\n      duration_ms: 1449.2886\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '      ...\\n' +\n            \"    # 'only' and 'runOnly' require the --test-only command-line option.\\n\" +\n        +   '    '... 6851 more characters\n        -   '    '... 6845 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..62\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 76\n        # suites 0\n        # pass 35\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..62\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 76\n        # suites 0\n        # pass 35\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 21)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    not ok 23 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 1940.9267\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '      ...\\n' +\n            \"    # 'only' and 'runOnly' require the --test-only command-line option.\\n\" +\n        +   '    '... 6941 more characters\n        -   '    '... 6913 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Subtest: last test\n        ok 63 - last test\n          ---\n          duration_ms: *\n          ...\n        1..63\n        # tests 77\n        # suites 0\n        # pass 36\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # /#/#/# 0\n        # Subtest: last test\n        ok 63 - last test\n          ---\n          duration_ms: *\n          ...\n        # /#/#/# 0\n        1..63\n        # tests 77\n        # suites 0\n        # pass 36\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 22)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    not ok 24 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 839.8039\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: top level test disabled\\n' +\n        ...\n            '# skipped 8\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: top level test disabled\n        ok 1 - top level test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test disabled\n        ok 2 - top level skipped test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test enabled\n        ok 3 - top level skipped test enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it enabled\n        ok 4 - top level it enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it disabled\n        ok 5 - top level it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it disabled\n        ok 6 - top level skipped it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it enabled\n        ok 7 - top level skipped it enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe never disabled\n        ok 8 - top level describe never disabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe disabled\n        ok 9 - top level skipped describe disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe enabled\n        ok 10 - top level skipped describe enabled # SKIP\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level runs because name includes PaTtErN\n        ok 11 - top level runs because name includes PaTtErN\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level test enabled\n            # Subtest: nested test runs because name includes PATTERN\n            ok 1 - nested test runs because name includes PATTERN\n              ---\n              duration_ms: *\n              ...\n            1..1\n        ok 12 - top level test enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe enabled\n            # Subtest: nested it not disabled\n            ok 1 - nested it not disabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested it enabled\n            ok 2 - nested it enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested describe not disabled\n            ok 3 - nested describe not disabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            # Subtest: nested describe enabled\n                # Subtest: is enabled\n                ok 1 - is enabled\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 4 - nested describe enabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..4\n        ok 13 - top level describe enabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: yes\n            # Subtest: no\n            ok 1 - no\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 14 - yes\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: no\n            # Subtest: no\n            ok 1 - no # SKIP test name does not match pattern\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no # SKIP test name does not match pattern\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 15 - no\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..15\n        # tests 21\n        # suites 10\n        # pass 13\n        # fail 0\n        # cancelled 0\n        # skipped 8\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: top level test disabled\n        ok 1 - top level test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test disabled\n        ok 2 - top level skipped test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test enabled\n        ok 3 - top level skipped test enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it enabled\n        ok 4 - top level it enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it disabled\n        ok 5 - top level it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it disabled\n        ok 6 - top level skipped it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it enabled\n        ok 7 - top level skipped it enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe never disabled\n        ok 8 - top level describe never disabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe disabled\n        ok 9 - top level skipped describe disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe enabled\n        ok 10 - top level skipped describe enabled # SKIP\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level runs because name includes PaTtErN\n        ok 11 - top level runs because name includes PaTtErN\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level test enabled\n            # Subtest: nested test runs because name includes PATTERN\n            ok 1 - nested test runs because name includes PATTERN\n              ---\n              duration_ms: *\n              ...\n            1..1\n        ok 12 - top level test enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe enabled\n            # Subtest: nested it not disabled\n            ok 1 - nested it not disabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested it enabled\n            ok 2 - nested it enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested describe not disabled\n            ok 3 - nested describe not disabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            # Subtest: nested describe enabled\n                # Subtest: is enabled\n                ok 1 - is enabled\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 4 - nested describe enabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..4\n        ok 13 - top level describe enabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: yes\n            # Subtest: no\n            ok 1 - no\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 14 - yes\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: no\n            # Subtest: no\n            ok 1 - no # SKIP test name does not match pattern\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no # SKIP test name does not match pattern\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 15 - no\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..15\n        # tests 21\n        # suites 10\n        # pass 13\n        # fail 0\n        # cancelled 0\n        # skipped 8\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    not ok 25 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 829.9904\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: enabled and only\\n' +\n        ...\n            '# skipped 3\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: enabled and only\n            # Subtest: enabled\n            ok 1 - enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: disabled but parent not\n            ok 2 - disabled but parent not\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 1 - enabled and only\n          ---\n          duration_ms: *\n          ...\n        # Subtest: enabled but not only\n        ok 2 - enabled but not only # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only does not match pattern\n        ok 3 - only does not match pattern # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: not only and does not match pattern\n        ok 4 - not only and does not match pattern # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        1..4\n        # tests 6\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 3\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: enabled and only\n            # Subtest: enabled\n            ok 1 - enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: disabled but parent not\n            ok 2 - disabled but parent not\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 1 - enabled and only\n          ---\n          duration_ms: *\n          ...\n        # Subtest: enabled but not only\n        ok 2 - enabled but not only # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only does not match pattern\n        ok 3 - only does not match pattern # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: not only and does not match pattern\n        ok 4 - not only and does not match pattern # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        1..4\n        # tests 6\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 3\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 24)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 26 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 621.1486\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 25)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 1.6021\n          ...\n        1..1\n    ok 27 - test-runner/output/default_output.js\n      ---\n      duration_ms: 166.7007\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    not ok 28 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 1061.078\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            'ok 1 - test\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - pre\n        ok 2 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - mid\n        ok 3 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - post\n        1..3\n        # tests 3\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - pre\n        ok 2 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - mid\n        ok 3 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - post\n        1..3\n        # tests 3\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 27)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    not ok 29 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 1164.6643\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: test\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: test\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: suite\n            # Subtest: test\n            ok 1 - test\n              ---\n              duration_ms: *\n              ...\n            # Subtest: scheduled async\n            ok 2 - scheduled async\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 2 - suite\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: scheduled async\n        ok 3 - scheduled async\n          ---\n          duration_ms: *\n          ...\n        1..3\n        # tests 4\n        # suites 1\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: test\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: suite\n            # Subtest: test\n            ok 1 - test\n              ---\n              duration_ms: *\n              ...\n            # Subtest: scheduled async\n            ok 2 - scheduled async\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 2 - suite\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: scheduled async\n        ok 3 - scheduled async\n          ---\n          duration_ms: *\n          ...\n        1..3\n        # tests 4\n        # suites 1\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 28)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 3.5608\n          ...\n        1..1\n    ok 30 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 109.9849\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 3.3677\n          ...\n        1..1\n    ok 31 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 109.6704\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    not ok 32 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 944.6593\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: escaped description \\\\\\\\ \\\\# \\\\\\\\\\\\#\\\\\\\\ \\\\\\\\n \\\\\\\\t \\\\\\\\f \\\\\\\\v \\\\\\\\b \\\\\\\\r\\n' +\n        ...\n            '# skipped 1\\n' +\n            '# todo 1\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n        ok 1 - escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped skip message\n        ok 2 - escaped skip message # SKIP \\#skip\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped todo message\n        ok 3 - escaped todo message # TODO \\#todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped diagnostic\n        ok 4 - escaped diagnostic\n          ---\n          duration_ms: *\n          ...\n        # \\#diagnostic\n        1..4\n        # tests 4\n        # suites 0\n        # pass 2\n        # fail 0\n        # cancelled 0\n        # skipped 1\n        # todo 1\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n        ok 1 - escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped skip message\n        ok 2 - escaped skip message # SKIP \\#skip\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped todo message\n        ok 3 - escaped todo message # TODO \\#todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped diagnostic\n        ok 4 - escaped diagnostic\n          ---\n          duration_ms: *\n          ...\n        # \\#diagnostic\n        1..4\n        # tests 4\n        # suites 0\n        # pass 2\n        # fail 0\n        # cancelled 0\n        # skipped 1\n        # todo 1\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 31)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    not ok 33 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 980.3456\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: ok\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: ok\n        ok 1 - ok\n          ---\n          duration_ms: *\n          ...\n        1..1\n        # Warning: Could not report code coverage. Error: Failed to collect coverage\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: ok\n        ok 1 - ok\n          ---\n          duration_ms: *\n          ...\n        1..1\n        # Warning: Could not report code coverage. Error: Failed to collect coverage\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 32)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    1..33\nnot ok 1 - test runner output\n  ---\n  duration_ms: 3230.6263\n  type: 'suite'\n  location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:140:1'\n  failureType: 'subtestsFailed'\n  error: '26 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 36\n# suites 1\n# pass 7\n# fail 26\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 3266.454\n### 0"},"time":3806.138,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"parallel/test-stream-duplex-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-duplex-destroy","id":678,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:173\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-duplex-destroy.js:127\n    at Duplex.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:554:12)\n    at Duplex.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v22.0.0-pre"},"time":355.972,"fullname":"parallel/test-stream-duplex-destroy","closingTestPoint":false}},{"testName":"parallel/test-stream-readable-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-readable-destroy","id":696,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:173\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-readable-destroy.js:118\n    at Readable.mustNotCall (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:554:12)\n    at Readable.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v22.0.0-pre"},"time":389.023,"fullname":"parallel/test-stream-readable-destroy","closingTestPoint":false}},{"testName":"parallel/test-runner-inspect","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-inspect","id":650,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[test] Connecting to a child Node process\n[test] Testing /json/list\n[err] (node:8044) Warning: Using the inspector with --test forces running at a concurrency of 1. Use the inspectPort option to run with concurrency\n[err] (Use `node --trace-warnings ...` to show where the warning was created)\n[err] \n[out] TAP version 13\n[out] \n[err] Debugger listening on ws://127.0.0.1:60405/dd7faa21-9ac3-482d-917d-2644ae46486e\n[err] \n[err] For help, see: https://nodejs.org/en/docs/inspector\n[err] \n[err] Debugger attached.\n[err] \n[err] For help, see: https://nodejs.org/en/docs/inspector\n[err] \n[out] # Debugger ending on ws://127.0.0.1:60405/dd7faa21-9ac3-482d-917d-2644ae46486e\n[out] \n[out] # Subtest: this should pass\n[out] \n[out] ok 1 - this should pass\n[out] \n[out]   ---\n[out]   duration_ms: 3.4401\n[out]   ...\n[out] \n[out] # \\#\\#\\# 0\n[out] \n[out] 1..1\n[out] \n[out] # tests 1\n[out] \n[out] # suites 0\n[out] \n[out] # pass 1\n[out] \n[out] # fail 0\n[out] \n[out] # cancelled 0\n[out] \n[out] # skipped 0\n[out] \n[out] # todo 0\n[out] \n[out] # duration_ms 323.9537\n[out] \n[err] ### 0\n[err] \nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '### 0\\r\\n'\n- ''\n    at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-inspect.mjs:82:10\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '### 0\\r\\n',\n  expected: '',\n  operator: 'strictEqual'\n}\n1"},"time":2484.012,"fullname":"parallel/test-runner-inspect","closingTestPoint":false}},{"testName":"parallel/test-runner-run","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-run","id":652,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: require('node:test').run\n    # Subtest: should run with no tests\n    ok 1 - should run with no tests\n      ---\n      duration_ms: 575.8291\n      ...\n    # Subtest: should fail with non existing file\n    ok 2 - should fail with non existing file\n      ---\n      duration_ms: 673.4656\n      ...\n    # Subtest: should succeed with a file\n    ok 3 - should succeed with a file\n      ---\n      duration_ms: 688.2518\n      ...\n    # Subtest: should run same file twice\n    ok 4 - should run same file twice\n      ---\n      duration_ms: 1062.5292\n      ...\n    # Subtest: should run a failed test\n    ok 5 - should run a failed test\n      ---\n      duration_ms: 671.9746\n      ...\n    # Subtest: should support timeout\n    ok 6 - should support timeout\n      ---\n      duration_ms: 716.1541\n      ...\n    # Subtest: should be piped with dot\n    ok 7 - should be piped with dot\n      ---\n      duration_ms: 685.8909\n      ...\n    # Subtest: should be piped with spec reporter\n        # Subtest: new spec\n        not ok 1 - new spec\n          ---\n          duration_ms: 558.7602\n          location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:78:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:85:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 0)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        # Subtest: spec()\n        not ok 2 - spec()\n          ---\n          duration_ms: 606.8232\n          location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:89:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:96:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 1)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        # Subtest: spec\n        not ok 3 - spec\n          ---\n          duration_ms: 629.94\n          location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:100:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:106:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 2)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        1..3\n    not ok 8 - should be piped with spec reporter\n      ---\n      duration_ms: 685.3721\n      type: 'suite'\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:77:3'\n      failureType: 'subtestsFailed'\n      error: '3 subtests failed'\n      code: 'ERR_TEST_FAILURE'\n      stack: |-\n        async Promise.all (index 7)\n      ...\n    # Subtest: should be piped with tap\n    not ok 9 - should be piped with tap\n      ---\n      duration_ms: 677.5193\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:111:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        \n        14 !== 13\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: 13\n      actual: 14\n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:115:12)\n        process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 8)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - RegExp\n    ok 10 - should skip tests not matching testNamePatterns - RegExp\n      ---\n      duration_ms: 684.3065\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - string\n    ok 11 - should skip tests not matching testNamePatterns - string\n      ---\n      duration_ms: 688.5429\n      ...\n    # Subtest: should pass only to children\n    ok 12 - should pass only to children\n      ---\n      duration_ms: 690.0936\n      ...\n    # Subtest: should emit \"test:watch:drained\" event on watch mode\n    ok 13 - should emit \"test:watch:drained\" event on watch mode\n      ---\n      duration_ms: 533.8657\n      ...\n    # Subtest: AbortSignal\n        # Subtest: should accept a signal\n        ok 1 - should accept a signal\n          ---\n          duration_ms: 479.2389\n          ...\n        # Subtest: should stop watch mode when abortSignal aborts\n        ok 2 - should stop watch mode when abortSignal aborts\n          ---\n          duration_ms: 516.5168\n          ...\n        # Subtest: should abort when test succeeded\n        ok 3 - should abort when test succeeded\n          ---\n          duration_ms: 965.4413\n          ...\n        # Subtest: should abort when test failed\n        ok 4 - should abort when test failed\n          ---\n          duration_ms: 942.5972\n          ...\n        1..4\n    ok 14 - AbortSignal\n      ---\n      duration_ms: 973.0035\n      type: 'suite'\n      ...\n    # Subtest: sharding\n        # Subtest: validation\n            # Subtest: should require shard.total when having shard option\n            ok 1 - should require shard.total when having shard option\n              ---\n              duration_ms: 5.6113\n              ...\n            # Subtest: should require shard.index when having shards option\n            ok 2 - should require shard.index when having shards option\n              ---\n              duration_ms: 5.2145\n              ...\n            # Subtest: should require shard.total to be greater than 0 when having shard option\n            ok 3 - should require shard.total to be greater than 0 when having shard option\n              ---\n              duration_ms: 4.9385\n              ...\n            # Subtest: should require shard.index to be greater than 0 when having shard option\n            ok 4 - should require shard.index to be greater than 0 when having shard option\n              ---\n              duration_ms: 4.1242\n              ...\n            # Subtest: should require shard.index to not be greater than the shards total when having shard option\n            ok 5 - should require shard.index to not be greater than the shards total when having shard option\n              ---\n              duration_ms: 3.8271\n              ...\n            # Subtest: should require watch mode to be disabled when having shard option\n            ok 6 - should require watch mode to be disabled when having shard option\n              ---\n              duration_ms: 3.6975\n              ...\n            1..6\n        ok 1 - validation\n          ---\n          duration_ms: 257.3713\n          type: 'suite'\n          ...\n        # Subtest: should run only the tests files matching the shard index\n        ok 2 - should run only the tests files matching the shard index\n          ---\n          duration_ms: 1117.1754\n          ...\n        # Subtest: different shards should not run the same file\n        ok 3 - different shards should not run the same file\n          ---\n          duration_ms: 1298.1792\n          ...\n        # Subtest: combination of all shards should be all the tests\n        ok 4 - combination of all shards should be all the tests\n          ---\n          duration_ms: 1293.225\n          ...\n        1..4\n    ok 15 - sharding\n      ---\n      duration_ms: 1307.7792\n      type: 'suite'\n      ...\n    # Subtest: validation\n        # Subtest: should only allow array in options.files\n        ok 1 - should only allow array in options.files\n          ---\n          duration_ms: 399.9611\n          ...\n        # Subtest: should only allow object as options\n        ok 2 - should only allow object as options\n          ---\n          duration_ms: 396.1221\n          ...\n        1..2\n    ok 16 - validation\n      ---\n      duration_ms: 415.4226\n      type: 'suite'\n      ...\n    1..16\nnot ok 1 - require('node:test').run\n  ---\n  duration_ms: 1456.446\n  type: 'suite'\n  location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:10:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 30\n# suites 6\n# pass 26\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 1478.0987\n(node:8468) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 uncaughtException listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:8468) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 unhandledRejection listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(node:8468) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 beforeExit listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0"},"time":2032.011,"fullname":"parallel/test-runner-run","closingTestPoint":false}},{"testName":"parallel/test-whatwg-webstreams-adapters-to-writablestream","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-2","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-whatwg-webstreams-adapters-to-writablestream","id":852,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\nnode:internal/webstreams/adapters:204\n    controller.error(new AbortError());\n               ^\n\nTypeError: Cannot read properties of undefined (reading 'error')\n    at TestWritable.<anonymous> (node:internal/webstreams/adapters:204:16)\n    at TestWritable.<anonymous> (node:internal/util:522:12)\n    at TestWritable.onclose (node:internal/streams/end-of-stream:162:14)\n    at TestWritable.emit (node:events:519:28)\n    at emitCloseNT (node:internal/streams/destroy:152:10)\n    at node:internal/streams/destroy:121:9\n    at node:internal/process/task_queues:140:7\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at AsyncResource.runMicrotask (node:internal/process/task_queues:137:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\nNode.js v22.0.0-pre"},"time":280.986,"fullname":"parallel/test-whatwg-webstreams-adapters-to-writablestream","closingTestPoint":false}},{"testName":"parallel/test-fs-write-stream-patch-open","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-fs-write-stream-patch-open","id":317,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 2.\n    at Proxy.mustCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-write-stream-patch-open.js:34:42\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)\n(node:11980) [DEP0135] DeprecationWarning: WriteStream.prototype.open() is deprecated\n(Use `node --trace-deprecation ...` to show where the warning was created)\nnode:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n1 !== 0\n\n    at ChildProcess.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-fs-write-stream-patch-open.js:18:12)\n    at ChildProcess.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at ChildProcess.emit (node:events:519:28)\n    at ChildProcess._handle.onexit (node:internal/child_process:294:12) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":571.402,"fullname":"parallel/test-fs-write-stream-patch-open","closingTestPoint":false}},{"testName":"parallel/test-runner-cli","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-cli","id":654,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '### 0\\r\\n'\n- ''\n    at Object.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-cli.js:29:10)\n    at Module._compile (node:internal/modules/cjs/loader:1375:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1434:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '### 0\\r\\n',\n  expected: '',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":2370.596,"fullname":"parallel/test-runner-cli","closingTestPoint":false}},{"testName":"parallel/test-runner-output","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-output","id":660,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test runner output\n    # Subtest: test-runner/output/abort.js\n    not ok 1 - test-runner/output/abort.js\n      ---\n      duration_ms: 1539.5648\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: promise timeout signal\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: promise timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - promise timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: promise abort signal\n        not ok 2 - promise abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 3 - callback timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback abort signal\n        not ok 4 - callback abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..4\n        # tests 22\n        # suites 0\n        # pass 8\n        # fail 0\n        # cancelled 14\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: promise timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):7'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - promise timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: promise abort signal\n        not ok 2 - promise abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort.js:(LINE):5'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 3 - callback timeout signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback abort signal\n        not ok 4 - callback abort signal\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/abort.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..4\n        # tests 22\n        # suites 0\n        # pass 8\n        # fail 0\n        # cancelled 14\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 0)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/abort_suite.js\n    not ok 2 - test-runner/output/abort_suite.js\n      ---\n      duration_ms: 1686.6585\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe timeout signal\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - describe timeout signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe abort signal\n        not ok 2 - describe abort signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..2\n        # tests 9\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 5\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe timeout signal\n            # Subtest: ok 1\n            ok 1 - ok 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 2\n            ok 2 - ok 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 3\n            ok 3 - ok 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: ok 4\n            ok 4 - ok 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: not ok 1\n            not ok 5 - not ok 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 2\n            not ok 6 - not ok 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: not ok 3\n            not ok 7 - not ok 3\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 4\n            not ok 8 - not ok 4\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: not ok 5\n            not ok 9 - not ok 5\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):3'\n              failureType: 'testAborted'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..9\n        not ok 1 - describe timeout signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'The operation was aborted due to timeout'\n          code: 23\n          name: 'TimeoutError'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe abort signal\n        not ok 2 - describe abort signal\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_suite.js:(LINE):1'\n          failureType: 'testAborted'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..2\n        # tests 9\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 5\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 1)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/abort_hooks.js\n    not ok 3 - test-runner/output/abort_hooks.js\n      ---\n      duration_ms: 862.5317\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'before\\n' +\n            '2.1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        before\n        2.1\n        2.2\n        after\n        beforeEach\n        4.1\n        afterEach\n        4.2\n        TAP version 13\n        # Subtest: 1 before describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 1 - 1 before describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 2 after describe\n            # Subtest: test 1\n            ok 1 - test 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: test 2\n            ok 2 - test 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - 2 after describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 3 beforeEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 3 - 3 beforeEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: 4 afterEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - 4 afterEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..4\n        # tests 8\n        # suites 4\n        # pass 2\n        # fail 4\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        before\n        2.1\n        2.2\n        after\n        beforeEach\n        4.1\n        afterEach\n        4.2\n        TAP version 13\n        # Subtest: 1 before describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 1 - 1 before describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 2 after describe\n            # Subtest: test 1\n            ok 1 - test 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: test 2\n            ok 2 - test 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - 2 after describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'This operation was aborted'\n          code: 20\n          name: 'AbortError'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: 3 beforeEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 3 - 3 beforeEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: 4 afterEach describe\n            # Subtest: test 1\n            not ok 1 - test 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: test 2\n            not ok 2 - test 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'This operation was aborted'\n              code: 20\n              name: 'AbortError'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - 4 afterEach describe\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/abort_hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..4\n        # tests 8\n        # suites 4\n        # pass 2\n        # fail 4\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 2)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/describe_it.js\n    not ok 4 - test-runner/output/describe_it.js\n      ---\n      duration_ms: 1515.6957\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '    not ok 1 - sync throw fails at first\\n' +\n            '      ---\\n' +\n        +   '     '... 7362 more characters\n        -   '     '... 7356 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync todo\n        not ok 3 - sync todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):4'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync todo with message\n        not ok 4 - sync todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: mixing describe/it and test should work\n        ok 11 - mixing describe/it and test should work\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 12 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 13 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: async assertion fail\n        not ok 14 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 15 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 16 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 17 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 18 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 19 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 20 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 21 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: mixing describe/it and test should work\n            ok 2 - mixing describe/it and test should work\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 22 - subtest sync throw fail\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 23 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 24 - level 0a\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: custom inspect symbol fail\n        not ok 49 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 50 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 51 - subtest sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: describe sync throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 52 - describe sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe async throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 53 - describe async throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: timeouts\n            # Subtest: timed out async test\n            not ok 1 - timed out async test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: timed out callback test\n            not ok 2 - timed out callback test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: large timeout async test is ok\n            ok 3 - large timeout async test is ok\n              ---\n              duration_ms: *\n              ...\n            # Subtest: large timeout callback test is ok\n            ok 4 - large timeout callback test is ok\n              ---\n              duration_ms: *\n              ...\n            1..4\n        not ok 54 - timeouts\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: successful thenable\n            # Subtest: successful thenable\n            ok 1 - successful thenable\n              ---\n              duration_ms: *\n              ...\n            # Subtest: rejected thenable\n            not ok 2 - rejected thenable\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'custom error'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n              ...\n            1..2\n        not ok 55 - successful thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: rejected thenable\n        not ok 56 - rejected thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: async describe function\n            # Subtest: it inside describe 1\n            ok 1 - it inside describe 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: it inside describe 2\n            ok 2 - it inside describe 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: inner describe\n                # Subtest: it inside inner describe\n                ok 1 - it inside inner describe\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 3 - inner describe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 57 - async describe function\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest fail\n        not ok 58 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):5'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..58\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 67\n        # suites 11\n        # pass 31\n        # fail 19\n        # cancelled 4\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync todo\n        not ok 3 - sync todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):4'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync todo with message\n        not ok 4 - sync todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'should not count as a failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: mixing describe/it and test should work\n        ok 11 - mixing describe/it and test should work\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 12 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 13 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: async assertion fail\n        not ok 14 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 15 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 16 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 17 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 18 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 19 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 20 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 21 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: mixing describe/it and test should work\n            ok 2 - mixing describe/it and test should work\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 22 - subtest sync throw fail\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 23 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 24 - level 0a\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: custom inspect symbol fail\n        not ok 49 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 50 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n              ...\n            1..2\n        not ok 51 - subtest sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: describe sync throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 52 - describe sync throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: describe async throw fails\n            # Subtest: should not run\n            not ok 1 - should not run\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..1\n        not ok 53 - describe async throw fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from describe'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: timeouts\n            # Subtest: timed out async test\n            not ok 1 - timed out async test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: timed out callback test\n            not ok 2 - timed out callback test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testTimeoutFailure'\n              error: 'test timed out after 5ms'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: large timeout async test is ok\n            ok 3 - large timeout async test is ok\n              ---\n              duration_ms: *\n              ...\n            # Subtest: large timeout callback test is ok\n            ok 4 - large timeout callback test is ok\n              ---\n              duration_ms: *\n              ...\n            1..4\n        not ok 54 - timeouts\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: successful thenable\n            # Subtest: successful thenable\n            ok 1 - successful thenable\n              ---\n              duration_ms: *\n              ...\n            # Subtest: rejected thenable\n            not ok 2 - rejected thenable\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'custom error'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n              ...\n            1..2\n        not ok 55 - successful thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: rejected thenable\n        not ok 56 - rejected thenable\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: async describe function\n            # Subtest: it inside describe 1\n            ok 1 - it inside describe 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: it inside describe 2\n            ok 2 - it inside describe 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: inner describe\n                # Subtest: it inside inner describe\n                ok 1 - it inside inner describe\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 3 - inner describe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 57 - async describe function\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: invalid subtest fail\n        not ok 58 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/describe_it.js:(LINE):5'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..58\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 67\n        # suites 11\n        # pass 31\n        # fail 19\n        # cancelled 4\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 3)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/describe_nested.js\n    not ok 5 - test-runner/output/describe_nested.js\n      ---\n      duration_ms: 785.2992\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: nested - no tests\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: nested - no tests\n            # Subtest: nested\n                # Subtest: nested\n                ok 1 - nested\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 1 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..1\n        ok 1 - nested - no tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 1\n        # suites 2\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: nested - no tests\n            # Subtest: nested\n                # Subtest: nested\n                ok 1 - nested\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 1 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..1\n        ok 1 - nested - no tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 1\n        # suites 2\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 4)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks.js\n    not ok 6 - test-runner/output/hooks.js\n      ---\n      duration_ms: 861.5789\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe hooks\\n' +\n        ...\n            '        *\\n' +\n            '        *\\n' +\n        +   '        *'... 1160 more characters\n        -   '        *'... 1154 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 2 - before throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'before'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: after throws\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 3 - after throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'after'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - beforeEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 5 - afterEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 6 - afterEach when test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 7 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: test hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 8 - test hooks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: t.before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 9 - t.before throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 10 - t.beforeEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 11 - t.afterEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 12 - afterEach when test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 13 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.after() is called if test body throws\n        not ok 14 - t.after() is called if test body throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'bye'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # - after() called\n        1..14\n        # before 1 called\n        # before 2 called\n        # after 1 called\n        # after 2 called\n        # tests 38\n        # suites 8\n        # pass 14\n        # fail 22\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            1..2\n        not ok 2 - before throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'before'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: after throws\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 3 - after throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'after'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 4 - beforeEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                async Promise.all (index 0)\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 5 - afterEach throws\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 6 - afterEach when test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                new Promise (<anonymous>)\n                *\n                *\n                Array.map (<anonymous>)\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 7 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: test hooks\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 8 - test hooks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: t.before throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'before'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 9 - t.before throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.beforeEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'beforeEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 10 - t.beforeEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.afterEach throws\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 11 - t.afterEach throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach when test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 12 - afterEach when test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: afterEach throws and test fails\n            # Subtest: 1\n            not ok 1 - 1\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'test'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: 2\n            not ok 2 - 2\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/hooks.js:(LINE):11'\n              failureType: 'hookFailed'\n              error: 'afterEach'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 13 - afterEach throws and test fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: t.after() is called if test body throws\n        not ok 14 - t.after() is called if test body throws\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/hooks.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'bye'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n          ...\n        # - after() called\n        1..14\n        # before 1 called\n        # before 2 called\n        # after 1 called\n        # after 2 called\n        # tests 38\n        # suites 8\n        # pass 14\n        # fail 22\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 5)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks_spec_reporter.js\n    not ok 7 - test-runner/output/hooks_spec_reporter.js\n      ---\n      duration_ms: 1658.6705\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' describe hooks\\n' +\n            '   1 (*ms)\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        +   '### 0\\n'\n        -   '      *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         describe hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         describe hooks (*ms)\n        \n         before throws\n           1\n            'test did not finish before its parent and was cancelled'\n        \n           2\n            'test did not finish before its parent and was cancelled'\n        \n         before throws (*ms)\n        \n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         after throws\n           1 (*ms)\n           2 (*ms)\n         after throws (*ms)\n        \n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         beforeEach throws (*ms)\n        \n         afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         test hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         test hooks (*ms)\n        \n         t.before throws\n           1 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.before throws (*ms)\n        \n         t.beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.beforeEach throws (*ms)\n        \n         t.afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n         - after() called\n         before 1 called\n         before 2 called\n         after 1 called\n         after 2 called\n         tests 38\n         suites 8\n         pass 14\n         fail 22\n         cancelled 2\n         skipped 0\n         todo 0\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         1\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         2\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         before throws (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         after throws (*ms)\n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n      actual: |-\n         describe hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         describe hooks (*ms)\n        \n         before throws\n           1\n            'test did not finish before its parent and was cancelled'\n        \n           2\n            'test did not finish before its parent and was cancelled'\n        \n         before throws (*ms)\n        \n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         after throws\n           1 (*ms)\n           2 (*ms)\n         after throws (*ms)\n        \n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         beforeEach throws (*ms)\n        \n         afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                at async Promise.all (index 0)\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                at new Promise (<anonymous>)\n                *\n                *\n                at Array.map (<anonymous>)\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         test hooks\n           1 (*ms)\n           2 (*ms)\n           nested\n             nested 1 (*ms)\n             nested 2 (*ms)\n           nested (*ms)\n        \n         test hooks (*ms)\n        \n         t.before throws\n           1 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: before\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.before throws (*ms)\n        \n         t.beforeEach throws\n           1 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: beforeEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.beforeEach throws (*ms)\n        \n         t.afterEach throws\n           1 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         t.afterEach throws (*ms)\n        \n         afterEach when test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n         afterEach when test fails (*ms)\n        \n         afterEach throws and test fails\n           1 (*ms)\n            Error: test\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           2 (*ms)\n            Error: afterEach\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         afterEach throws and test fails (*ms)\n        \n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        \n         - after() called\n         before 1 called\n         before 2 called\n         after 1 called\n         after 2 called\n         tests 38\n         suites 8\n         pass 14\n         fail 22\n         cancelled 2\n         skipped 0\n         todo 0\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         1\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         2\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         before throws (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         after throws (*ms)\n          Error: after\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              at async Promise.all (index 0)\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              at new Promise (<anonymous>)\n              *\n              *\n              at Array.map (<anonymous>)\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: before\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: beforeEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         1 (*ms)\n          Error: test\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         2 (*ms)\n          Error: afterEach\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         t.after() is called if test body throws (*ms)\n          Error: bye\n              *\n              *\n              *\n              *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 6)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n    not ok 8 - test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js\n      ---\n      duration_ms: 1932.6452\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'gonna timeout\\n' +\n            'TAP version 13\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        gonna timeout\n        TAP version 13\n        not gonna timeout\n        before each test second 2\n        after each test first 0\n        gonna timeout\n        # Subtest: before each timeout\n            # Subtest: first describe first test\n            not ok 1 - first describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running beforeEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: first describe second test\n            ok 2 - first describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 1 - before each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        after each test second 1\n        not gonna timeout\n        # Subtest: after each timeout\n            # Subtest: second describe first test\n            not ok 1 - second describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running afterEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: second describe second test\n            ok 2 - second describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - after each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..2\n        # tests 4\n        # suites 2\n        # pass 2\n        # fail 2\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        gonna timeout\n        TAP version 13\n        not gonna timeout\n        before each test second 2\n        after each test first 0\n        gonna timeout\n        # Subtest: before each timeout\n            # Subtest: first describe first test\n            not ok 1 - first describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running beforeEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: first describe second test\n            ok 2 - first describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 1 - before each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        after each test second 1\n        not gonna timeout\n        # Subtest: after each timeout\n            # Subtest: second describe first test\n            not ok 1 - second describe first test\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):3'\n              failureType: 'hookFailed'\n              error: 'failed running afterEach hook'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                async Promise.all (index 0)\n              ...\n            # Subtest: second describe second test\n            ok 2 - second describe second test\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 2 - after each timeout\n          ---\n          duration_ms: *\n          type: 'suite'\n          location: '/test/fixtures/test-runner/output/timeout_in_before_each_should_not_affect_further_tests.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        1..2\n        # tests 4\n        # suites 2\n        # pass 2\n        # fail 2\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 7)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/hooks-with-no-global-test.js\n    not ok 9 - test-runner/output/hooks-with-no-global-test.js\n      ---\n      duration_ms: 831.4874\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: describe hooks with no global tests\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: describe hooks with no global tests\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks with no global tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 4\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: describe hooks with no global tests\n            # Subtest: 1\n            ok 1 - 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: 2\n            ok 2 - 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested\n                # Subtest: nested 1\n                ok 1 - nested 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: nested 2\n                ok 2 - nested 2\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - nested\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 1 - describe hooks with no global tests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..1\n        # tests 4\n        # suites 2\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 8)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/before-and-after-each-too-many-listeners.js\n    not ok 10 - test-runner/output/before-and-after-each-too-many-listeners.js\n      ---\n      duration_ms: 735.7839\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: 1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 9)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n    not ok 11 - test-runner/output/before-and-after-each-with-timeout-too-many-listeners.js\n      ---\n      duration_ms: 828.2694\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: 1\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: 1\n        ok 1 - 1\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 2\n        ok 2 - 2\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 3\n        ok 3 - 3\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 4\n        ok 4 - 4\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 5\n        ok 5 - 5\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 6\n        ok 6 - 6\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 7\n        ok 7 - 7\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 8\n        ok 8 - 8\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 9\n        ok 9 - 9\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 10\n        ok 10 - 10\n          ---\n          duration_ms: *\n          ...\n        # Subtest: 11\n        ok 11 - 11\n          ---\n          duration_ms: *\n          ...\n        1..11\n        # tests 11\n        # suites 0\n        # pass 11\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 10)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/global_after_should_fail_the_test.js\n    not ok 12 - test-runner/output/global_after_should_fail_the_test.js\n      ---\n      duration_ms: 761.7489\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'this is a test\\n' +\n            'TAP version 13\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        this is a test\n        TAP version 13\n        # Subtest: this is a test\n        ok 1 - this is a test\n          ---\n          duration_ms: *\n          ...\n        not ok 2 - /test/fixtures/test-runner/output/global_after_should_fail_the_test.js\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/global_after_should_fail_the_test.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'this should fail the test'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..1\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        this is a test\n        TAP version 13\n        # Subtest: this is a test\n        ok 1 - this is a test\n          ---\n          duration_ms: *\n          ...\n        not ok 2 - /test/fixtures/test-runner/output/global_after_should_fail_the_test.js\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/global_after_should_fail_the_test.js:(LINE):1'\n          failureType: 'hookFailed'\n          error: 'this should fail the test'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        1..1\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 11)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/no_refs.js\n    not ok 13 - test-runner/output/no_refs.js\n      ---\n      duration_ms: 1306.1653\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: does not keep event loop alive\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: does not keep event loop alive\n            # Subtest: +does not keep event loop alive\n            not ok 1 - +does not keep event loop alive\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):11'\n              failureType: 'cancelledByParent'\n              error: 'Promise resolution is still pending but the event loop has already resolved'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n              ...\n            1..1\n        not ok 1 - does not keep event loop alive\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/no_refs.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..1\n        # tests 2\n        # suites 0\n        # pass 0\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 12)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/no_tests.js\n    ok 14 - test-runner/output/no_tests.js\n      ---\n      duration_ms: 1058.5786\n      ...\n    # Subtest: test-runner/output/only_tests.js\n    not ok 15 - test-runner/output/only_tests.js\n      ---\n      duration_ms: 1103.5644\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: only = undefined\\n' +\n        ...\n            '# skipped 25\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: only = undefined\n        ok 1 - only = undefined # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = string\n        ok 2 - only = undefined, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = true\n        ok 3 - only = undefined, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = false\n        ok 4 - only = undefined, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false\n        ok 5 - only = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = string\n        ok 6 - only = false, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = true\n        ok 7 - only = false, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = false\n        ok 8 - only = false, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = string\n        ok 9 - only = true, skip = string # SKIP skip message\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = true\n        ok 10 - only = true, skip = true # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, with subtests\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 1\n            ok 3 - skipped subtest 1 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 2\n            ok 4 - skipped subtest 2 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 3\n            ok 5 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 4\n                # Subtest: running sub-subtest 1\n                ok 1 - running sub-subtest 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: running sub-subtest 2\n                ok 2 - running sub-subtest 2\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 1\n                ok 3 - skipped sub-subtest 1 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 2\n                ok 4 - skipped sub-subtest 2 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                1..4\n            ok 6 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 3\n            ok 7 - skipped subtest 3 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 4\n            ok 8 - skipped subtest 4 # SKIP\n              ---\n              duration_ms: *\n              ...\n            1..8\n        ok 11 - only = true, with subtests\n          ---\n          duration_ms: *\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: `it` subtest 1 should run\n            ok 1 - `it` subtest 1 should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 should not run\n            ok 2 - `it` subtest 2 should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 12 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with a mixture of subtests\n            # Subtest: `it` subtest 1\n            ok 1 - `it` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` async subtest 1\n            ok 2 - `it` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=true\n            ok 3 - `it` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=false\n            ok 4 - `it` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 3 skip\n            ok 5 - `it` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 4 todo\n            ok 6 - `it` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 1\n            ok 7 - `test` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` async subtest 1\n            ok 8 - `test` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=true\n            ok 9 - `test` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=false\n            ok 10 - `test` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 3 skip\n            ok 11 - `test` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 4 todo\n            ok 12 - `test` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..12\n        ok 13 - describe only = true, with a mixture of subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: subtest should run\n            ok 1 - subtest should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: async subtest should not run\n            ok 2 - async subtest should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: subtest should be skipped\n            ok 3 - subtest should be skipped # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 14 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..14\n        # tests 40\n        # suites 3\n        # pass 15\n        # fail 0\n        # cancelled 0\n        # skipped 25\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: only = undefined\n        ok 1 - only = undefined # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = string\n        ok 2 - only = undefined, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = true\n        ok 3 - only = undefined, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = undefined, skip = false\n        ok 4 - only = undefined, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false\n        ok 5 - only = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = string\n        ok 6 - only = false, skip = string # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = true\n        ok 7 - only = false, skip = true # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = false, skip = false\n        ok 8 - only = false, skip = false # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = string\n        ok 9 - only = true, skip = string # SKIP skip message\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, skip = true\n        ok 10 - only = true, skip = true # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only = true, with subtests\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 1\n            ok 3 - skipped subtest 1 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 2\n            ok 4 - skipped subtest 2 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 3\n            ok 5 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 4\n                # Subtest: running sub-subtest 1\n                ok 1 - running sub-subtest 1\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: running sub-subtest 2\n                ok 2 - running sub-subtest 2\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 1\n                ok 3 - skipped sub-subtest 1 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: skipped sub-subtest 2\n                ok 4 - skipped sub-subtest 2 # SKIP 'only' option not set\n                  ---\n                  duration_ms: *\n                  ...\n                1..4\n            ok 6 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 3\n            ok 7 - skipped subtest 3 # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: skipped subtest 4\n            ok 8 - skipped subtest 4 # SKIP\n              ---\n              duration_ms: *\n              ...\n            1..8\n        ok 11 - only = true, with subtests\n          ---\n          duration_ms: *\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: `it` subtest 1 should run\n            ok 1 - `it` subtest 1 should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 should not run\n            ok 2 - `it` subtest 2 should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 12 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with a mixture of subtests\n            # Subtest: `it` subtest 1\n            ok 1 - `it` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` async subtest 1\n            ok 2 - `it` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=true\n            ok 3 - `it` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 2 only=false\n            ok 4 - `it` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 3 skip\n            ok 5 - `it` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `it` subtest 4 todo\n            ok 6 - `it` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 1\n            ok 7 - `test` subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` async subtest 1\n            ok 8 - `test` async subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=true\n            ok 9 - `test` subtest 2 only=true\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 2 only=false\n            ok 10 - `test` subtest 2 only=false # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 3 skip\n            ok 11 - `test` subtest 3 skip # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: `test` subtest 4 todo\n            ok 12 - `test` subtest 4 todo # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..12\n        ok 13 - describe only = true, with a mixture of subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: describe only = true, with subtests\n            # Subtest: subtest should run\n            ok 1 - subtest should run\n              ---\n              duration_ms: *\n              ...\n            # Subtest: async subtest should not run\n            ok 2 - async subtest should not run # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            # Subtest: subtest should be skipped\n            ok 3 - subtest should be skipped # SKIP 'only' option not set\n              ---\n              duration_ms: *\n              ...\n            1..3\n        ok 14 - describe only = true, with subtests\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..14\n        # tests 40\n        # suites 3\n        # pass 15\n        # fail 0\n        # cancelled 0\n        # skipped 25\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 14)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/dot_reporter.js\n    ok 16 - test-runner/output/dot_reporter.js\n      ---\n      duration_ms: 2096.7819\n      ...\n    # Subtest: test-runner/output/junit_reporter.js\n    ok 17 - test-runner/output/junit_reporter.js\n      ---\n      duration_ms: 2203.9997\n      ...\n    # Subtest: test-runner/output/spec_reporter_successful.js\n    not ok 18 - test-runner/output/spec_reporter_successful.js\n      ---\n      duration_ms: 1101.2715\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          '✔ should pass (*ms)\\n' +\n            'ℹ tests 1\\n' +\n        ...\n            'ℹ skipped 0\\n' +\n            'ℹ todo 0\\n' +\n        +   'ℹ duration_ms *\\n' +\n        +   '### 0\\n'\n        -   'ℹ duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        ✔ should pass (*ms)\n        ℹ tests 1\n        ℹ suites 0\n        ℹ pass 1\n        ℹ fail 0\n        ℹ cancelled 0\n        ℹ skipped 0\n        ℹ todo 0\n        ℹ duration_ms *\n        \n      actual: |-\n        ✔ should pass (*ms)\n        ℹ tests 1\n        ℹ suites 0\n        ℹ pass 1\n        ℹ fail 0\n        ℹ cancelled 0\n        ℹ skipped 0\n        ℹ todo 0\n        ℹ duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 17)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/spec_reporter.js\n    not ok 19 - test-runner/output/spec_reporter.js\n      ---\n      duration_ms: 2243.3133\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' sync pass todo (*ms) # TODO\\n' +\n            ' sync pass todo with message (*ms) # this is a passing todo\\n' +\n        ...\n            '*\\n' +\n            ' sync throw fails at first (*ms)\\n' +\n        +   '  Error: thrown from subtest sync'... 1110 more characters\n        -   '  Error: thrown from subtest sync'... 1104 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      actual: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1, [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]] }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: [Object],\n            expected: [Object],\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 18)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/spec_reporter_cli.js\n    not ok 20 - test-runner/output/spec_reporter_cli.js\n      ---\n      duration_ms: 2460.3023\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          ' sync pass todo (*ms) # TODO\\n' +\n            ' sync pass todo with message (*ms) # this is a passing todo\\n' +\n        ...\n            ' Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\\n' +\n            ' Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\\n' +\n        +   '### 0\\n' +\n        +   ' tests 76\\n' +\n        +   ' suites 0\\n' +\n        +   ' pass 35\\n' +\n        +   ' fail 25\\n' +\n        +   ' cancelled 3\\n' +\n        +   ' skipped 9\\n' +\n        +   ' todo 4\\n' +\n        +   ' duration_ms *\\n' +\n        +   '\\n' +\n        +   ' failing tests:\\n' +\n        +   '\\n' +\n        +   '*\\n' +\n        +   ' sync fail todo (*ms) # TODO\\n' +\n        +   '  Error: thrown from sync fail todo\\n' +\n        -   ' tests 76\\n' +\n        -   ' suites 0\\n' +\n        -   ' pass 35\\n' +\n        -   ' fail 25\\n' +\n        -   ' cancelled 3\\n' +\n        -   ' skipped 9\\n' +\n        -   ' todo 4\\n' +\n        -   ' duration_ms *\\n' +\n        -   '\\n' +\n        -   ' failing tests:\\n' +\n        -   '\\n' +\n        -   '*\\n' +\n        -   ' sync fail todo (*ms) # TODO\\n' +\n        -   '  Error: thrown from sync fail todo\\n' +\n        -   '      *\\n' +\n            '      *\\n' +\n            '      *\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        +   '\\n' +\n        +   '*\\n' +\n        +   ' sync fail todo with message (*ms) # this is a failing todo\\n' +\n        +   '  Error: thrown from sync fail todo with message\\n' +\n        -   '\\n' +\n        -   '*\\n' +\n        -   ' sync fail todo with message (*ms) # this is a failing todo\\n' +\n        -   '  Error: thrown from sync fail todo with message\\n' +\n        -   '      *\\n' +\n            '      *\\n' +\n            '      *\\n' +\n        ...\n            '      *\\n' +\n            '      *\\n' +\n        +   '      *\\n' +\n        ...\n        -   '\\n' +\n        ...\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n      actual: |-\n         sync pass todo (*ms) # TODO\n         sync pass todo with message (*ms) # this is a passing todo\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         sync skip pass (*ms) # SKIP\n         sync skip pass with message (*ms) # this is skipped\n         sync pass (*ms)\n         this test should pass\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip pass (*ms) # SKIP\n         async pass (*ms)\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n         resolve pass (*ms)\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         unhandled rejection - passes but warns (*ms)\n         async unhandled rejection - passes but warns (*ms)\n         immediate throw - passes but warns (*ms)\n         immediate reject - passes but warns (*ms)\n         immediate resolve pass (*ms)\n         subtest sync throw fail\n           +sync throw fail (*ms)\n            Error: thrown from subtest sync throw fail\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           this subtest should make its parent test fail\n         subtest sync throw fail (*ms)\n        \n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n         level 0a\n           level 1a (*ms)\n           level 1b (*ms)\n           level 1c (*ms)\n           level 1d (*ms)\n         level 0a (*ms)\n        \n         top level\n           +long running (*ms)\n            'test did not finish before its parent and was cancelled'\n        \n           +short running\n             ++short running (*ms)\n           +short running (*ms)\n        \n         top level (*ms)\n        \n         invalid subtest - pass but subtest fails (*ms)\n         sync skip option (*ms) # SKIP\n         sync skip option with message (*ms) # this is skipped\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         <anonymous> (*ms)\n         functionOnly (*ms)\n         <anonymous> (*ms)\n         test with only a name provided (*ms)\n         <anonymous> (*ms)\n         <anonymous> (*ms) # SKIP\n         test with a name and options provided (*ms) # SKIP\n         functionAndOptions (*ms) # SKIP\n         callback pass (*ms)\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n         sync t is this in test (*ms)\n         async t is this in test (*ms)\n         callback t is this in test (*ms)\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n         callback called twice in different ticks (*ms)\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n         callback async throw after done (*ms)\n         only is set but not in only mode\n           running subtest 1 (*ms)\n           running subtest 2 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 3 (*ms)\n           'only' and 'runOnly' require the --test-only command-line option.\n           running subtest 4 (*ms)\n         only is set but not in only mode (*ms)\n        \n         'only' and 'runOnly' require the --test-only command-line option.\n         custom inspect symbol fail (*ms)\n          customized\n        \n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n         subtest sync throw fails\n           sync throw fails at first (*ms)\n            Error: thrown from subtest sync throw fails at first\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n           sync throw fails at second (*ms)\n            Error: thrown from subtest sync throw fails at second\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n        \n         subtest sync throw fails (*ms)\n        \n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n         large timeout async test is ok (*ms)\n         large timeout callback test is ok (*ms)\n         successful thenable (*ms)\n         rejected thenable (*ms)\n          'custom error'\n        \n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        \n         Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n         Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n         Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n         Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        ### 0\n         tests 76\n         suites 0\n         pass 35\n         fail 25\n         cancelled 3\n         skipped 9\n         todo 4\n         duration_ms *\n        \n         failing tests:\n        \n        *\n         sync fail todo (*ms) # TODO\n          Error: thrown from sync fail todo\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync fail todo with message (*ms) # this is a failing todo\n          Error: thrown from sync fail todo with message\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fail (*ms)\n          Error: thrown from sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async throw fail (*ms)\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async skip fail (*ms) # SKIP\n          Error: thrown from async throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         async assertion fail (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n          \n          true !== false\n          \n              *\n              *\n              *\n              *\n              *\n              *\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: true,\n            expected: false,\n            operator: 'strictEqual'\n          }\n        \n        *\n         reject fail (*ms)\n          Error: rejected from reject fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         +sync throw fail (*ms)\n          Error: thrown from subtest sync throw fail\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw non-error fail (*ms)\n          Symbol(thrown symbol from sync throw non-error fail)\n        \n        *\n         +long running (*ms)\n          'test did not finish before its parent and was cancelled'\n        \n        *\n         sync skip option is false fail (*ms)\n          Error: this should be executed\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback fail (*ms)\n          Error: callback failure\n              *\n              *\n        \n        *\n         callback also returns a Promise (*ms)\n          'passed a callback but also returned a Promise'\n        \n        *\n         callback throw (*ms)\n          Error: thrown from callback throw\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         callback called twice (*ms)\n          'callback invoked multiple times'\n        \n        *\n         callback called twice in future tick (*ms)\n          Error [ERR_TEST_FAILURE]: callback invoked multiple times\n              * {\n            code: 'ERR_TEST_FAILURE',\n            failureType: 'multipleCallbackInvocations',\n            cause: 'callback invoked multiple times'\n          }\n        \n        *\n         callback async throw (*ms)\n          Error: thrown from callback async throw\n              *\n              *\n        \n        *\n         custom inspect symbol fail (*ms)\n          customized\n        \n        *\n         custom inspect symbol that throws fail (*ms)\n          { foo: 1 }\n        \n        *\n         sync throw fails at first (*ms)\n          Error: thrown from subtest sync throw fails at first\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         sync throw fails at second (*ms)\n          Error: thrown from subtest sync throw fails at second\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n              *\n        \n        *\n         timed out async test (*ms)\n          'test timed out after *ms'\n        \n        *\n         timed out callback test (*ms)\n          'test timed out after *ms'\n        \n        *\n         rejected thenable (*ms)\n          'custom error'\n        \n        *\n         unfinished test with uncaughtException (*ms)\n          Error: foo\n              *\n              *\n              *\n        \n        *\n         unfinished test with unhandledRejection (*ms)\n          Error: bar\n              *\n              *\n              *\n        \n        *\n         assertion errors display actual and expected properly (*ms)\n          AssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n          \n          {\n            bar: 1,\n            foo: 1\n          }\n          \n          should loosely deep-equal\n          \n          <ref *1> {\n            bar: 2,\n            c: [Circular *1]\n          }\n              * {\n            generatedMessage: true,\n            code: 'ERR_ASSERTION',\n            actual: { foo: 1, bar: 1 },\n            expected: <ref *1> { bar: 2, c: [Circular *1] },\n            operator: 'deepEqual'\n          }\n        \n        *\n         invalid subtest fail (*ms)\n          'test could not be started because its parent finished'\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 19)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/lcov_reporter.js\n    ok 21 - test-runner/output/lcov_reporter.js\n      ---\n      duration_ms: 2123.1975\n      ...\n    # Subtest: test-runner/output/output.js\n    not ok 22 - test-runner/output/output.js\n      ---\n      duration_ms: 1543.1885\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '      ...\\n' +\n            \"    # 'only' and 'runOnly' require the --test-only command-line option.\\n\" +\n        +   '    '... 6851 more characters\n        -   '    '... 6845 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..62\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 76\n        # suites 0\n        # pass 35\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..62\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # tests 76\n        # suites 0\n        # pass 35\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 21)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/output_cli.js\n    not ok 23 - test-runner/output/output_cli.js\n      ---\n      duration_ms: 2366.9744\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: sync pass todo\\n' +\n        ...\n            '      ...\\n' +\n            \"    # 'only' and 'runOnly' require the --test-only command-line option.\\n\" +\n        +   '    '... 6941 more characters\n        -   '    '... 6913 more characters\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Subtest: last test\n        ok 63 - last test\n          ---\n          duration_ms: *\n          ...\n        1..63\n        # tests 77\n        # suites 0\n        # pass 36\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: sync pass todo\n        ok 1 - sync pass todo # TODO\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass todo with message\n        ok 2 - sync pass todo with message # TODO this is a passing todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync fail todo\n        not ok 3 - sync fail todo # TODO\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync fail todo with message\n        not ok 4 - sync fail todo with message # TODO this is a failing todo\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync fail todo with message'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: sync skip pass\n        ok 5 - sync skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip pass with message\n        ok 6 - sync skip pass with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync pass\n        ok 7 - sync pass\n          ---\n          duration_ms: *\n          ...\n        # this test should pass\n        # Subtest: sync throw fail\n        not ok 8 - sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from sync throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip pass\n        ok 9 - async skip pass # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async pass\n        ok 10 - async pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async throw fail\n        not ok 11 - async throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async skip fail\n        not ok 12 - async skip fail # SKIP\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from async throw fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: async assertion fail\n        not ok 13 - async assertion fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be strictly equal:\n            \n            true !== false\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected: false\n          actual: true\n          operator: 'strictEqual'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: resolve pass\n        ok 14 - resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: reject fail\n        not ok 15 - reject fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'rejected from reject fail'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: unhandled rejection - passes but warns\n        ok 16 - unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async unhandled rejection - passes but warns\n        ok 17 - async unhandled rejection - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate throw - passes but warns\n        ok 18 - immediate throw - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate reject - passes but warns\n        ok 19 - immediate reject - passes but warns\n          ---\n          duration_ms: *\n          ...\n        # Subtest: immediate resolve pass\n        ok 20 - immediate resolve pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: subtest sync throw fail\n            # Subtest: +sync throw fail\n            not ok 1 - +sync throw fail\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fail'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # this subtest should make its parent test fail\n            1..1\n        not ok 21 - subtest sync throw fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: sync throw non-error fail\n        not ok 22 - sync throw non-error fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'Symbol(thrown symbol from sync throw non-error fail)'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: level 0a\n            # Subtest: level 1a\n            ok 1 - level 1a\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1b\n            ok 2 - level 1b\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1c\n            ok 3 - level 1c\n              ---\n              duration_ms: *\n              ...\n            # Subtest: level 1d\n            ok 4 - level 1d\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 23 - level 0a\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level\n            # Subtest: +long running\n            not ok 1 - +long running\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):5'\n              failureType: 'cancelledByParent'\n              error: 'test did not finish before its parent and was cancelled'\n              code: 'ERR_TEST_FAILURE'\n              ...\n            # Subtest: +short running\n                # Subtest: ++short running\n                ok 1 - ++short running\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 2 - +short running\n              ---\n              duration_ms: *\n              ...\n            1..2\n        not ok 24 - top level\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '1 subtest failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: invalid subtest - pass but subtest fails\n        ok 25 - invalid subtest - pass but subtest fails\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option\n        ok 26 - sync skip option # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option with message\n        ok 27 - sync skip option with message # SKIP this is skipped\n          ---\n          duration_ms: *\n          ...\n        # Subtest: sync skip option is false fail\n        not ok 28 - sync skip option is false fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'this should be executed'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: <anonymous>\n        ok 29 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionOnly\n        ok 30 - functionOnly\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 31 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with only a name provided\n        ok 32 - test with only a name provided\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 33 - <anonymous>\n          ---\n          duration_ms: *\n          ...\n        # Subtest: <anonymous>\n        ok 34 - <anonymous> # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: test with a name and options provided\n        ok 35 - test with a name and options provided # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: functionAndOptions\n        ok 36 - functionAndOptions # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback pass\n        ok 37 - callback pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback fail\n        not ok 38 - callback fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'callback failure'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: sync t is this in test\n        ok 39 - sync t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: async t is this in test\n        ok 40 - async t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback t is this in test\n        ok 41 - callback t is this in test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback also returns a Promise\n        not ok 42 - callback also returns a Promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'callbackAndPromisePresent'\n          error: 'passed a callback but also returned a Promise'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: callback throw\n        not ok 43 - callback throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'thrown from callback throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n            *\n            *\n            *\n            *\n          ...\n        # Subtest: callback called twice\n        not ok 44 - callback called twice\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'multipleCallbackInvocations'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback called twice in different ticks\n        ok 45 - callback called twice in different ticks\n          ---\n          duration_ms: *\n          ...\n        # Subtest: callback called twice in future tick\n        not ok 46 - callback called twice in future tick\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'callback invoked multiple times'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: callback async throw\n        not ok 47 - callback async throw\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'thrown from callback async throw'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n          ...\n        # Subtest: callback async throw after done\n        ok 48 - callback async throw after done\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only is set but not in only mode\n            # Subtest: running subtest 1\n            ok 1 - running subtest 1\n              ---\n              duration_ms: *\n              ...\n            # Subtest: running subtest 2\n            ok 2 - running subtest 2\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 3\n            ok 3 - running subtest 3\n              ---\n              duration_ms: *\n              ...\n            # 'only' and 'runOnly' require the --test-only command-line option.\n            # Subtest: running subtest 4\n            ok 4 - running subtest 4\n              ---\n              duration_ms: *\n              ...\n            1..4\n        ok 49 - only is set but not in only mode\n          ---\n          duration_ms: *\n          ...\n        # 'only' and 'runOnly' require the --test-only command-line option.\n        # Subtest: custom inspect symbol fail\n        not ok 50 - custom inspect symbol fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'customized'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: custom inspect symbol that throws fail\n        not ok 51 - custom inspect symbol that throws fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            {\n              foo: 1,\n              [Symbol(nodejs.util.inspect.custom)]: [Function: [nodejs.util.inspect.custom]]\n            }\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: subtest sync throw fails\n            # Subtest: sync throw fails at first\n            not ok 1 - sync throw fails at first\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at first'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            # Subtest: sync throw fails at second\n            not ok 2 - sync throw fails at second\n              ---\n              duration_ms: *\n              location: '/test/fixtures/test-runner/output/output.js:(LINE):11'\n              failureType: 'testCodeFailure'\n              error: 'thrown from subtest sync throw fails at second'\n              code: 'ERR_TEST_FAILURE'\n              stack: |-\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n                *\n              ...\n            1..2\n        not ok 52 - subtest sync throw fails\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'subtestsFailed'\n          error: '2 subtests failed'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out async test\n        not ok 53 - timed out async test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: timed out callback test\n        not ok 54 - timed out callback test\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testTimeoutFailure'\n          error: 'test timed out after 5ms'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: large timeout async test is ok\n        ok 55 - large timeout async test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: large timeout callback test is ok\n        ok 56 - large timeout callback test is ok\n          ---\n          duration_ms: *\n          ...\n        # Subtest: successful thenable\n        ok 57 - successful thenable\n          ---\n          duration_ms: *\n          ...\n        # Subtest: rejected thenable\n        not ok 58 - rejected thenable\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: 'custom error'\n          code: 'ERR_TEST_FAILURE'\n          ...\n        # Subtest: unfinished test with uncaughtException\n        not ok 59 - unfinished test with uncaughtException\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'uncaughtException'\n          error: 'foo'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: unfinished test with unhandledRejection\n        not ok 60 - unfinished test with unhandledRejection\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'unhandledRejection'\n          error: 'bar'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n            *\n            *\n          ...\n        # Subtest: assertion errors display actual and expected properly\n        not ok 61 - assertion errors display actual and expected properly\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):1'\n          failureType: 'testCodeFailure'\n          error: |-\n            Expected values to be loosely deep-equal:\n            \n            {\n              bar: 1,\n              foo: 1\n            }\n            \n            should loosely deep-equal\n            \n            <ref *1> {\n              bar: 2,\n              c: [Circular *1]\n            }\n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n            bar: 2\n            c: <Circular>\n          actual:\n            foo: 1\n            bar: 1\n          operator: 'deepEqual'\n          stack: |-\n            *\n          ...\n        # Subtest: invalid subtest fail\n        not ok 62 - invalid subtest fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/output.js:(LINE):7'\n          failureType: 'parentAlreadyFinished'\n          error: 'test could not be started because its parent finished'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Warning: Test \"unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"async unhandled rejection - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from async unhandled rejection fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: A resource generated asynchronous activity after the test ended. This activity created the error \"Error: uncaught from outside of a test\" which triggered an uncaughtException event, caught by the test runner.\n        # Warning: Test \"immediate throw - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from immediate throw fail\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"immediate reject - passes but warns\" generated asynchronous activity after the test ended. This activity created the error \"Error: rejected from immediate reject fail\" and would have caused the test to fail, but instead triggered an unhandledRejection event.\n        # Warning: Test \"callback called twice in different ticks\" generated asynchronous activity after the test ended. This activity created the error \"Error [ERR_TEST_FAILURE]: callback invoked multiple times\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # Warning: Test \"callback async throw after done\" generated asynchronous activity after the test ended. This activity created the error \"Error: thrown from callback async throw after done\" and would have caused the test to fail, but instead triggered an uncaughtException event.\n        # /#/#/# 0\n        # Subtest: last test\n        ok 63 - last test\n          ---\n          duration_ms: *\n          ...\n        # /#/#/# 0\n        1..63\n        # tests 77\n        # suites 0\n        # pass 36\n        # fail 25\n        # cancelled 3\n        # skipped 9\n        # todo 4\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 22)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/name_pattern.js\n    not ok 24 - test-runner/output/name_pattern.js\n      ---\n      duration_ms: 1111.4707\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: top level test disabled\\n' +\n        ...\n            '# skipped 8\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: top level test disabled\n        ok 1 - top level test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test disabled\n        ok 2 - top level skipped test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test enabled\n        ok 3 - top level skipped test enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it enabled\n        ok 4 - top level it enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it disabled\n        ok 5 - top level it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it disabled\n        ok 6 - top level skipped it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it enabled\n        ok 7 - top level skipped it enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe never disabled\n        ok 8 - top level describe never disabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe disabled\n        ok 9 - top level skipped describe disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe enabled\n        ok 10 - top level skipped describe enabled # SKIP\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level runs because name includes PaTtErN\n        ok 11 - top level runs because name includes PaTtErN\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level test enabled\n            # Subtest: nested test runs because name includes PATTERN\n            ok 1 - nested test runs because name includes PATTERN\n              ---\n              duration_ms: *\n              ...\n            1..1\n        ok 12 - top level test enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe enabled\n            # Subtest: nested it not disabled\n            ok 1 - nested it not disabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested it enabled\n            ok 2 - nested it enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested describe not disabled\n            ok 3 - nested describe not disabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            # Subtest: nested describe enabled\n                # Subtest: is enabled\n                ok 1 - is enabled\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 4 - nested describe enabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..4\n        ok 13 - top level describe enabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: yes\n            # Subtest: no\n            ok 1 - no\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 14 - yes\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: no\n            # Subtest: no\n            ok 1 - no # SKIP test name does not match pattern\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no # SKIP test name does not match pattern\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 15 - no\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..15\n        # tests 21\n        # suites 10\n        # pass 13\n        # fail 0\n        # cancelled 0\n        # skipped 8\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: top level test disabled\n        ok 1 - top level test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test disabled\n        ok 2 - top level skipped test disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped test enabled\n        ok 3 - top level skipped test enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it enabled\n        ok 4 - top level it enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level it disabled\n        ok 5 - top level it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it disabled\n        ok 6 - top level skipped it disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level skipped it enabled\n        ok 7 - top level skipped it enabled # SKIP\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe never disabled\n        ok 8 - top level describe never disabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe disabled\n        ok 9 - top level skipped describe disabled # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level skipped describe enabled\n        ok 10 - top level skipped describe enabled # SKIP\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: top level runs because name includes PaTtErN\n        ok 11 - top level runs because name includes PaTtErN\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level test enabled\n            # Subtest: nested test runs because name includes PATTERN\n            ok 1 - nested test runs because name includes PATTERN\n              ---\n              duration_ms: *\n              ...\n            1..1\n        ok 12 - top level test enabled\n          ---\n          duration_ms: *\n          ...\n        # Subtest: top level describe enabled\n            # Subtest: nested it not disabled\n            ok 1 - nested it not disabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested it enabled\n            ok 2 - nested it enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: nested describe not disabled\n            ok 3 - nested describe not disabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            # Subtest: nested describe enabled\n                # Subtest: is enabled\n                ok 1 - is enabled\n                  ---\n                  duration_ms: *\n                  ...\n                1..1\n            ok 4 - nested describe enabled\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..4\n        ok 13 - top level describe enabled\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: yes\n            # Subtest: no\n            ok 1 - no\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 14 - yes\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: no\n            # Subtest: no\n            ok 1 - no # SKIP test name does not match pattern\n              ---\n              duration_ms: *\n              ...\n            # Subtest: yes\n            ok 2 - yes\n              ---\n              duration_ms: *\n              ...\n            # Subtest: maybe\n                # Subtest: no\n                ok 1 - no # SKIP test name does not match pattern\n                  ---\n                  duration_ms: *\n                  ...\n                # Subtest: yes\n                ok 2 - yes\n                  ---\n                  duration_ms: *\n                  ...\n                1..2\n            ok 3 - maybe\n              ---\n              duration_ms: *\n              type: 'suite'\n              ...\n            1..3\n        ok 15 - no\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        1..15\n        # tests 21\n        # suites 10\n        # pass 13\n        # fail 0\n        # cancelled 0\n        # skipped 8\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 23)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/name_pattern_with_only.js\n    not ok 25 - test-runner/output/name_pattern_with_only.js\n      ---\n      duration_ms: 1026.3338\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: enabled and only\\n' +\n        ...\n            '# skipped 3\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: enabled and only\n            # Subtest: enabled\n            ok 1 - enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: disabled but parent not\n            ok 2 - disabled but parent not\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 1 - enabled and only\n          ---\n          duration_ms: *\n          ...\n        # Subtest: enabled but not only\n        ok 2 - enabled but not only # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only does not match pattern\n        ok 3 - only does not match pattern # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: not only and does not match pattern\n        ok 4 - not only and does not match pattern # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        1..4\n        # tests 6\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 3\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: enabled and only\n            # Subtest: enabled\n            ok 1 - enabled\n              ---\n              duration_ms: *\n              ...\n            # Subtest: disabled but parent not\n            ok 2 - disabled but parent not\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 1 - enabled and only\n          ---\n          duration_ms: *\n          ...\n        # Subtest: enabled but not only\n        ok 2 - enabled but not only # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        # Subtest: only does not match pattern\n        ok 3 - only does not match pattern # SKIP test name does not match pattern\n          ---\n          duration_ms: *\n          ...\n        # Subtest: not only and does not match pattern\n        ok 4 - not only and does not match pattern # SKIP 'only' option not set\n          ---\n          duration_ms: *\n          ...\n        1..4\n        # tests 6\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 3\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 24)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/unresolved_promise.js\n    not ok 26 - test-runner/output/unresolved_promise.js\n      ---\n      duration_ms: 1016.7448\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: pass\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: pass\n        ok 1 - pass\n          ---\n          duration_ms: *\n          ...\n        # Subtest: never resolving promise\n        not ok 2 - never resolving promise\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        # Subtest: fail\n        not ok 3 - fail\n          ---\n          duration_ms: *\n          location: '/test/fixtures/test-runner/output/unresolved_promise.js:(LINE):1'\n          failureType: 'cancelledByParent'\n          error: 'Promise resolution is still pending but the event loop has already resolved'\n          code: 'ERR_TEST_FAILURE'\n          stack: |-\n            *\n          ...\n        1..3\n        # tests 3\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 2\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 25)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/default_output.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 0.613\n          ...\n        1..1\n    ok 27 - test-runner/output/default_output.js\n      ---\n      duration_ms: 40.5938\n      ...\n    # Subtest: test-runner/output/arbitrary-output.js\n    not ok 28 - test-runner/output/arbitrary-output.js\n      ---\n      duration_ms: 1382.8719\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            'ok 1 - test\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - pre\n        ok 2 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - mid\n        ok 3 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - post\n        1..3\n        # tests 3\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - pre\n        ok 2 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - mid\n        ok 3 - test\n          ---\n          duration_ms: *\n          ...\n        # arbitrary - post\n        1..3\n        # tests 3\n        # suites 0\n        # pass 3\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 27)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/async-test-scheduling.mjs\n    not ok 29 - test-runner/output/async-test-scheduling.mjs\n      ---\n      duration_ms: 1242.4994\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: test\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: test\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: suite\n            # Subtest: test\n            ok 1 - test\n              ---\n              duration_ms: *\n              ...\n            # Subtest: scheduled async\n            ok 2 - scheduled async\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 2 - suite\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: scheduled async\n        ok 3 - scheduled async\n          ---\n          duration_ms: *\n          ...\n        1..3\n        # tests 4\n        # suites 1\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: test\n        ok 1 - test\n          ---\n          duration_ms: *\n          ...\n        # Subtest: suite\n            # Subtest: test\n            ok 1 - test\n              ---\n              duration_ms: *\n              ...\n            # Subtest: scheduled async\n            ok 2 - scheduled async\n              ---\n              duration_ms: *\n              ...\n            1..2\n        ok 2 - suite\n          ---\n          duration_ms: *\n          type: 'suite'\n          ...\n        # Subtest: scheduled async\n        ok 3 - scheduled async\n          ---\n          duration_ms: *\n          ...\n        1..3\n        # tests 4\n        # suites 1\n        # pass 4\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 28)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/arbitrary-output-colored.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 1.7552\n          ...\n        1..1\n    ok 30 - test-runner/output/arbitrary-output-colored.js\n      ---\n      duration_ms: 21.6512\n      ...\n    # Subtest: test-runner/output/dot_output_custom_columns.js\n        # Subtest: <anonymous>\n        ok 1 - <anonymous> # SKIP Skipping pseudo-tty tests, as pseudo terminals are not available on Windows.\n          ---\n          duration_ms: 1.7318\n          ...\n        1..1\n    ok 31 - test-runner/output/dot_output_custom_columns.js\n      ---\n      duration_ms: 21.5457\n      ...\n    # Subtest: test-runner/output/tap_escape.js\n    not ok 32 - test-runner/output/tap_escape.js\n      ---\n      duration_ms: 1026.7923\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: escaped description \\\\\\\\ \\\\# \\\\\\\\\\\\#\\\\\\\\ \\\\\\\\n \\\\\\\\t \\\\\\\\f \\\\\\\\v \\\\\\\\b \\\\\\\\r\\n' +\n        ...\n            '# skipped 1\\n' +\n            '# todo 1\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n        ok 1 - escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped skip message\n        ok 2 - escaped skip message # SKIP \\#skip\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped todo message\n        ok 3 - escaped todo message # TODO \\#todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped diagnostic\n        ok 4 - escaped diagnostic\n          ---\n          duration_ms: *\n          ...\n        # \\#diagnostic\n        1..4\n        # tests 4\n        # suites 0\n        # pass 2\n        # fail 0\n        # cancelled 0\n        # skipped 1\n        # todo 1\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n        ok 1 - escaped description \\\\ \\# \\\\\\#\\\\ \\\\n \\\\t \\\\f \\\\v \\\\b \\\\r\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped skip message\n        ok 2 - escaped skip message # SKIP \\#skip\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped todo message\n        ok 3 - escaped todo message # TODO \\#todo\n          ---\n          duration_ms: *\n          ...\n        # Subtest: escaped diagnostic\n        ok 4 - escaped diagnostic\n          ---\n          duration_ms: *\n          ...\n        # \\#diagnostic\n        1..4\n        # tests 4\n        # suites 0\n        # pass 2\n        # fail 0\n        # cancelled 0\n        # skipped 1\n        # todo 1\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 31)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: test-runner/output/coverage_failure.js\n    not ok 33 - test-runner/output/coverage_failure.js\n      ---\n      duration_ms: 1102.4182\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:142:5'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected ... Lines skipped\n        \n          'TAP version 13\\n' +\n            '# Subtest: ok\\n' +\n        ...\n            '# skipped 0\\n' +\n            '# todo 0\\n' +\n        +   '# duration_ms *\\n' +\n        +   '### 0\\n'\n        -   '# duration_ms *\\n'\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: |-\n        TAP version 13\n        # Subtest: ok\n        ok 1 - ok\n          ---\n          duration_ms: *\n          ...\n        1..1\n        # Warning: Could not report code coverage. Error: Failed to collect coverage\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        \n      actual: |-\n        TAP version 13\n        # Subtest: ok\n        ok 1 - ok\n          ---\n          duration_ms: *\n          ...\n        1..1\n        # Warning: Could not report code coverage. Error: Failed to collect coverage\n        # tests 1\n        # suites 0\n        # pass 1\n        # fail 0\n        # cancelled 0\n        # skipped 0\n        # todo 0\n        # duration_ms *\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        assertSnapshot (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:56:12)\n        async Module.spawnAndAssert (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\assertSnapshot.js:84:3)\n        async TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:136:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 32)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    1..33\nnot ok 1 - test runner output\n  ---\n  duration_ms: 2870.1217\n  type: 'suite'\n  location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-output.mjs:140:1'\n  failureType: 'subtestsFailed'\n  error: '26 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 36\n# suites 1\n# pass 7\n# fail 26\n# cancelled 0\n# skipped 3\n# todo 0\n# duration_ms 2893.6199\n### 0"},"time":3412.817,"fullname":"parallel/test-runner-output","closingTestPoint":false}},{"testName":"parallel/test-stream-duplex-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-duplex-destroy","id":676,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:173\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-duplex-destroy.js:127\n    at Duplex.mustNotCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:554:12)\n    at Duplex.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v22.0.0-pre"},"time":289.557,"fullname":"parallel/test-stream-duplex-destroy","closingTestPoint":false}},{"testName":"parallel/test-stream-readable-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 3,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=3,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-readable-destroy","id":694,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:173\n  throw err;\n  ^\n\nAssertionError [ERR_ASSERTION]: function should not have been called at d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-readable-destroy.js:118\n    at Readable.mustNotCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:554:12)\n    at Readable.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  generatedMessage: false,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: undefined,\n  operator: 'fail'\n}\n\nNode.js v22.0.0-pre"},"time":291.394,"fullname":"parallel/test-stream-readable-destroy","closingTestPoint":false}},{"testName":"parallel/test-net-connect-abort-controller","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-net-connect-abort-controller","id":528,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/process/promises:289\n            triggerUncaughtException(err, true /* fromPromise */);\n            ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'AssertionError'\n- 'AbortError'\n    at assertAbort (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:26:14)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async testConstructorPostTick (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:81:5)\n    at async Server.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:89:3) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'AssertionError',\n  expected: 'AbortError',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":353.998,"fullname":"parallel/test-net-connect-abort-controller","closingTestPoint":false}},{"testName":"parallel/test-runner-coverage","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-coverage","id":668,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test coverage report\n    # Subtest: handles the inspector not being available\n    ok 1 - handles the inspector not being available\n      ---\n      duration_ms: 3.666\n      ...\n    1..1\nok 1 - test coverage report\n  ---\n  duration_ms: 10.8046\n  ...\n# Subtest: test tap coverage reporter\n    # Subtest: coverage is reported and dumped to NODE_V8_COVERAGE if present\n    not ok 1 - coverage is reported and dumped to NODE_V8_COVERAGE if present\n      ---\n      duration_ms: 513.7305\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:85:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:93:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:85:11)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n        Test.postRun (node:internal/test_runner/test:715:19)\n      ...\n    # Subtest: coverage is reported without NODE_V8_COVERAGE present\n    not ok 2 - coverage is reported without NODE_V8_COVERAGE present\n      ---\n      duration_ms: 430.6877\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:98:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:105:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:98:11)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n      ...\n    1..2\nnot ok 2 - test tap coverage reporter\n  ---\n  duration_ms: 947.0496\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:84:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: test spec coverage reporter\n    # Subtest: coverage is reported and dumped to NODE_V8_COVERAGE if present\n    not ok 1 - coverage is reported and dumped to NODE_V8_COVERAGE if present\n      ---\n      duration_ms: 392.1575\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:112:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:120:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:112:11)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n        Test.postRun (node:internal/test_runner/test:715:19)\n      ...\n    # Subtest: coverage is reported without NODE_V8_COVERAGE present\n    not ok 2 - coverage is reported without NODE_V8_COVERAGE present\n      ---\n      duration_ms: 357.3022\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:125:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:132:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:125:11)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n      ...\n    1..2\nnot ok 3 - test spec coverage reporter\n  ---\n  duration_ms: 751.396\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:111:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: single process coverage is the same with --test\nnot ok 4 - single process coverage is the same with --test\n  ---\n  duration_ms: 484.3173\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:138:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:146:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n# Subtest: coverage is combined for multiple processes\nnot ok 5 - coverage is combined for multiple processes\n  ---\n  duration_ms: 724.2782\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:152:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:181:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n# Subtest: coverage reports on lines, functions, and branches\nnot ok 6 - coverage reports on lines, functions, and branches\n  ---\n  duration_ms: 627.707\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:186:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:192:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n1..6\n# tests 11\n# suites 0\n# pass 2\n# fail 9\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 3589.6851\n### 0"},"time":4076.068,"fullname":"parallel/test-runner-coverage","closingTestPoint":false}},{"testName":"parallel/test-stream-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-destroy","id":682,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\n### 0\n### 0\n### 0\n### 0\nnode:internal/process/task_queues:95\n    runMicrotasks();\n    ^\n\nError: asd\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-destroy.js:127:16\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-destroy.js:125:3)\n    at Module._compile (node:internal/modules/cjs/loader:1375:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1434:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\nEmitted 'error' event on Readable instance at:\n    at emitErrorNT (node:internal/streams/destroy:174:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:133:3)\n    at node:internal/streams/destroy:117:9\n    at node:internal/process/task_queues:140:7\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at AsyncResource.runMicrotask (node:internal/process/task_queues:137:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\nNode.js v22.0.0-pre"},"time":413.005,"fullname":"parallel/test-stream-destroy","closingTestPoint":false}},{"testName":"parallel/test-stream2-writable","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2019-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2019-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2019_vs2019-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream2-writable","id":721,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nfalse !== true\n\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream2-writable.js:319:12\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":375.991,"fullname":"parallel/test-stream2-writable","closingTestPoint":false}},{"testName":"parallel/test-net-connect-abort-controller","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-net-connect-abort-controller","id":529,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/process/promises:289\n            triggerUncaughtException(err, true /* fromPromise */);\n            ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'AssertionError'\n- 'AbortError'\n    at assertAbort (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:26:14)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async testConstructorPostTick (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:81:5)\n    at async Server.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:89:3) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'AssertionError',\n  expected: 'AbortError',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":183,"fullname":"parallel/test-net-connect-abort-controller","closingTestPoint":false}},{"testName":"parallel/test-runner-coverage","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-coverage","id":657,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test coverage report\n    # Subtest: handles the inspector not being available\n    ok 1 - handles the inspector not being available\n      ---\n      duration_ms: 0.7873\n      ...\n    1..1\nok 1 - test coverage report\n  ---\n  duration_ms: 3.2084\n  ...\n# Subtest: test tap coverage reporter\n    # Subtest: coverage is reported and dumped to NODE_V8_COVERAGE if present\n    not ok 1 - coverage is reported and dumped to NODE_V8_COVERAGE if present\n      ---\n      duration_ms: 224.7569\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:85:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:93:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:85:11)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n        Test.postRun (node:internal/test_runner/test:715:19)\n      ...\n    # Subtest: coverage is reported without NODE_V8_COVERAGE present\n    not ok 2 - coverage is reported without NODE_V8_COVERAGE present\n      ---\n      duration_ms: 227.0012\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:98:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:105:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:98:11)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n      ...\n    1..2\nnot ok 2 - test tap coverage reporter\n  ---\n  duration_ms: 452.719\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:84:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: test spec coverage reporter\n    # Subtest: coverage is reported and dumped to NODE_V8_COVERAGE if present\n    not ok 1 - coverage is reported and dumped to NODE_V8_COVERAGE if present\n      ---\n      duration_ms: 196.0688\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:112:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:120:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:112:11)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n        Test.postRun (node:internal/test_runner/test:715:19)\n      ...\n    # Subtest: coverage is reported without NODE_V8_COVERAGE present\n    not ok 2 - coverage is reported without NODE_V8_COVERAGE present\n      ---\n      duration_ms: 173.249\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:125:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:132:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:125:11)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n      ...\n    1..2\nnot ok 3 - test spec coverage reporter\n  ---\n  duration_ms: 370.0175\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:111:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: single process coverage is the same with --test\nnot ok 4 - single process coverage is the same with --test\n  ---\n  duration_ms: 271.194\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:138:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:146:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n# Subtest: coverage is combined for multiple processes\nnot ok 5 - coverage is combined for multiple processes\n  ---\n  duration_ms: 380.8971\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:152:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:181:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n# Subtest: coverage reports on lines, functions, and branches\nnot ok 6 - coverage reports on lines, functions, and branches\n  ---\n  duration_ms: 257.4962\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:186:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:192:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n1..6\n# tests 11\n# suites 0\n# pass 2\n# fail 9\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 1757.4107\n### 0"},"time":2079.986,"fullname":"parallel/test-runner-coverage","closingTestPoint":false}},{"testName":"parallel/test-stream-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-destroy","id":677,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\n### 0\n### 0\n### 0\n### 0\nnode:internal/process/task_queues:95\n    runMicrotasks();\n    ^\n\nError: asd\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-destroy.js:127:16\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-destroy.js:125:3)\n    at Module._compile (node:internal/modules/cjs/loader:1375:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1434:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\nEmitted 'error' event on Readable instance at:\n    at emitErrorNT (node:internal/streams/destroy:174:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:133:3)\n    at node:internal/streams/destroy:117:9\n    at node:internal/process/task_queues:140:7\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at AsyncResource.runMicrotask (node:internal/process/task_queues:137:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\nNode.js v22.0.0-pre"},"time":193.995,"fullname":"parallel/test-stream-destroy","closingTestPoint":false}},{"testName":"parallel/test-stream2-writable","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-6","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream2-writable","id":721,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nfalse !== true\n\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream2-writable.js:319:12\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":180.002,"fullname":"parallel/test-stream2-writable","closingTestPoint":false}},{"testName":"parallel/test-net-connect-abort-controller","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-3","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-net-connect-abort-controller","id":526,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/process/promises:289\n            triggerUncaughtException(err, true /* fromPromise */);\n            ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'AssertionError'\n- 'AbortError'\n    at assertAbort (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:26:14)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async testConstructorPostTick (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:81:5)\n    at async Server.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:89:3) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'AssertionError',\n  expected: 'AbortError',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":325.004,"fullname":"parallel/test-net-connect-abort-controller","closingTestPoint":false}},{"testName":"parallel/test-runner-coverage","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-3","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-coverage","id":672,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test coverage report\n    # Subtest: handles the inspector not being available\n    ok 1 - handles the inspector not being available\n      ---\n      duration_ms: 1.2112\n      ...\n    1..1\nok 1 - test coverage report\n  ---\n  duration_ms: 3.9363\n  ...\n# Subtest: test tap coverage reporter\n    # Subtest: coverage is reported and dumped to NODE_V8_COVERAGE if present\n    not ok 1 - coverage is reported and dumped to NODE_V8_COVERAGE if present\n      ---\n      duration_ms: 505.0506\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:85:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:93:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:85:11)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n        Test.postRun (node:internal/test_runner/test:715:19)\n      ...\n    # Subtest: coverage is reported without NODE_V8_COVERAGE present\n    not ok 2 - coverage is reported without NODE_V8_COVERAGE present\n      ---\n      duration_ms: 333.5316\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:98:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:105:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:98:11)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n      ...\n    1..2\nnot ok 2 - test tap coverage reporter\n  ---\n  duration_ms: 840.0018\n  location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:84:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: test spec coverage reporter\n    # Subtest: coverage is reported and dumped to NODE_V8_COVERAGE if present\n    not ok 1 - coverage is reported and dumped to NODE_V8_COVERAGE if present\n      ---\n      duration_ms: 418.6403\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:112:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:120:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:112:11)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n        Test.postRun (node:internal/test_runner/test:715:19)\n      ...\n    # Subtest: coverage is reported without NODE_V8_COVERAGE present\n    not ok 2 - coverage is reported without NODE_V8_COVERAGE present\n      ---\n      duration_ms: 366.7139\n      location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:125:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:132:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:125:11)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n      ...\n    1..2\nnot ok 3 - test spec coverage reporter\n  ---\n  duration_ms: 786.1118\n  location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:111:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: single process coverage is the same with --test\nnot ok 4 - single process coverage is the same with --test\n  ---\n  duration_ms: 547.9382\n  location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:138:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:146:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n# Subtest: coverage is combined for multiple processes\nnot ok 5 - coverage is combined for multiple processes\n  ---\n  duration_ms: 634.9369\n  location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:152:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:181:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n# Subtest: coverage reports on lines, functions, and branches\nnot ok 6 - coverage reports on lines, functions, and branches\n  ---\n  duration_ms: 609.8859\n  location: 'd:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:186:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:192:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n1..6\n# tests 11\n# suites 0\n# pass 2\n# fail 9\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 3449.1133\n### 0"},"time":3869.988,"fullname":"parallel/test-runner-coverage","closingTestPoint":false}},{"testName":"parallel/test-stream-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-3","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-destroy","id":675,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\n### 0\n### 0\n### 0\n### 0\nnode:internal/process/task_queues:95\n    runMicrotasks();\n    ^\n\nError: asd\n    at d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-destroy.js:127:16\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-destroy.js:125:3)\n    at Module._compile (node:internal/modules/cjs/loader:1375:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1434:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\nEmitted 'error' event on Readable instance at:\n    at emitErrorNT (node:internal/streams/destroy:174:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:133:3)\n    at node:internal/streams/destroy:117:9\n    at node:internal/process/task_queues:140:7\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at AsyncResource.runMicrotask (node:internal/process/task_queues:137:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\nNode.js v22.0.0-pre"},"time":324.998,"fullname":"parallel/test-stream-destroy","closingTestPoint":false}},{"testName":"parallel/test-stream2-writable","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-3","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream2-writable","id":721,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nfalse !== true\n\n    at d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream2-writable.js:319:12\n    at d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":326.996,"fullname":"parallel/test-stream2-writable","closingTestPoint":false}},{"testName":"parallel/test-runner-inspect","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-inspect","id":650,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[test] Connecting to a child Node process\n[test] Testing /json/list\n[err] (node:6456) Warning: Using the inspector with --test forces running at a concurrency of 1. Use the inspectPort option to run with concurrency\n[err] (Use `node --trace-warnings ...` to show where the warning was created)\n[err] \n[out] TAP version 13\n[out] \n[err] Debugger listening on ws://127.0.0.1:60244/14bf8fcc-99bd-4ebf-83c0-6064ec755961\n[err] For help, see: https://nodejs.org/en/docs/inspector\n[err] \n[err] Debugger attached.\n[err] \n[err] For help, see: https://nodejs.org/en/docs/inspector\n[err] \n[out] # Debugger ending on ws://127.0.0.1:60244/14bf8fcc-99bd-4ebf-83c0-6064ec755961\n[out] \n[out] # Subtest: this should pass\n[out] ok 1 - this should pass\n[out]   ---\n[out]   duration_ms: 1.9227\n[out]   ...\n[out] \n[out] # \\#\\#\\# 0\n[out] \n[out] 1..1\n[out] # tests 1\n[out] # suites 0\n[out] # pass 1\n[out] # fail 0\n[out] # cancelled 0\n[out] \n[out] # skipped 0\n[out] # todo 0\n[out] \n[out] # duration_ms 179.514\n[out] \n[err] ### 0\n[err] \nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '### 0\\r\\n'\n- ''\n    at file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-inspect.mjs:82:10\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '### 0\\r\\n',\n  expected: '',\n  operator: 'strictEqual'\n}\n1"},"time":1361.098,"fullname":"parallel/test-runner-inspect","closingTestPoint":false}},{"testName":"parallel/test-runner-run","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-run","id":652,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: require('node:test').run\n    # Subtest: should run with no tests\n    ok 1 - should run with no tests\n      ---\n      duration_ms: 447.9481\n      ...\n    # Subtest: should fail with non existing file\n    ok 2 - should fail with non existing file\n      ---\n      duration_ms: 512.6047\n      ...\n    # Subtest: should succeed with a file\n    ok 3 - should succeed with a file\n      ---\n      duration_ms: 652.8835\n      ...\n    # Subtest: should run same file twice\n    ok 4 - should run same file twice\n      ---\n      duration_ms: 1335.5426\n      ...\n    # Subtest: should run a failed test\n    ok 5 - should run a failed test\n      ---\n      duration_ms: 548.3523\n      ...\n    # Subtest: should support timeout\n    ok 6 - should support timeout\n      ---\n      duration_ms: 530.0344\n      ...\n    # Subtest: should be piped with dot\n    ok 7 - should be piped with dot\n      ---\n      duration_ms: 651.8868\n      ...\n    # Subtest: should be piped with spec reporter\n        # Subtest: new spec\n        not ok 1 - new spec\n          ---\n          duration_ms: 772.0591\n          location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:78:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:85:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 0)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        # Subtest: spec()\n        not ok 2 - spec()\n          ---\n          duration_ms: 660.7507\n          location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:89:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:96:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 1)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        # Subtest: spec\n        not ok 3 - spec\n          ---\n          duration_ms: 788.3073\n          location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:100:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:106:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 2)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        1..3\n    not ok 8 - should be piped with spec reporter\n      ---\n      duration_ms: 836.8446\n      type: 'suite'\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:77:3'\n      failureType: 'subtestsFailed'\n      error: '3 subtests failed'\n      code: 'ERR_TEST_FAILURE'\n      stack: |-\n        async Promise.all (index 7)\n      ...\n    # Subtest: should be piped with tap\n    not ok 9 - should be piped with tap\n      ---\n      duration_ms: 549.1836\n      location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:111:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        \n        14 !== 13\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: 13\n      actual: 14\n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:115:12)\n        process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 8)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - RegExp\n    ok 10 - should skip tests not matching testNamePatterns - RegExp\n      ---\n      duration_ms: 682.8594\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - string\n    ok 11 - should skip tests not matching testNamePatterns - string\n      ---\n      duration_ms: 970.0719\n      ...\n    # Subtest: should pass only to children\n    ok 12 - should pass only to children\n      ---\n      duration_ms: 883.0179\n      ...\n    # Subtest: should emit \"test:watch:drained\" event on watch mode\n    ok 13 - should emit \"test:watch:drained\" event on watch mode\n      ---\n      duration_ms: 421.0081\n      ...\n    # Subtest: AbortSignal\n        # Subtest: should accept a signal\n        ok 1 - should accept a signal\n          ---\n          duration_ms: 357.695\n          ...\n        # Subtest: should stop watch mode when abortSignal aborts\n        ok 2 - should stop watch mode when abortSignal aborts\n          ---\n          duration_ms: 500.1606\n          ...\n        # Subtest: should abort when test succeeded\n        ok 3 - should abort when test succeeded\n          ---\n          duration_ms: 937.4255\n          ...\n        # Subtest: should abort when test failed\n        ok 4 - should abort when test failed\n          ---\n          duration_ms: 850.4565\n          ...\n        1..4\n    ok 14 - AbortSignal\n      ---\n      duration_ms: 942.8699\n      type: 'suite'\n      ...\n    # Subtest: sharding\n        # Subtest: validation\n            # Subtest: should require shard.total when having shard option\n            ok 1 - should require shard.total when having shard option\n              ---\n              duration_ms: 3.475\n              ...\n            # Subtest: should require shard.index when having shards option\n            ok 2 - should require shard.index when having shards option\n              ---\n              duration_ms: 3.2301\n              ...\n            # Subtest: should require shard.total to be greater than 0 when having shard option\n            ok 3 - should require shard.total to be greater than 0 when having shard option\n              ---\n              duration_ms: 3.0443\n              ...\n            # Subtest: should require shard.index to be greater than 0 when having shard option\n            ok 4 - should require shard.index to be greater than 0 when having shard option\n              ---\n              duration_ms: 2.4234\n              ...\n            # Subtest: should require shard.index to not be greater than the shards total when having shard option\n            ok 5 - should require shard.index to not be greater than the shards total when having shard option\n              ---\n              duration_ms: 2.2152\n              ...\n            # Subtest: should require watch mode to be disabled when having shard option\n            ok 6 - should require watch mode to be disabled when having shard option\n              ---\n              duration_ms: 2.1423\n              ...\n            1..6\n        ok 1 - validation\n          ---\n          duration_ms: 229.5149\n          type: 'suite'\n          ...\n        # Subtest: should run only the tests files matching the shard index\n        ok 2 - should run only the tests files matching the shard index\n          ---\n          duration_ms: 1225.1482\n          ...\n        # Subtest: different shards should not run the same file\n        ok 3 - different shards should not run the same file\n          ---\n          duration_ms: 1305.7249\n          ...\n        # Subtest: combination of all shards should be all the tests\n        ok 4 - combination of all shards should be all the tests\n          ---\n          duration_ms: 1338.203\n          ...\n        1..4\n    ok 15 - sharding\n      ---\n      duration_ms: 1346.6064\n      type: 'suite'\n      ...\n    # Subtest: validation\n        # Subtest: should only allow array in options.files\n        ok 1 - should only allow array in options.files\n          ---\n          duration_ms: 284.9069\n          ...\n        # Subtest: should only allow object as options\n        ok 2 - should only allow object as options\n          ---\n          duration_ms: 282.3179\n          ...\n        1..2\n    ok 16 - validation\n      ---\n      duration_ms: 295.5431\n      type: 'suite'\n      ...\n    1..16\nnot ok 1 - require('node:test').run\n  ---\n  duration_ms: 1491.2716\n  type: 'suite'\n  location: 'file:///C:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:10:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 30\n# suites 6\n# pass 26\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 1506.063\n(node:6800) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 uncaughtException listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:6800) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 unhandledRejection listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(node:6800) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 beforeExit listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0"},"time":1899.134,"fullname":"parallel/test-runner-run","closingTestPoint":false}},{"testName":"parallel/test-whatwg-webstreams-adapters-to-writablestream","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 1,win2016-COMPILED_BY-vs2022-x86 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=1,nodes=win2016-COMPILED_BY-vs2022-x86/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win2016_vs2017-x64-4","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-whatwg-webstreams-adapters-to-writablestream","id":853,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\nnode:internal/webstreams/adapters:204\n    controller.error(new AbortError());\n               ^\n\nTypeError: Cannot read properties of undefined (reading 'error')\n    at TestWritable.<anonymous> (node:internal/webstreams/adapters:204:16)\n    at TestWritable.<anonymous> (node:internal/util:522:12)\n    at TestWritable.onclose (node:internal/streams/end-of-stream:162:14)\n    at TestWritable.emit (node:events:519:28)\n    at emitCloseNT (node:internal/streams/destroy:152:10)\n    at node:internal/streams/destroy:121:9\n    at node:internal/process/task_queues:140:7\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at AsyncResource.runMicrotask (node:internal/process/task_queues:137:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\nNode.js v22.0.0-pre"},"time":180.014,"fullname":"parallel/test-whatwg-webstreams-adapters-to-writablestream","closingTestPoint":false}},{"testName":"parallel/test-net-connect-abort-controller","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-net-connect-abort-controller","id":528,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:internal/process/promises:289\n            triggerUncaughtException(err, true /* fromPromise */);\n            ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'AssertionError'\n- 'AbortError'\n    at assertAbort (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:26:14)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async testConstructorPostTick (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:81:5)\n    at async Server.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-net-connect-abort-controller.js:89:3) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'AssertionError',\n  expected: 'AbortError',\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":408.993,"fullname":"parallel/test-net-connect-abort-controller","closingTestPoint":false}},{"testName":"parallel/test-runner-coverage","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-coverage","id":673,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: test coverage report\n    # Subtest: handles the inspector not being available\n    ok 1 - handles the inspector not being available\n      ---\n      duration_ms: 4.8014\n      ...\n    1..1\nok 1 - test coverage report\n  ---\n  duration_ms: 10.89\n  ...\n# Subtest: test tap coverage reporter\n    # Subtest: coverage is reported and dumped to NODE_V8_COVERAGE if present\n    not ok 1 - coverage is reported and dumped to NODE_V8_COVERAGE if present\n      ---\n      duration_ms: 408.7374\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:85:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:93:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:85:11)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n        Test.postRun (node:internal/test_runner/test:715:19)\n      ...\n    # Subtest: coverage is reported without NODE_V8_COVERAGE present\n    not ok 2 - coverage is reported without NODE_V8_COVERAGE present\n      ---\n      duration_ms: 469.3305\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:98:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:105:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:98:11)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n      ...\n    1..2\nnot ok 2 - test tap coverage reporter\n  ---\n  duration_ms: 880.1395\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:84:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: test spec coverage reporter\n    # Subtest: coverage is reported and dumped to NODE_V8_COVERAGE if present\n    not ok 1 - coverage is reported and dumped to NODE_V8_COVERAGE if present\n      ---\n      duration_ms: 376.974\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:112:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:120:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:112:11)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n        Test.postRun (node:internal/test_runner/test:715:19)\n      ...\n    # Subtest: coverage is reported without NODE_V8_COVERAGE present\n    not ok 2 - coverage is reported without NODE_V8_COVERAGE present\n      ---\n      duration_ms: 336.1832\n      location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:125:11'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        + actual - expected\n        \n        + '### 0\\r\\n'\n        - ''\n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: ''\n      actual: |-\n        ### 0\n        \n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:132:12)\n        Test.runInAsyncScope (node:async_hooks:206:9)\n        Test.run (node:internal/test_runner/test:631:25)\n        Test.start (node:internal/test_runner/test:542:17)\n        TestContext.test (node:internal/test_runner/test:167:20)\n        TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:125:11)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n      ...\n    1..2\nnot ok 3 - test spec coverage reporter\n  ---\n  duration_ms: 714.7092\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:111:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n# Subtest: single process coverage is the same with --test\nnot ok 4 - single process coverage is the same with --test\n  ---\n  duration_ms: 547.2491\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:138:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:146:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n# Subtest: coverage is combined for multiple processes\nnot ok 5 - coverage is combined for multiple processes\n  ---\n  duration_ms: 652.5462\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:152:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:181:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n# Subtest: coverage reports on lines, functions, and branches\nnot ok 6 - coverage reports on lines, functions, and branches\n  ---\n  duration_ms: 558.3052\n  location: 'C:\\\\workspace\\\\node-test-binary-windows-js-suites\\\\node\\\\test\\\\parallel\\\\test-runner-coverage.js:186:1'\n  failureType: 'testCodeFailure'\n  error: |-\n    Expected values to be strictly equal:\n    + actual - expected\n    \n    + '### 0\\r\\n'\n    - ''\n  code: 'ERR_ASSERTION'\n  name: 'AssertionError'\n  expected: ''\n  actual: |-\n    ### 0\n    \n  operator: 'strictEqual'\n  stack: |-\n    TestContext.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-runner-coverage.js:192:10)\n    Test.runInAsyncScope (node:async_hooks:206:9)\n    Test.run (node:internal/test_runner/test:631:25)\n    Test.processPendingSubtests (node:internal/test_runner/test:374:18)\n    Test.postRun (node:internal/test_runner/test:715:19)\n    Test.run (node:internal/test_runner/test:673:12)\n    async Test.processPendingSubtests (node:internal/test_runner/test:374:7)\n  ...\n1..6\n# tests 11\n# suites 0\n# pass 2\n# fail 9\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 3406.1114\n### 0"},"time":3854.156,"fullname":"parallel/test-runner-coverage","closingTestPoint":false}},{"testName":"parallel/test-stream-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream-destroy","id":675,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\n### 0\n### 0\n### 0\n### 0\nnode:internal/process/task_queues:95\n    runMicrotasks();\n    ^\n\nError: asd\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-destroy.js:127:16\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream-destroy.js:125:3)\n    at Module._compile (node:internal/modules/cjs/loader:1375:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1434:10)\n    at Module.load (node:internal/modules/cjs/loader:1206:32)\n    at Module._load (node:internal/modules/cjs/loader:1022:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)\n    at node:internal/main/run_main_module:28:49\nEmitted 'error' event on Readable instance at:\n    at emitErrorNT (node:internal/streams/destroy:174:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:133:3)\n    at node:internal/streams/destroy:117:9\n    at node:internal/process/task_queues:140:7\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at AsyncResource.runMicrotask (node:internal/process/task_queues:137:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\nNode.js v22.0.0-pre"},"time":409.985,"fullname":"parallel/test-stream-destroy","closingTestPoint":false}},{"testName":"parallel/test-stream2-writable","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 0,win2022-COMPILED_BY-vs2022 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=0,nodes=win2022-COMPILED_BY-vs2022/24861/","buildNumber":24861,"builtOn":"test-rackspace-win2022_vs2022-x64-1","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-stream2-writable","id":722,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\nfalse !== true\n\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-stream2-writable.js:319:12\n    at C:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'strictEqual'\n}\n\nNode.js v22.0.0-pre"},"time":489.036,"fullname":"parallel/test-stream2-writable","closingTestPoint":false}},{"testName":"parallel/test-http2-server-stream-session-destroy","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-http2-server-stream-session-destroy","id":463,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"Mismatched noop function calls. Expected exactly 1, actual 0.\n    at Proxy.mustCall (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:434:10)\n    at Http2Server.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\parallel\\test-http2-server-stream-session-destroy.js:51:24)\n    at Http2Server.<anonymous> (d:\\workspace\\node-test-binary-windows-js-suites\\node\\test\\common\\index.js:476:15)\n    at Object.onceWrapper (node:events:633:28)\n    at Http2Server.emit (node:events:519:28)\n    at emitListeningNT (node:net:1906:10)\n    at process.processTicksAndRejections (node:internal/process/task_queues:81:21)"},"time":323.993,"fullname":"parallel/test-http2-server-stream-session-destroy","closingTestPoint":false}},{"testName":"parallel/test-runner-run","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-run","id":654,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"TAP version 13\n# Subtest: require('node:test').run\n    # Subtest: should run with no tests\n    ok 1 - should run with no tests\n      ---\n      duration_ms: 497.9433\n      ...\n    # Subtest: should fail with non existing file\n    ok 2 - should fail with non existing file\n      ---\n      duration_ms: 541.8796\n      ...\n    # Subtest: should succeed with a file\n    ok 3 - should succeed with a file\n      ---\n      duration_ms: 598.1557\n      ...\n    # Subtest: should run same file twice\n    ok 4 - should run same file twice\n      ---\n      duration_ms: 1369.0007\n      ...\n    # Subtest: should run a failed test\n    ok 5 - should run a failed test\n      ---\n      duration_ms: 766.5195\n      ...\n    # Subtest: should support timeout\n    ok 6 - should support timeout\n      ---\n      duration_ms: 591.5768\n      ...\n    # Subtest: should be piped with dot\n    ok 7 - should be piped with dot\n      ---\n      duration_ms: 883.8117\n      ...\n    # Subtest: should be piped with spec reporter\n        # Subtest: new spec\n        not ok 1 - new spec\n          ---\n          duration_ms: 961.426\n          location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:78:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:85:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 0)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        # Subtest: spec()\n        not ok 2 - spec()\n          ---\n          duration_ms: 908.7592\n          location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:89:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:96:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 1)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        # Subtest: spec\n        not ok 3 - spec\n          ---\n          duration_ms: 937.439\n          location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:100:5'\n          failureType: 'testCodeFailure'\n          error: |-\n            The input did not match the regular expression /tests 1/. Input:\n            \n            '### 0\\n'\n            \n          code: 'ERR_ASSERTION'\n          name: 'AssertionError'\n          expected:\n          actual: |-\n            ### 0\n            \n          operator: 'match'\n          stack: |-\n            TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:106:14)\n            process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n            async Test.run (node:internal/test_runner/test:632:9)\n            async Promise.all (index 2)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async Promise.all (index 7)\n            async Suite.run (node:internal/test_runner/test:948:7)\n            async startSubtest (node:internal/test_runner/harness:216:3)\n          ...\n        1..3\n    not ok 8 - should be piped with spec reporter\n      ---\n      duration_ms: 1062.7104\n      type: 'suite'\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:77:3'\n      failureType: 'subtestsFailed'\n      error: '3 subtests failed'\n      code: 'ERR_TEST_FAILURE'\n      stack: |-\n        async Promise.all (index 7)\n      ...\n    # Subtest: should be piped with tap\n    not ok 9 - should be piped with tap\n      ---\n      duration_ms: 1017.0042\n      location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:111:3'\n      failureType: 'testCodeFailure'\n      error: |-\n        Expected values to be strictly equal:\n        \n        14 !== 13\n        \n      code: 'ERR_ASSERTION'\n      name: 'AssertionError'\n      expected: 13\n      actual: 14\n      operator: 'strictEqual'\n      stack: |-\n        TestContext.<anonymous> (file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:115:12)\n        process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n        async Test.run (node:internal/test_runner/test:632:9)\n        async Promise.all (index 8)\n        async Suite.run (node:internal/test_runner/test:948:7)\n        async startSubtest (node:internal/test_runner/harness:216:3)\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - RegExp\n    ok 10 - should skip tests not matching testNamePatterns - RegExp\n      ---\n      duration_ms: 981.1237\n      ...\n    # Subtest: should skip tests not matching testNamePatterns - string\n    ok 11 - should skip tests not matching testNamePatterns - string\n      ---\n      duration_ms: 981.9655\n      ...\n    # Subtest: should pass only to children\n    ok 12 - should pass only to children\n      ---\n      duration_ms: 1107.5533\n      ...\n    # Subtest: should emit \"test:watch:drained\" event on watch mode\n    ok 13 - should emit \"test:watch:drained\" event on watch mode\n      ---\n      duration_ms: 408.8997\n      ...\n    # Subtest: AbortSignal\n        # Subtest: should accept a signal\n        ok 1 - should accept a signal\n          ---\n          duration_ms: 345.6554\n          ...\n        # Subtest: should stop watch mode when abortSignal aborts\n        ok 2 - should stop watch mode when abortSignal aborts\n          ---\n          duration_ms: 801.0568\n          ...\n        # Subtest: should abort when test succeeded\n        ok 3 - should abort when test succeeded\n          ---\n          duration_ms: 883.0728\n          ...\n        # Subtest: should abort when test failed\n        ok 4 - should abort when test failed\n          ---\n          duration_ms: 993.752\n          ...\n        1..4\n    ok 14 - AbortSignal\n      ---\n      duration_ms: 1000.3313\n      type: 'suite'\n      ...\n    # Subtest: sharding\n        # Subtest: validation\n            # Subtest: should require shard.total when having shard option\n            ok 1 - should require shard.total when having shard option\n              ---\n              duration_ms: 63.7407\n              ...\n            # Subtest: should require shard.index when having shards option\n            ok 2 - should require shard.index when having shards option\n              ---\n              duration_ms: 63.497\n              ...\n            # Subtest: should require shard.total to be greater than 0 when having shard option\n            ok 3 - should require shard.total to be greater than 0 when having shard option\n              ---\n              duration_ms: 63.2798\n              ...\n            # Subtest: should require shard.index to be greater than 0 when having shard option\n            ok 4 - should require shard.index to be greater than 0 when having shard option\n              ---\n              duration_ms: 62.5218\n              ...\n            # Subtest: should require shard.index to not be greater than the shards total when having shard option\n            ok 5 - should require shard.index to not be greater than the shards total when having shard option\n              ---\n              duration_ms: 62.3026\n              ...\n            # Subtest: should require watch mode to be disabled when having shard option\n            ok 6 - should require watch mode to be disabled when having shard option\n              ---\n              duration_ms: 62.3712\n              ...\n            1..6\n        ok 1 - validation\n          ---\n          duration_ms: 213.3727\n          type: 'suite'\n          ...\n        # Subtest: should run only the tests files matching the shard index\n        ok 2 - should run only the tests files matching the shard index\n          ---\n          duration_ms: 1373.437\n          ...\n        # Subtest: different shards should not run the same file\n        ok 3 - different shards should not run the same file\n          ---\n          duration_ms: 1540.1719\n          ...\n        # Subtest: combination of all shards should be all the tests\n        ok 4 - combination of all shards should be all the tests\n          ---\n          duration_ms: 1642.1652\n          ...\n        1..4\n    ok 15 - sharding\n      ---\n      duration_ms: 1651.2862\n      type: 'suite'\n      ...\n    # Subtest: validation\n        # Subtest: should only allow array in options.files\n        ok 1 - should only allow array in options.files\n          ---\n          duration_ms: 231.895\n          ...\n        # Subtest: should only allow object as options\n        ok 2 - should only allow object as options\n          ---\n          duration_ms: 228.3902\n          ...\n        1..2\n    ok 16 - validation\n      ---\n      duration_ms: 303.5253\n      type: 'suite'\n      ...\n    1..16\nnot ok 1 - require('node:test').run\n  ---\n  duration_ms: 1837.7345\n  type: 'suite'\n  location: 'file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-run.mjs:10:1'\n  failureType: 'subtestsFailed'\n  error: '2 subtests failed'\n  code: 'ERR_TEST_FAILURE'\n  ...\n1..1\n# tests 30\n# suites 6\n# pass 26\n# fail 4\n# cancelled 0\n# skipped 0\n# todo 0\n# duration_ms 1852.1878\n(node:11860) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 uncaughtException listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:11860) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 unhandledRejection listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n(node:11860) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 beforeExit listeners added to [process]. Use emitter.setMaxListeners() to increase limit\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0\n### 0"},"time":2582.985,"fullname":"parallel/test-runner-run","closingTestPoint":false}},{"testName":"parallel/test-runner-inspect","timestamp":1701868643568,"status":"FAILED","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-runner-inspect","id":656,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"[test] Connecting to a child Node process\n[test] Testing /json/list\n[err] (node:7284) Warning: Using the inspector with --test forces running at a concurrency of 1. Use the inspectPort option to run with concurrency\n[err] (Use `node --trace-warnings ...` to show where the warning was created)\n[err] \n[out] TAP version 13\n[out] \n[err] Debugger listening on ws://127.0.0.1:56140/58762511-584f-4bdd-a9e5-371162361aef\n[err] \n[err] For help, see: https://nodejs.org/en/docs/inspector\n[err] \n[err] Debugger attached.\n[err] For help, see: https://nodejs.org/en/docs/inspector\n[err] \n[out] # Debugger ending on ws://127.0.0.1:56140/58762511-584f-4bdd-a9e5-371162361aef\n[out] \n[out] # Subtest: this should pass\n[out] \n[out] ok 1 - this should pass\n[out] \n[out]   ---\n[out]   duration_ms: 1.5354\n[out]   ...\n[out] \n[out] # \\#\\#\\# 0\n[out] \n[out] 1..1\n[out] \n[out] # tests 1\n[out] \n[out] # suites 0\n[out] \n[out] # pass 1\n[out] \n[out] # fail 0\n[out] # cancelled 0\n[out] \n[out] # skipped 0\n[out] # todo 0\n[out] \n[out] # duration_ms 858.1068\n[out] \n[err] ### 0\n[err] \nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ '### 0\\r\\n'\n- ''\n    at file:///d:/workspace/node-test-binary-windows-js-suites/node/test/parallel/test-runner-inspect.mjs:82:10\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '### 0\\r\\n',\n  expected: '',\n  operator: 'strictEqual'\n}\n1"},"time":3146.986,"fullname":"parallel/test-runner-inspect","closingTestPoint":false}},{"testName":"parallel/test-whatwg-webstreams-adapters-to-writablestream","timestamp":1701868643568,"status":"REGRESSION","jobName":"node-test-binary-windows-js-suites","config":"node-test-binary-windows-js-suites » 2,win11-arm64-COMPILED_BY-vs2022-arm64 #24861","buildUrl":"https://ci.nodejs.org/job/node-test-binary-windows-js-suites/RUN_SUBSET=2,nodes=win11-arm64-COMPILED_BY-vs2022-arm64/24861/","buildNumber":24861,"builtOn":"test-azure_msft-win11_vs2022-arm64-5","nodeVersion":"22.0.0","commitHash":"b3d92c3c267337a94be3ee9e8e6d4b7e72a378fb","callStack":[{"upstreamBuild":59660,"upstreamProject":"node-test-commit-windows-fanned","upstreamUrl":"job/node-test-commit-windows-fanned/"},{"upstreamBuild":67140,"upstreamProject":"node-test-commit","upstreamUrl":"job/node-test-commit/"},{"upstreamBuild":56129,"upstreamProject":"node-test-pull-request","upstreamUrl":"job/node-test-pull-request/"},{"prId":"51070"}],"tap":{"ok":false,"name":"parallel/test-whatwg-webstreams-adapters-to-writablestream","id":854,"buffered":false,"tapError":null,"skip":false,"todo":false,"previous":null,"plan":null,"diag":{"severity":"fail","exitcode":1,"stack":"### 0\nnode:internal/webstreams/adapters:204\n    controller.error(new AbortError());\n               ^\n\nTypeError: Cannot read properties of undefined (reading 'error')\n    at TestWritable.<anonymous> (node:internal/webstreams/adapters:204:16)\n    at TestWritable.<anonymous> (node:internal/util:522:12)\n    at TestWritable.onclose (node:internal/streams/end-of-stream:162:14)\n    at TestWritable.emit (node:events:519:28)\n    at emitCloseNT (node:internal/streams/destroy:152:10)\n    at node:internal/streams/destroy:121:9\n    at node:internal/process/task_queues:140:7\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at AsyncResource.runMicrotask (node:internal/process/task_queues:137:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n\nNode.js v22.0.0-pre"},"time":307.996,"fullname":"parallel/test-whatwg-webstreams-adapters-to-writablestream","closingTestPoint":false}}]}